package bountyhunt;


import "bountyhunt/common.schema";
import "bountyhunt/gamemode.schema";
import "bountyhunt/ads.schema";

component RoomManager {
    id = 480002;

    Room room_info = 1;
    RoomState room_state = 2;
    
    command bountyhunt.Empty add_player(AddPlayerRequest);
    command bountyhunt.Empty remove_player(RemovePlayerRequest);
    command bountyhunt.Empty ready_to_join(ReadyToJoinRequest);
    command bountyhunt.Empty add_roombound_object(AddRoomBountyObjectRequest);
    command bountyhunt.SpawnPosition get_spawn_position(bountyhunt.Empty);
}

type AddPlayerRequest {
    string player_pk = 1;
    EntityId player_id = 2;
}

type RemovePlayerRequest {
    string player_pk = 1;
}

type ReadyToJoinRequest {
    EntityId player_id = 1;
    string player_pubkey = 2;
}

type AddRoomBountyObjectRequest{
    EntityId entity_id = 1;
}

type Room {
    RoomBaseInfo info = 1;
    RoomGameModeInfo game_mode_info = 2;
    RoomPlayerInfo player_info = 3;
    RoomFinanceInfo finance_info = 4;
}

enum RoomState {
        CREATED = 0;
        STARTED = 1;
        ENDED = 2;
}

type RoomBaseInfo {
    string room_id = 1;
    MapInfo map_info = 2;
    EntityId entity_id = 3;
    bountyhunt.Vector3Float origin = 4;
    int64 start_time = 5;
}

type RoomGameModeInfo {
    list<ModeRotationItem> mode_rotation = 1;
    int32 repetitions = 2;
    int32 current_mode = 3;
    int64 current_mode_start = 4;
}

type RoomPlayerInfo {
    map<string, EntityId> active_players = 1;
    map<string, EntityId> queued_players = 2;
    int32 max_players = 3;
}

type RoomFinanceInfo {
    int64 start_sats = 1;
    int64 added_sats = 2;
    int64 spawned_sats = 3;
    option<FixedAdvertisers> fixed_advertisers = 4;
}

type FixedAdvertisers {
    list<bountyhunt.AdvertiserSource> advertisers = 1;
}

type ModeRotationItem {
    string gamemode_id = 1;
    int64 duration = 2;
}

type MapInfo {
    string map_id = 1;
    string map_data = 2;
}

