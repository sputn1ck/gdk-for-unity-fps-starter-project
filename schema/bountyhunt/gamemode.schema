package bountyhunt;

import "bountyhunt/common.schema";
import "improbable/standard_library.schema";

component RoomGameModeManager {
    id = 460002;

    RoundInfo current_round = 1;

    event RoundInfo new_round;
    event RoundInfo end_round;
    event CoundDownInfo start_countdown;


    command bountyhunt.Empty add_kill(AddKillRequest);
    command bountyhunt.Empty add_bounty(AddBountyRequest);
    command bountyhunt.Empty bounty_tick(BountyTickRequest);
}

type RoundInfo {
    GameModeInfo game_mode_info = 1;
    TimeInfo time_info = 2;
}

type TimeInfo {
    int64 start_time = 1;
    int64 duration = 2;
}

type GameModeInfo {
    string game_mode_id = 1;
    string game_mode_name = 2;
}

type CoundDownInfo {
    string next_round_id = 1;
    int32 countdown = 2;
    string next_round_name = 3;
}

type AddKillRequest {
    string killer_id = 1;
    string victim_id = 2;
    improbable.Coordinates coordinates = 3;
}

type AddBountyRequest {
    string player_id = 1;
    int64 bounty = 2;
    string reason = 3;
}

type BountyTickRequest {
    string player_id = 1;
}