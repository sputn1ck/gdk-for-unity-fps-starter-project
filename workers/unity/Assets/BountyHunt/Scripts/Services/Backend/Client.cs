// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bbh-backend/client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bbhrpc {

  /// <summary>Holder for reflection information generated from bbh-backend/client.proto</summary>
  public static partial class ClientReflection {

    #region Descriptor
    /// <summary>File descriptor for bbh-backend/client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhiYmgtYmFja2VuZC9jbGllbnQucHJvdG8SBmJiaHJwYyIUChJHZXRVc2Vy",
            "bmFtZVJlcXVlc3QiIgoSR2V0VXNlcm5hbWVSZXBvbnNlEgwKBG5hbWUYASAB",
            "KAkiIgoSU2V0VXNlcm5hbWVSZXF1ZXN0EgwKBG5hbWUYASABKAkiIwoTU2V0",
            "VXNlcm5hbWVSZXNwb25zZRIMCgRuYW1lGAEgASgJIhcKFUdldFJhbmtpbmdJ",
            "bmZvUmVxdWVzdCJ7ChZHZXRSYW5raW5nSW5mb1Jlc3BvbnNlEhUKDXRvdGFs",
            "X3BsYXllcnMYASABKAUSGAoQYnJvbnplX3RocmVzaG9sZBgCIAEoBRIYChBz",
            "aWx2ZXJfdGhyZXNob2xkGAMgASgFEhYKDmdvbGRfdGhyZXNob2xkGAQgASgF",
            "IiMKEUdldFJhbmtpbmdSZXF1ZXN0Eg4KBnB1YmtleRgBIAEoCSI2ChJHZXRS",
            "YW5raW5nUmVzcG9uc2USIAoHcmFua2luZxgBIAEoCzIPLmJiaHJwYy5SYW5r",
            "aW5nIl8KE0xpc3RSYW5raW5nc1JlcXVlc3QSEwoLc3RhcnRfaW5kZXgYASAB",
            "KAUSDgoGbGVuZ3RoGAIgASgFEiMKCXJhbmtfdHlwZRgDIAEoDjIQLmJiaHJw",
            "Yy5SYW5rVHlwZSJ2ChRMaXN0UmFua2luZ3NSZXNwb25zZRIjCglyYW5rX3R5",
            "cGUYASABKA4yEC5iYmhycGMuUmFua1R5cGUSIQoIcmFua2luZ3MYAiADKAsy",
            "Dy5iYmhycGMuUmFua2luZxIWCg50b3RhbF9lbGVtZW50cxgDIAEoBSJDChBB",
            "ZGRCb3VudHlSZXF1ZXN0Eg4KBnB1YmtleRgBIAEoCRIOCgZhbW91bnQYAiAB",
            "KAMSDwoHbWVzc2FnZRgDIAEoCSIkChFBZGRCb3VudHlSZXNwb25zZRIPCgdp",
            "bnZvaWNlGAEgASgJIhMKEUxpc3RPbmxpbmVSZXF1ZXN0IjUKEkxpc3RPbmxp",
            "bmVSZXNwb25zZRIfCgdwbGF5ZXJzGAEgAygLMg4uYmJocnBjLlBsYXllciIm",
            "ChRHZXRPbmxpbmVVc2VyUmVxdWVzdBIOCgZwdWJrZXkYASABKAkiNwoVR2V0",
            "T25saW5lVXNlclJlc3BvbnNlEh4KBnBsYXllchgBIAEoCzIOLmJiaHJwYy5Q",
            "bGF5ZXIiEAoOR2V0SW5mb1JlcXVlc3QisAEKD0dldEluZm9SZXNwb25zZRIj",
            "CglnYW1lX2luZm8YASABKAsyEC5iYmhycGMuR2FtZUluZm8SIQoIbG5kX2lu",
            "Zm8YAiABKAsyDy5iYmhycGMuTG5kSW5mbxIwChBzcG9uc29yX2ZlZV9pbmZv",
            "GAMgASgLMhYuYmJocnBjLlNwb25zb3JGZWVJbmZvEiMKCXBvb2xfaW5mbxgE",
            "IAEoCzIQLmJiaHJwYy5Qb29sSW5mbyI0ChdDcmVhdGVBZHZlcnRpc2VyUmVx",
            "dWVzdBIMCgRuYW1lGAEgASgJEgsKA3VybBgCIAEoCSIrChhDcmVhdGVBZHZl",
            "cnRpc2VyUmVzcG9uc2USDwoHaW52b2ljZRgBIAEoCSI5ChhEZXBvc2l0QWR2",
            "ZXJ0aXNlclJlcXVlc3QSDQoFcGhhc2gYASABKAkSDgoGYW1vdW50GAIgASgD",
            "IiwKGURlcG9zaXRBZHZlcnRpc2VyUmVzcG9uc2USDwoHaW52b2ljZRgBIAEo",
            "CSIYChZMaXN0QWR2ZXJ0aXNlcnNSZXF1ZXN0IkEKFkxpc3RBZHZlcnRpc2Vy",
            "UmVzcG9uc2USJwoLYWR2ZXJ0aXNlcnMYASADKAsyEi5iYmhycGMuQWR2ZXJ0",
            "aXNlciJtCgZQbGF5ZXISDAoEbmFtZRgBIAEoCRIOCgZwdWJrZXkYAiABKAkS",
            "FgoOY3VycmVudF9ib3VudHkYAyABKAMSFQoNY3VycmVudF9raWxscxgEIAEo",
            "BRIWCg5jdXJyZW50X2RlYXRocxgFIAEoBSL/AQoHUmFua2luZxIMCgRuYW1l",
            "GAEgASgJEg4KBnB1YmtleRgCIAEoCRIcCgVzdGF0cxgDIAEoCzINLmJiaHJw",
            "Yy5TdGF0cxItCg5nbG9iYWxfcmFua2luZxgEIAEoCzIVLmJiaHJwYy5MZWFn",
            "dWVSYW5raW5nEi8KEGVhcm5pbmdzX3JhbmtpbmcYBSABKAsyFS5iYmhycGMu",
            "TGVhZ3VlUmFua2luZxIpCgprZF9yYW5raW5nGAYgASgLMhUuYmJocnBjLkxl",
            "YWd1ZVJhbmtpbmcSLQoOZG9ub3JzX3JhbmtpbmcYByABKAsyFS5iYmhycGMu",
            "TGVhZ3VlUmFua2luZyJjCgVTdGF0cxINCgVraWxscxgBIAEoBRIOCgZkZWF0",
            "aHMYAiABKAUSEAoIZWFybmluZ3MYAyABKAMSEwoLZG9uYXRlZF9kZXYYBCAB",
            "KAMSFAoMZG9uYXRlZF9nYW1lGAUgASgDIk4KDUxlYWd1ZVJhbmtpbmcSDQoF",
            "c2NvcmUYASABKAMSDAoEcmFuaxgCIAEoBRIgCgViYWRnZRgDIAEoDjIRLmJi",
            "aHJwYy5SYW5rQmFkZ2UiWQoKQWR2ZXJ0aXNlchINCgVwaGFzaBgBIAEoCRIM",
            "CgRuYW1lGAIgASgJEgsKA3VybBgDIAEoCRIPCgdiYWxhbmNlGAQgASgDEhAK",
            "CHBpY191cmxzGAUgAygJIhIKEExpc3RTa2luc1JlcXVlc3QiOQoRTGlzdFNr",
            "aW5zUmVzcG9uc2USJAoKc2hvcF9pdGVtcxgBIAMoCzIQLmJiaHJwYy5TaG9w",
            "U2tpbiIcCg5CdXlTa2luUmVxdWVzdBIKCgJpZBgBIAEoCSIiCg9CdXlTa2lu",
            "UmVzcG9uc2USDwoHaW52b2ljZRgBIAEoCSIZChdHZXRTa2luSW52ZW50b3J5",
            "UmVxdWVzdCJJChhHZXRTa2luSW52ZW50b3J5UmVzcG9uc2USLQoOc2tpbl9p",
            "bnZlbnRvcnkYASABKAsyFS5iYmhycGMuU2tpbkludmVudG9yeSIeChBFcXVp",
            "cFNraW5SZXF1ZXN0EgoKAmlkGAEgASgJIhMKEUVxdWlwU2tpblJlc3BvbnNl",
            "IkgKCFNob3BTa2luEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLZGVz",
            "Y3JpcHRpb24YAyABKAkSDQoFcHJpY2UYBCABKAMiOwoNU2tpbkludmVudG9y",
            "eRIVCg1lcXVpcHBlZF9za2luGAEgASgJEhMKC293bmVkX3NraW5zGAIgAygJ",
            "IiAKCEdhbWVJbmZvEhQKDGdhbWVfdmVyc2lvbhgBIAEoCSJICgdMbmRJbmZv",
            "EhIKCmxuZF9wdWJrZXkYASABKAkSEAoIbG5kX2hvc3QYAiABKAkSFwoPbG5k",
            "X2xpc3Rlbl9wb3J0GAMgASgFIngKCFBvb2xJbmZvEhUKDWRvbmF0aW9uX3Bv",
            "b2wYASABKAMSIgoaZG9uYXRpb25fcGF5b3V0X3BlcmNlbnRhZ2UYAiABKAES",
            "EQoJc2hvcF9wb29sGAMgASgDEh4KFnNob3BfcGF5b3V0X3BlcmNlbnRhZ2UY",
            "BCABKAEiYQoOU3BvbnNvckZlZUluZm8SFQoNY3JlYXRpb25fY29zdBgBIAEo",
            "AxIbChNhY3RpdmF0aW9uX2ZlZV9yYXRlGAIgASgCEhsKE3BsYXllcl9zYXRv",
            "c2hpX2Nvc3QYAyABKAIiMAodU3Vic2NyaWJlSW52b2ljZVN0cmVhbVJlcXVl",
            "c3QSDwoHaW52b2ljZRgBIAEoCSIvCh5TdWJzY3JpYmVJbnZpb2NlU3RyZWFt",
            "UmVzcG9uc2USDQoFcGF5ZWQYASABKAgiWAoZR2V0RG9uYXRpb25JbnZvaWNl",
            "UmVxdWVzdBISCgpkZXZfYW1vdW50GAEgASgDEhMKC2dhbWVfYW1vdW50GAIg",
            "ASgDEhIKCmJlbmVmYWN0b3IYAyABKAkiLQoaR2V0RG9uYXRpb25JbnZvaWNl",
            "UmVzcG9uc2USDwoHaW52b2ljZRgBIAEoCSInChVHZXRCb3VudHlMbnVybFJl",
            "cXVlc3QSDgoGcHVia2V5GAEgASgJIi0KFkdldEJvdW50eUxudXJsUmVzcG9u",
            "c2USEwoLYmVjaF9zdHJpbmcYASABKAkiRgoPS2lja1VzZXJSZXF1ZXN0EhEK",
            "CXVzZXJfbmFtZRgBIAEoCRITCgt1c2VyX3B1YmtleRgCIAEoCRILCgNiYW4Y",
            "AyABKAgiEgoQS2lja1VzZXJSZXNwb25zZSIyCg9TZW5kQ2hhdFJlcXVlc3QS",
            "DgoGc2VuZGVyGAEgASgJEg8KB21lc3NhZ2UYAiABKAkiEgoQU2VuZENoYXRS",
            "ZXNwb25zZSI3ChVJbmNyZWFzZUJvdW50eVJlcXVlc3QSDgoGcHVia2V5GAEg",
            "ASgJEg4KBmFtb3VudBgCIAEoAyIYChZJbmNyZWFzZUJvdW50eVJlc3BvbnNl",
            "KkUKCFJhbmtUeXBlEggKBE5PTkUQABIKCgZHTE9CQUwQARIGCgJLRBACEgwK",
            "CEVBUk5JTkdTEAMSDQoJRE9OQVRJT05TEAQqOwoJUmFua0JhZGdlEgwKCFVO",
            "UkFOS0VEEAASCgoGQlJPTlpFEAESCgoGU0lMVkVSEAISCAoER09MRBADMqIB",
            "ChFHYW1lQ2xpZW50U2VydmljZRJFCgtHZXRVc2VybmFtZRIaLmJiaHJwYy5H",
            "ZXRVc2VybmFtZVJlcXVlc3QaGi5iYmhycGMuR2V0VXNlcm5hbWVSZXBvbnNl",
            "EkYKC1NldFVzZXJuYW1lEhouYmJocnBjLlNldFVzZXJuYW1lUmVxdWVzdBob",
            "LmJiaHJwYy5TZXRVc2VybmFtZVJlc3BvbnNlMpcCChFBZHZlcnRpc2VyU2Vy",
            "dmljZRJVChBDcmVhdGVBZHZlcnRpc2VyEh8uYmJocnBjLkNyZWF0ZUFkdmVy",
            "dGlzZXJSZXF1ZXN0GiAuYmJocnBjLkNyZWF0ZUFkdmVydGlzZXJSZXNwb25z",
            "ZRJYChFEZXBvc2l0QWR2ZXJ0aXNlchIgLmJiaHJwYy5EZXBvc2l0QWR2ZXJ0",
            "aXNlclJlcXVlc3QaIS5iYmhycGMuRGVwb3NpdEFkdmVydGlzZXJSZXNwb25z",
            "ZRJRCg9MaXN0QWR2ZXJ0aXNlcnMSHi5iYmhycGMuTGlzdEFkdmVydGlzZXJz",
            "UmVxdWVzdBoeLmJiaHJwYy5MaXN0QWR2ZXJ0aXNlclJlc3BvbnNlMpoGCg1Q",
            "dWJsaWNTZXJ2aWNlEk8KDkdldFJhbmtpbmdJbmZvEh0uYmJocnBjLkdldFJh",
            "bmtpbmdJbmZvUmVxdWVzdBoeLmJiaHJwYy5HZXRSYW5raW5nSW5mb1Jlc3Bv",
            "bnNlEkMKCkdldFJhbmtpbmcSGS5iYmhycGMuR2V0UmFua2luZ1JlcXVlc3Qa",
            "Gi5iYmhycGMuR2V0UmFua2luZ1Jlc3BvbnNlEkkKDExpc3RSYW5raW5ncxIb",
            "LmJiaHJwYy5MaXN0UmFua2luZ3NSZXF1ZXN0GhwuYmJocnBjLkxpc3RSYW5r",
            "aW5nc1Jlc3BvbnNlEkAKCUFkZEJvdW50eRIYLmJiaHJwYy5BZGRCb3VudHlS",
            "ZXF1ZXN0GhkuYmJocnBjLkFkZEJvdW50eVJlc3BvbnNlEkMKCkxpc3RPbmxp",
            "bmUSGS5iYmhycGMuTGlzdE9ubGluZVJlcXVlc3QaGi5iYmhycGMuTGlzdE9u",
            "bGluZVJlc3BvbnNlEkwKDUdldE9ubGluZVVzZXISHC5iYmhycGMuR2V0T25s",
            "aW5lVXNlclJlcXVlc3QaHS5iYmhycGMuR2V0T25saW5lVXNlclJlc3BvbnNl",
            "EjoKB0dldEluZm8SFi5iYmhycGMuR2V0SW5mb1JlcXVlc3QaFy5iYmhycGMu",
            "R2V0SW5mb1Jlc3BvbnNlEmkKFlN1YnNjcmliZUludm9pY2VTdHJlYW0SJS5i",
            "YmhycGMuU3Vic2NyaWJlSW52b2ljZVN0cmVhbVJlcXVlc3QaJi5iYmhycGMu",
            "U3Vic2NyaWJlSW52aW9jZVN0cmVhbVJlc3BvbnNlMAESWwoSR2V0RG9uYXRp",
            "b25JbnZvaWNlEiEuYmJocnBjLkdldERvbmF0aW9uSW52b2ljZVJlcXVlc3Qa",
            "Ii5iYmhycGMuR2V0RG9uYXRpb25JbnZvaWNlUmVzcG9uc2USTwoOR2V0Qm91",
            "bnR5TG51cmwSHS5iYmhycGMuR2V0Qm91bnR5TG51cmxSZXF1ZXN0Gh4uYmJo",
            "cnBjLkdldEJvdW50eUxudXJsUmVzcG9uc2UypAIKC1NraW5TZXJ2aWNlEkAK",
            "CUxpc3RTa2lucxIYLmJiaHJwYy5MaXN0U2tpbnNSZXF1ZXN0GhkuYmJocnBj",
            "Lkxpc3RTa2luc1Jlc3BvbnNlEjoKB0J1eVNraW4SFi5iYmhycGMuQnV5U2tp",
            "blJlcXVlc3QaFy5iYmhycGMuQnV5U2tpblJlc3BvbnNlElUKEEdldFNraW5J",
            "bnZlbnRvcnkSHy5iYmhycGMuR2V0U2tpbkludmVudG9yeVJlcXVlc3QaIC5i",
            "YmhycGMuR2V0U2tpbkludmVudG9yeVJlc3BvbnNlEkAKCUVxdWlwU2tpbhIY",
            "LmJiaHJwYy5FcXVpcFNraW5SZXF1ZXN0GhkuYmJocnBjLkVxdWlwU2tpblJl",
            "c3BvbnNlMt0BCgxBZG1pblNlcnZpY2USPQoIS2lja1VzZXISFy5iYmhycGMu",
            "S2lja1VzZXJSZXF1ZXN0GhguYmJocnBjLktpY2tVc2VyUmVzcG9uc2USPQoI",
            "U2VuZENoYXQSFy5iYmhycGMuU2VuZENoYXRSZXF1ZXN0GhguYmJocnBjLlNl",
            "bmRDaGF0UmVzcG9uc2USTwoOSW5jcmVhc2VCb3VudHkSHS5iYmhycGMuSW5j",
            "cmVhc2VCb3VudHlSZXF1ZXN0Gh4uYmJocnBjLkluY3JlYXNlQm91bnR5UmVz",
            "cG9uc2VCCFoGYmJocnBjYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Bbhrpc.RankType), typeof(global::Bbhrpc.RankBadge), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetUsernameRequest), global::Bbhrpc.GetUsernameRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetUsernameReponse), global::Bbhrpc.GetUsernameReponse.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SetUsernameRequest), global::Bbhrpc.SetUsernameRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SetUsernameResponse), global::Bbhrpc.SetUsernameResponse.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetRankingInfoRequest), global::Bbhrpc.GetRankingInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetRankingInfoResponse), global::Bbhrpc.GetRankingInfoResponse.Parser, new[]{ "TotalPlayers", "BronzeThreshold", "SilverThreshold", "GoldThreshold" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetRankingRequest), global::Bbhrpc.GetRankingRequest.Parser, new[]{ "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetRankingResponse), global::Bbhrpc.GetRankingResponse.Parser, new[]{ "Ranking" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListRankingsRequest), global::Bbhrpc.ListRankingsRequest.Parser, new[]{ "StartIndex", "Length", "RankType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListRankingsResponse), global::Bbhrpc.ListRankingsResponse.Parser, new[]{ "RankType", "Rankings", "TotalElements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.AddBountyRequest), global::Bbhrpc.AddBountyRequest.Parser, new[]{ "Pubkey", "Amount", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.AddBountyResponse), global::Bbhrpc.AddBountyResponse.Parser, new[]{ "Invoice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListOnlineRequest), global::Bbhrpc.ListOnlineRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListOnlineResponse), global::Bbhrpc.ListOnlineResponse.Parser, new[]{ "Players" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetOnlineUserRequest), global::Bbhrpc.GetOnlineUserRequest.Parser, new[]{ "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetOnlineUserResponse), global::Bbhrpc.GetOnlineUserResponse.Parser, new[]{ "Player" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetInfoRequest), global::Bbhrpc.GetInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetInfoResponse), global::Bbhrpc.GetInfoResponse.Parser, new[]{ "GameInfo", "LndInfo", "SponsorFeeInfo", "PoolInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.CreateAdvertiserRequest), global::Bbhrpc.CreateAdvertiserRequest.Parser, new[]{ "Name", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.CreateAdvertiserResponse), global::Bbhrpc.CreateAdvertiserResponse.Parser, new[]{ "Invoice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.DepositAdvertiserRequest), global::Bbhrpc.DepositAdvertiserRequest.Parser, new[]{ "Phash", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.DepositAdvertiserResponse), global::Bbhrpc.DepositAdvertiserResponse.Parser, new[]{ "Invoice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListAdvertisersRequest), global::Bbhrpc.ListAdvertisersRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListAdvertiserResponse), global::Bbhrpc.ListAdvertiserResponse.Parser, new[]{ "Advertisers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.Player), global::Bbhrpc.Player.Parser, new[]{ "Name", "Pubkey", "CurrentBounty", "CurrentKills", "CurrentDeaths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.Ranking), global::Bbhrpc.Ranking.Parser, new[]{ "Name", "Pubkey", "Stats", "GlobalRanking", "EarningsRanking", "KdRanking", "DonorsRanking" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.Stats), global::Bbhrpc.Stats.Parser, new[]{ "Kills", "Deaths", "Earnings", "DonatedDev", "DonatedGame" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.LeagueRanking), global::Bbhrpc.LeagueRanking.Parser, new[]{ "Score", "Rank", "Badge" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.Advertiser), global::Bbhrpc.Advertiser.Parser, new[]{ "Phash", "Name", "Url", "Balance", "PicUrls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListSkinsRequest), global::Bbhrpc.ListSkinsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ListSkinsResponse), global::Bbhrpc.ListSkinsResponse.Parser, new[]{ "ShopItems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BuySkinRequest), global::Bbhrpc.BuySkinRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BuySkinResponse), global::Bbhrpc.BuySkinResponse.Parser, new[]{ "Invoice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetSkinInventoryRequest), global::Bbhrpc.GetSkinInventoryRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetSkinInventoryResponse), global::Bbhrpc.GetSkinInventoryResponse.Parser, new[]{ "SkinInventory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EquipSkinRequest), global::Bbhrpc.EquipSkinRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EquipSkinResponse), global::Bbhrpc.EquipSkinResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ShopSkin), global::Bbhrpc.ShopSkin.Parser, new[]{ "Id", "Name", "Description", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SkinInventory), global::Bbhrpc.SkinInventory.Parser, new[]{ "EquippedSkin", "OwnedSkins" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GameInfo), global::Bbhrpc.GameInfo.Parser, new[]{ "GameVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.LndInfo), global::Bbhrpc.LndInfo.Parser, new[]{ "LndPubkey", "LndHost", "LndListenPort" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.PoolInfo), global::Bbhrpc.PoolInfo.Parser, new[]{ "DonationPool", "DonationPayoutPercentage", "ShopPool", "ShopPayoutPercentage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SponsorFeeInfo), global::Bbhrpc.SponsorFeeInfo.Parser, new[]{ "CreationCost", "ActivationFeeRate", "PlayerSatoshiCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SubscribeInvoiceStreamRequest), global::Bbhrpc.SubscribeInvoiceStreamRequest.Parser, new[]{ "Invoice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SubscribeInvioceStreamResponse), global::Bbhrpc.SubscribeInvioceStreamResponse.Parser, new[]{ "Payed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetDonationInvoiceRequest), global::Bbhrpc.GetDonationInvoiceRequest.Parser, new[]{ "DevAmount", "GameAmount", "Benefactor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetDonationInvoiceResponse), global::Bbhrpc.GetDonationInvoiceResponse.Parser, new[]{ "Invoice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetBountyLnurlRequest), global::Bbhrpc.GetBountyLnurlRequest.Parser, new[]{ "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetBountyLnurlResponse), global::Bbhrpc.GetBountyLnurlResponse.Parser, new[]{ "BechString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.KickUserRequest), global::Bbhrpc.KickUserRequest.Parser, new[]{ "UserName", "UserPubkey", "Ban" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.KickUserResponse), global::Bbhrpc.KickUserResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SendChatRequest), global::Bbhrpc.SendChatRequest.Parser, new[]{ "Sender", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SendChatResponse), global::Bbhrpc.SendChatResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.IncreaseBountyRequest), global::Bbhrpc.IncreaseBountyRequest.Parser, new[]{ "Pubkey", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.IncreaseBountyResponse), global::Bbhrpc.IncreaseBountyResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RankType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("GLOBAL")] Global = 1,
    [pbr::OriginalName("KD")] Kd = 2,
    [pbr::OriginalName("EARNINGS")] Earnings = 3,
    [pbr::OriginalName("DONATIONS")] Donations = 4,
  }

  public enum RankBadge {
    [pbr::OriginalName("UNRANKED")] Unranked = 0,
    [pbr::OriginalName("BRONZE")] Bronze = 1,
    [pbr::OriginalName("SILVER")] Silver = 2,
    [pbr::OriginalName("GOLD")] Gold = 3,
  }

  #endregion

  #region Messages
  public sealed partial class GetUsernameRequest : pb::IMessage<GetUsernameRequest> {
    private static readonly pb::MessageParser<GetUsernameRequest> _parser = new pb::MessageParser<GetUsernameRequest>(() => new GetUsernameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUsernameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsernameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsernameRequest(GetUsernameRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsernameRequest Clone() {
      return new GetUsernameRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUsernameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUsernameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUsernameRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetUsernameReponse : pb::IMessage<GetUsernameReponse> {
    private static readonly pb::MessageParser<GetUsernameReponse> _parser = new pb::MessageParser<GetUsernameReponse>(() => new GetUsernameReponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUsernameReponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsernameReponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsernameReponse(GetUsernameReponse other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsernameReponse Clone() {
      return new GetUsernameReponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUsernameReponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUsernameReponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUsernameReponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetUsernameRequest : pb::IMessage<SetUsernameRequest> {
    private static readonly pb::MessageParser<SetUsernameRequest> _parser = new pb::MessageParser<SetUsernameRequest>(() => new SetUsernameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUsernameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUsernameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUsernameRequest(SetUsernameRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUsernameRequest Clone() {
      return new SetUsernameRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUsernameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUsernameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUsernameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetUsernameResponse : pb::IMessage<SetUsernameResponse> {
    private static readonly pb::MessageParser<SetUsernameResponse> _parser = new pb::MessageParser<SetUsernameResponse>(() => new SetUsernameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUsernameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUsernameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUsernameResponse(SetUsernameResponse other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUsernameResponse Clone() {
      return new SetUsernameResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUsernameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUsernameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUsernameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRankingInfoRequest : pb::IMessage<GetRankingInfoRequest> {
    private static readonly pb::MessageParser<GetRankingInfoRequest> _parser = new pb::MessageParser<GetRankingInfoRequest>(() => new GetRankingInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankingInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoRequest(GetRankingInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoRequest Clone() {
      return new GetRankingInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankingInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankingInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankingInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetRankingInfoResponse : pb::IMessage<GetRankingInfoResponse> {
    private static readonly pb::MessageParser<GetRankingInfoResponse> _parser = new pb::MessageParser<GetRankingInfoResponse>(() => new GetRankingInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankingInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoResponse(GetRankingInfoResponse other) : this() {
      totalPlayers_ = other.totalPlayers_;
      bronzeThreshold_ = other.bronzeThreshold_;
      silverThreshold_ = other.silverThreshold_;
      goldThreshold_ = other.goldThreshold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoResponse Clone() {
      return new GetRankingInfoResponse(this);
    }

    /// <summary>Field number for the "total_players" field.</summary>
    public const int TotalPlayersFieldNumber = 1;
    private int totalPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPlayers {
      get { return totalPlayers_; }
      set {
        totalPlayers_ = value;
      }
    }

    /// <summary>Field number for the "bronze_threshold" field.</summary>
    public const int BronzeThresholdFieldNumber = 2;
    private int bronzeThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BronzeThreshold {
      get { return bronzeThreshold_; }
      set {
        bronzeThreshold_ = value;
      }
    }

    /// <summary>Field number for the "silver_threshold" field.</summary>
    public const int SilverThresholdFieldNumber = 3;
    private int silverThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SilverThreshold {
      get { return silverThreshold_; }
      set {
        silverThreshold_ = value;
      }
    }

    /// <summary>Field number for the "gold_threshold" field.</summary>
    public const int GoldThresholdFieldNumber = 4;
    private int goldThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoldThreshold {
      get { return goldThreshold_; }
      set {
        goldThreshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankingInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankingInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalPlayers != other.TotalPlayers) return false;
      if (BronzeThreshold != other.BronzeThreshold) return false;
      if (SilverThreshold != other.SilverThreshold) return false;
      if (GoldThreshold != other.GoldThreshold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalPlayers != 0) hash ^= TotalPlayers.GetHashCode();
      if (BronzeThreshold != 0) hash ^= BronzeThreshold.GetHashCode();
      if (SilverThreshold != 0) hash ^= SilverThreshold.GetHashCode();
      if (GoldThreshold != 0) hash ^= GoldThreshold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalPlayers != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalPlayers);
      }
      if (BronzeThreshold != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BronzeThreshold);
      }
      if (SilverThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SilverThreshold);
      }
      if (GoldThreshold != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GoldThreshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayers);
      }
      if (BronzeThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BronzeThreshold);
      }
      if (SilverThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SilverThreshold);
      }
      if (GoldThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldThreshold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankingInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalPlayers != 0) {
        TotalPlayers = other.TotalPlayers;
      }
      if (other.BronzeThreshold != 0) {
        BronzeThreshold = other.BronzeThreshold;
      }
      if (other.SilverThreshold != 0) {
        SilverThreshold = other.SilverThreshold;
      }
      if (other.GoldThreshold != 0) {
        GoldThreshold = other.GoldThreshold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalPlayers = input.ReadInt32();
            break;
          }
          case 16: {
            BronzeThreshold = input.ReadInt32();
            break;
          }
          case 24: {
            SilverThreshold = input.ReadInt32();
            break;
          }
          case 32: {
            GoldThreshold = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRankingRequest : pb::IMessage<GetRankingRequest> {
    private static readonly pb::MessageParser<GetRankingRequest> _parser = new pb::MessageParser<GetRankingRequest>(() => new GetRankingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingRequest(GetRankingRequest other) : this() {
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingRequest Clone() {
      return new GetRankingRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRankingResponse : pb::IMessage<GetRankingResponse> {
    private static readonly pb::MessageParser<GetRankingResponse> _parser = new pb::MessageParser<GetRankingResponse>(() => new GetRankingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingResponse(GetRankingResponse other) : this() {
      ranking_ = other.ranking_ != null ? other.ranking_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingResponse Clone() {
      return new GetRankingResponse(this);
    }

    /// <summary>Field number for the "ranking" field.</summary>
    public const int RankingFieldNumber = 1;
    private global::Bbhrpc.Ranking ranking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.Ranking Ranking {
      get { return ranking_; }
      set {
        ranking_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ranking, other.Ranking)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ranking_ != null) hash ^= Ranking.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ranking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ranking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ranking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ranking);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankingResponse other) {
      if (other == null) {
        return;
      }
      if (other.ranking_ != null) {
        if (ranking_ == null) {
          Ranking = new global::Bbhrpc.Ranking();
        }
        Ranking.MergeFrom(other.Ranking);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ranking_ == null) {
              Ranking = new global::Bbhrpc.Ranking();
            }
            input.ReadMessage(Ranking);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListRankingsRequest : pb::IMessage<ListRankingsRequest> {
    private static readonly pb::MessageParser<ListRankingsRequest> _parser = new pb::MessageParser<ListRankingsRequest>(() => new ListRankingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRankingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRankingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRankingsRequest(ListRankingsRequest other) : this() {
      startIndex_ = other.startIndex_;
      length_ = other.length_;
      rankType_ = other.rankType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRankingsRequest Clone() {
      return new ListRankingsRequest(this);
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 1;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "rank_type" field.</summary>
    public const int RankTypeFieldNumber = 3;
    private global::Bbhrpc.RankType rankType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.RankType RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRankingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRankingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartIndex != other.StartIndex) return false;
      if (Length != other.Length) return false;
      if (RankType != other.RankType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (RankType != 0) hash ^= RankType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Length);
      }
      if (RankType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RankType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (RankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RankType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRankingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.RankType != 0) {
        RankType = other.RankType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Length = input.ReadInt32();
            break;
          }
          case 24: {
            RankType = (global::Bbhrpc.RankType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListRankingsResponse : pb::IMessage<ListRankingsResponse> {
    private static readonly pb::MessageParser<ListRankingsResponse> _parser = new pb::MessageParser<ListRankingsResponse>(() => new ListRankingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRankingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRankingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRankingsResponse(ListRankingsResponse other) : this() {
      rankType_ = other.rankType_;
      rankings_ = other.rankings_.Clone();
      totalElements_ = other.totalElements_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRankingsResponse Clone() {
      return new ListRankingsResponse(this);
    }

    /// <summary>Field number for the "rank_type" field.</summary>
    public const int RankTypeFieldNumber = 1;
    private global::Bbhrpc.RankType rankType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.RankType RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    /// <summary>Field number for the "rankings" field.</summary>
    public const int RankingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bbhrpc.Ranking> _repeated_rankings_codec
        = pb::FieldCodec.ForMessage(18, global::Bbhrpc.Ranking.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.Ranking> rankings_ = new pbc::RepeatedField<global::Bbhrpc.Ranking>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.Ranking> Rankings {
      get { return rankings_; }
    }

    /// <summary>Field number for the "total_elements" field.</summary>
    public const int TotalElementsFieldNumber = 3;
    private int totalElements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalElements {
      get { return totalElements_; }
      set {
        totalElements_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRankingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRankingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RankType != other.RankType) return false;
      if(!rankings_.Equals(other.rankings_)) return false;
      if (TotalElements != other.TotalElements) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RankType != 0) hash ^= RankType.GetHashCode();
      hash ^= rankings_.GetHashCode();
      if (TotalElements != 0) hash ^= TotalElements.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RankType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RankType);
      }
      rankings_.WriteTo(output, _repeated_rankings_codec);
      if (TotalElements != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalElements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RankType);
      }
      size += rankings_.CalculateSize(_repeated_rankings_codec);
      if (TotalElements != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalElements);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRankingsResponse other) {
      if (other == null) {
        return;
      }
      if (other.RankType != 0) {
        RankType = other.RankType;
      }
      rankings_.Add(other.rankings_);
      if (other.TotalElements != 0) {
        TotalElements = other.TotalElements;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RankType = (global::Bbhrpc.RankType) input.ReadEnum();
            break;
          }
          case 18: {
            rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
            break;
          }
          case 24: {
            TotalElements = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBountyRequest : pb::IMessage<AddBountyRequest> {
    private static readonly pb::MessageParser<AddBountyRequest> _parser = new pb::MessageParser<AddBountyRequest>(() => new AddBountyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBountyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBountyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBountyRequest(AddBountyRequest other) : this() {
      pubkey_ = other.pubkey_;
      amount_ = other.amount_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBountyRequest Clone() {
      return new AddBountyRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBountyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBountyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (Amount != other.Amount) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBountyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBountyResponse : pb::IMessage<AddBountyResponse> {
    private static readonly pb::MessageParser<AddBountyResponse> _parser = new pb::MessageParser<AddBountyResponse>(() => new AddBountyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBountyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBountyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBountyResponse(AddBountyResponse other) : this() {
      invoice_ = other.invoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBountyResponse Clone() {
      return new AddBountyResponse(this);
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 1;
    private string invoice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Invoice {
      get { return invoice_; }
      set {
        invoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBountyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBountyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invoice != other.Invoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invoice.Length != 0) hash ^= Invoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invoice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Invoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Invoice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBountyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Invoice.Length != 0) {
        Invoice = other.Invoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invoice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListOnlineRequest : pb::IMessage<ListOnlineRequest> {
    private static readonly pb::MessageParser<ListOnlineRequest> _parser = new pb::MessageParser<ListOnlineRequest>(() => new ListOnlineRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOnlineRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOnlineRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOnlineRequest(ListOnlineRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOnlineRequest Clone() {
      return new ListOnlineRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOnlineRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOnlineRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOnlineRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListOnlineResponse : pb::IMessage<ListOnlineResponse> {
    private static readonly pb::MessageParser<ListOnlineResponse> _parser = new pb::MessageParser<ListOnlineResponse>(() => new ListOnlineResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOnlineResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOnlineResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOnlineResponse(ListOnlineResponse other) : this() {
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOnlineResponse Clone() {
      return new ListOnlineResponse(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bbhrpc.Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::Bbhrpc.Player.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.Player> players_ = new pbc::RepeatedField<global::Bbhrpc.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.Player> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOnlineResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOnlineResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOnlineResponse other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOnlineUserRequest : pb::IMessage<GetOnlineUserRequest> {
    private static readonly pb::MessageParser<GetOnlineUserRequest> _parser = new pb::MessageParser<GetOnlineUserRequest>(() => new GetOnlineUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOnlineUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOnlineUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOnlineUserRequest(GetOnlineUserRequest other) : this() {
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOnlineUserRequest Clone() {
      return new GetOnlineUserRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOnlineUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOnlineUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOnlineUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOnlineUserResponse : pb::IMessage<GetOnlineUserResponse> {
    private static readonly pb::MessageParser<GetOnlineUserResponse> _parser = new pb::MessageParser<GetOnlineUserResponse>(() => new GetOnlineUserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOnlineUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOnlineUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOnlineUserResponse(GetOnlineUserResponse other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOnlineUserResponse Clone() {
      return new GetOnlineUserResponse(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Bbhrpc.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOnlineUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOnlineUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOnlineUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Bbhrpc.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Bbhrpc.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInfoRequest : pb::IMessage<GetInfoRequest> {
    private static readonly pb::MessageParser<GetInfoRequest> _parser = new pb::MessageParser<GetInfoRequest>(() => new GetInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequest(GetInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequest Clone() {
      return new GetInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetInfoResponse : pb::IMessage<GetInfoResponse> {
    private static readonly pb::MessageParser<GetInfoResponse> _parser = new pb::MessageParser<GetInfoResponse>(() => new GetInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponse(GetInfoResponse other) : this() {
      gameInfo_ = other.gameInfo_ != null ? other.gameInfo_.Clone() : null;
      lndInfo_ = other.lndInfo_ != null ? other.lndInfo_.Clone() : null;
      sponsorFeeInfo_ = other.sponsorFeeInfo_ != null ? other.sponsorFeeInfo_.Clone() : null;
      poolInfo_ = other.poolInfo_ != null ? other.poolInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponse Clone() {
      return new GetInfoResponse(this);
    }

    /// <summary>Field number for the "game_info" field.</summary>
    public const int GameInfoFieldNumber = 1;
    private global::Bbhrpc.GameInfo gameInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.GameInfo GameInfo {
      get { return gameInfo_; }
      set {
        gameInfo_ = value;
      }
    }

    /// <summary>Field number for the "lnd_info" field.</summary>
    public const int LndInfoFieldNumber = 2;
    private global::Bbhrpc.LndInfo lndInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.LndInfo LndInfo {
      get { return lndInfo_; }
      set {
        lndInfo_ = value;
      }
    }

    /// <summary>Field number for the "sponsor_fee_info" field.</summary>
    public const int SponsorFeeInfoFieldNumber = 3;
    private global::Bbhrpc.SponsorFeeInfo sponsorFeeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.SponsorFeeInfo SponsorFeeInfo {
      get { return sponsorFeeInfo_; }
      set {
        sponsorFeeInfo_ = value;
      }
    }

    /// <summary>Field number for the "pool_info" field.</summary>
    public const int PoolInfoFieldNumber = 4;
    private global::Bbhrpc.PoolInfo poolInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.PoolInfo PoolInfo {
      get { return poolInfo_; }
      set {
        poolInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameInfo, other.GameInfo)) return false;
      if (!object.Equals(LndInfo, other.LndInfo)) return false;
      if (!object.Equals(SponsorFeeInfo, other.SponsorFeeInfo)) return false;
      if (!object.Equals(PoolInfo, other.PoolInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gameInfo_ != null) hash ^= GameInfo.GetHashCode();
      if (lndInfo_ != null) hash ^= LndInfo.GetHashCode();
      if (sponsorFeeInfo_ != null) hash ^= SponsorFeeInfo.GetHashCode();
      if (poolInfo_ != null) hash ^= PoolInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (gameInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameInfo);
      }
      if (lndInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LndInfo);
      }
      if (sponsorFeeInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SponsorFeeInfo);
      }
      if (poolInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gameInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameInfo);
      }
      if (lndInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LndInfo);
      }
      if (sponsorFeeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SponsorFeeInfo);
      }
      if (poolInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.gameInfo_ != null) {
        if (gameInfo_ == null) {
          GameInfo = new global::Bbhrpc.GameInfo();
        }
        GameInfo.MergeFrom(other.GameInfo);
      }
      if (other.lndInfo_ != null) {
        if (lndInfo_ == null) {
          LndInfo = new global::Bbhrpc.LndInfo();
        }
        LndInfo.MergeFrom(other.LndInfo);
      }
      if (other.sponsorFeeInfo_ != null) {
        if (sponsorFeeInfo_ == null) {
          SponsorFeeInfo = new global::Bbhrpc.SponsorFeeInfo();
        }
        SponsorFeeInfo.MergeFrom(other.SponsorFeeInfo);
      }
      if (other.poolInfo_ != null) {
        if (poolInfo_ == null) {
          PoolInfo = new global::Bbhrpc.PoolInfo();
        }
        PoolInfo.MergeFrom(other.PoolInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameInfo_ == null) {
              GameInfo = new global::Bbhrpc.GameInfo();
            }
            input.ReadMessage(GameInfo);
            break;
          }
          case 18: {
            if (lndInfo_ == null) {
              LndInfo = new global::Bbhrpc.LndInfo();
            }
            input.ReadMessage(LndInfo);
            break;
          }
          case 26: {
            if (sponsorFeeInfo_ == null) {
              SponsorFeeInfo = new global::Bbhrpc.SponsorFeeInfo();
            }
            input.ReadMessage(SponsorFeeInfo);
            break;
          }
          case 34: {
            if (poolInfo_ == null) {
              PoolInfo = new global::Bbhrpc.PoolInfo();
            }
            input.ReadMessage(PoolInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAdvertiserRequest : pb::IMessage<CreateAdvertiserRequest> {
    private static readonly pb::MessageParser<CreateAdvertiserRequest> _parser = new pb::MessageParser<CreateAdvertiserRequest>(() => new CreateAdvertiserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAdvertiserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAdvertiserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAdvertiserRequest(CreateAdvertiserRequest other) : this() {
      name_ = other.name_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAdvertiserRequest Clone() {
      return new CreateAdvertiserRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAdvertiserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAdvertiserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAdvertiserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAdvertiserResponse : pb::IMessage<CreateAdvertiserResponse> {
    private static readonly pb::MessageParser<CreateAdvertiserResponse> _parser = new pb::MessageParser<CreateAdvertiserResponse>(() => new CreateAdvertiserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAdvertiserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAdvertiserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAdvertiserResponse(CreateAdvertiserResponse other) : this() {
      invoice_ = other.invoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAdvertiserResponse Clone() {
      return new CreateAdvertiserResponse(this);
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 1;
    private string invoice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Invoice {
      get { return invoice_; }
      set {
        invoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAdvertiserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAdvertiserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invoice != other.Invoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invoice.Length != 0) hash ^= Invoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invoice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Invoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Invoice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAdvertiserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Invoice.Length != 0) {
        Invoice = other.Invoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invoice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DepositAdvertiserRequest : pb::IMessage<DepositAdvertiserRequest> {
    private static readonly pb::MessageParser<DepositAdvertiserRequest> _parser = new pb::MessageParser<DepositAdvertiserRequest>(() => new DepositAdvertiserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DepositAdvertiserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositAdvertiserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositAdvertiserRequest(DepositAdvertiserRequest other) : this() {
      phash_ = other.phash_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositAdvertiserRequest Clone() {
      return new DepositAdvertiserRequest(this);
    }

    /// <summary>Field number for the "phash" field.</summary>
    public const int PhashFieldNumber = 1;
    private string phash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phash {
      get { return phash_; }
      set {
        phash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DepositAdvertiserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DepositAdvertiserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phash != other.Phash) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Phash.Length != 0) hash ^= Phash.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Phash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phash);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Phash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phash);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DepositAdvertiserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Phash.Length != 0) {
        Phash = other.Phash;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Phash = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DepositAdvertiserResponse : pb::IMessage<DepositAdvertiserResponse> {
    private static readonly pb::MessageParser<DepositAdvertiserResponse> _parser = new pb::MessageParser<DepositAdvertiserResponse>(() => new DepositAdvertiserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DepositAdvertiserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositAdvertiserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositAdvertiserResponse(DepositAdvertiserResponse other) : this() {
      invoice_ = other.invoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositAdvertiserResponse Clone() {
      return new DepositAdvertiserResponse(this);
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 1;
    private string invoice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Invoice {
      get { return invoice_; }
      set {
        invoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DepositAdvertiserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DepositAdvertiserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invoice != other.Invoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invoice.Length != 0) hash ^= Invoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invoice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Invoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Invoice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DepositAdvertiserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Invoice.Length != 0) {
        Invoice = other.Invoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invoice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAdvertisersRequest : pb::IMessage<ListAdvertisersRequest> {
    private static readonly pb::MessageParser<ListAdvertisersRequest> _parser = new pb::MessageParser<ListAdvertisersRequest>(() => new ListAdvertisersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAdvertisersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAdvertisersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAdvertisersRequest(ListAdvertisersRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAdvertisersRequest Clone() {
      return new ListAdvertisersRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAdvertisersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAdvertisersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAdvertisersRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListAdvertiserResponse : pb::IMessage<ListAdvertiserResponse> {
    private static readonly pb::MessageParser<ListAdvertiserResponse> _parser = new pb::MessageParser<ListAdvertiserResponse>(() => new ListAdvertiserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAdvertiserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAdvertiserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAdvertiserResponse(ListAdvertiserResponse other) : this() {
      advertisers_ = other.advertisers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAdvertiserResponse Clone() {
      return new ListAdvertiserResponse(this);
    }

    /// <summary>Field number for the "advertisers" field.</summary>
    public const int AdvertisersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bbhrpc.Advertiser> _repeated_advertisers_codec
        = pb::FieldCodec.ForMessage(10, global::Bbhrpc.Advertiser.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.Advertiser> advertisers_ = new pbc::RepeatedField<global::Bbhrpc.Advertiser>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.Advertiser> Advertisers {
      get { return advertisers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAdvertiserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAdvertiserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!advertisers_.Equals(other.advertisers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= advertisers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      advertisers_.WriteTo(output, _repeated_advertisers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += advertisers_.CalculateSize(_repeated_advertisers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAdvertiserResponse other) {
      if (other == null) {
        return;
      }
      advertisers_.Add(other.advertisers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            advertisers_.AddEntriesFrom(input, _repeated_advertisers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Player : pb::IMessage<Player> {
    private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player(Player other) : this() {
      name_ = other.name_;
      pubkey_ = other.pubkey_;
      currentBounty_ = other.currentBounty_;
      currentKills_ = other.currentKills_;
      currentDeaths_ = other.currentDeaths_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player Clone() {
      return new Player(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 2;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_bounty" field.</summary>
    public const int CurrentBountyFieldNumber = 3;
    private long currentBounty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentBounty {
      get { return currentBounty_; }
      set {
        currentBounty_ = value;
      }
    }

    /// <summary>Field number for the "current_kills" field.</summary>
    public const int CurrentKillsFieldNumber = 4;
    private int currentKills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentKills {
      get { return currentKills_; }
      set {
        currentKills_ = value;
      }
    }

    /// <summary>Field number for the "current_deaths" field.</summary>
    public const int CurrentDeathsFieldNumber = 5;
    private int currentDeaths_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentDeaths {
      get { return currentDeaths_; }
      set {
        currentDeaths_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Pubkey != other.Pubkey) return false;
      if (CurrentBounty != other.CurrentBounty) return false;
      if (CurrentKills != other.CurrentKills) return false;
      if (CurrentDeaths != other.CurrentDeaths) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (CurrentBounty != 0L) hash ^= CurrentBounty.GetHashCode();
      if (CurrentKills != 0) hash ^= CurrentKills.GetHashCode();
      if (CurrentDeaths != 0) hash ^= CurrentDeaths.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pubkey);
      }
      if (CurrentBounty != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrentBounty);
      }
      if (CurrentKills != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrentKills);
      }
      if (CurrentDeaths != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentDeaths);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (CurrentBounty != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentBounty);
      }
      if (CurrentKills != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentKills);
      }
      if (CurrentDeaths != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentDeaths);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Player other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.CurrentBounty != 0L) {
        CurrentBounty = other.CurrentBounty;
      }
      if (other.CurrentKills != 0) {
        CurrentKills = other.CurrentKills;
      }
      if (other.CurrentDeaths != 0) {
        CurrentDeaths = other.CurrentDeaths;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Pubkey = input.ReadString();
            break;
          }
          case 24: {
            CurrentBounty = input.ReadInt64();
            break;
          }
          case 32: {
            CurrentKills = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentDeaths = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ranking : pb::IMessage<Ranking> {
    private static readonly pb::MessageParser<Ranking> _parser = new pb::MessageParser<Ranking>(() => new Ranking());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ranking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ranking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ranking(Ranking other) : this() {
      name_ = other.name_;
      pubkey_ = other.pubkey_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      globalRanking_ = other.globalRanking_ != null ? other.globalRanking_.Clone() : null;
      earningsRanking_ = other.earningsRanking_ != null ? other.earningsRanking_.Clone() : null;
      kdRanking_ = other.kdRanking_ != null ? other.kdRanking_.Clone() : null;
      donorsRanking_ = other.donorsRanking_ != null ? other.donorsRanking_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ranking Clone() {
      return new Ranking(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 2;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 3;
    private global::Bbhrpc.Stats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.Stats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "global_ranking" field.</summary>
    public const int GlobalRankingFieldNumber = 4;
    private global::Bbhrpc.LeagueRanking globalRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.LeagueRanking GlobalRanking {
      get { return globalRanking_; }
      set {
        globalRanking_ = value;
      }
    }

    /// <summary>Field number for the "earnings_ranking" field.</summary>
    public const int EarningsRankingFieldNumber = 5;
    private global::Bbhrpc.LeagueRanking earningsRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.LeagueRanking EarningsRanking {
      get { return earningsRanking_; }
      set {
        earningsRanking_ = value;
      }
    }

    /// <summary>Field number for the "kd_ranking" field.</summary>
    public const int KdRankingFieldNumber = 6;
    private global::Bbhrpc.LeagueRanking kdRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.LeagueRanking KdRanking {
      get { return kdRanking_; }
      set {
        kdRanking_ = value;
      }
    }

    /// <summary>Field number for the "donors_ranking" field.</summary>
    public const int DonorsRankingFieldNumber = 7;
    private global::Bbhrpc.LeagueRanking donorsRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.LeagueRanking DonorsRanking {
      get { return donorsRanking_; }
      set {
        donorsRanking_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ranking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ranking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Pubkey != other.Pubkey) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(GlobalRanking, other.GlobalRanking)) return false;
      if (!object.Equals(EarningsRanking, other.EarningsRanking)) return false;
      if (!object.Equals(KdRanking, other.KdRanking)) return false;
      if (!object.Equals(DonorsRanking, other.DonorsRanking)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (globalRanking_ != null) hash ^= GlobalRanking.GetHashCode();
      if (earningsRanking_ != null) hash ^= EarningsRanking.GetHashCode();
      if (kdRanking_ != null) hash ^= KdRanking.GetHashCode();
      if (donorsRanking_ != null) hash ^= DonorsRanking.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pubkey);
      }
      if (stats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Stats);
      }
      if (globalRanking_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GlobalRanking);
      }
      if (earningsRanking_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EarningsRanking);
      }
      if (kdRanking_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KdRanking);
      }
      if (donorsRanking_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DonorsRanking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (globalRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlobalRanking);
      }
      if (earningsRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarningsRanking);
      }
      if (kdRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KdRanking);
      }
      if (donorsRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DonorsRanking);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ranking other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Bbhrpc.Stats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.globalRanking_ != null) {
        if (globalRanking_ == null) {
          GlobalRanking = new global::Bbhrpc.LeagueRanking();
        }
        GlobalRanking.MergeFrom(other.GlobalRanking);
      }
      if (other.earningsRanking_ != null) {
        if (earningsRanking_ == null) {
          EarningsRanking = new global::Bbhrpc.LeagueRanking();
        }
        EarningsRanking.MergeFrom(other.EarningsRanking);
      }
      if (other.kdRanking_ != null) {
        if (kdRanking_ == null) {
          KdRanking = new global::Bbhrpc.LeagueRanking();
        }
        KdRanking.MergeFrom(other.KdRanking);
      }
      if (other.donorsRanking_ != null) {
        if (donorsRanking_ == null) {
          DonorsRanking = new global::Bbhrpc.LeagueRanking();
        }
        DonorsRanking.MergeFrom(other.DonorsRanking);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Pubkey = input.ReadString();
            break;
          }
          case 26: {
            if (stats_ == null) {
              Stats = new global::Bbhrpc.Stats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 34: {
            if (globalRanking_ == null) {
              GlobalRanking = new global::Bbhrpc.LeagueRanking();
            }
            input.ReadMessage(GlobalRanking);
            break;
          }
          case 42: {
            if (earningsRanking_ == null) {
              EarningsRanking = new global::Bbhrpc.LeagueRanking();
            }
            input.ReadMessage(EarningsRanking);
            break;
          }
          case 50: {
            if (kdRanking_ == null) {
              KdRanking = new global::Bbhrpc.LeagueRanking();
            }
            input.ReadMessage(KdRanking);
            break;
          }
          case 58: {
            if (donorsRanking_ == null) {
              DonorsRanking = new global::Bbhrpc.LeagueRanking();
            }
            input.ReadMessage(DonorsRanking);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stats : pb::IMessage<Stats> {
    private static readonly pb::MessageParser<Stats> _parser = new pb::MessageParser<Stats>(() => new Stats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stats(Stats other) : this() {
      kills_ = other.kills_;
      deaths_ = other.deaths_;
      earnings_ = other.earnings_;
      donatedDev_ = other.donatedDev_;
      donatedGame_ = other.donatedGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stats Clone() {
      return new Stats(this);
    }

    /// <summary>Field number for the "kills" field.</summary>
    public const int KillsFieldNumber = 1;
    private int kills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Kills {
      get { return kills_; }
      set {
        kills_ = value;
      }
    }

    /// <summary>Field number for the "deaths" field.</summary>
    public const int DeathsFieldNumber = 2;
    private int deaths_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Deaths {
      get { return deaths_; }
      set {
        deaths_ = value;
      }
    }

    /// <summary>Field number for the "earnings" field.</summary>
    public const int EarningsFieldNumber = 3;
    private long earnings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Earnings {
      get { return earnings_; }
      set {
        earnings_ = value;
      }
    }

    /// <summary>Field number for the "donated_dev" field.</summary>
    public const int DonatedDevFieldNumber = 4;
    private long donatedDev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DonatedDev {
      get { return donatedDev_; }
      set {
        donatedDev_ = value;
      }
    }

    /// <summary>Field number for the "donated_game" field.</summary>
    public const int DonatedGameFieldNumber = 5;
    private long donatedGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DonatedGame {
      get { return donatedGame_; }
      set {
        donatedGame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kills != other.Kills) return false;
      if (Deaths != other.Deaths) return false;
      if (Earnings != other.Earnings) return false;
      if (DonatedDev != other.DonatedDev) return false;
      if (DonatedGame != other.DonatedGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kills != 0) hash ^= Kills.GetHashCode();
      if (Deaths != 0) hash ^= Deaths.GetHashCode();
      if (Earnings != 0L) hash ^= Earnings.GetHashCode();
      if (DonatedDev != 0L) hash ^= DonatedDev.GetHashCode();
      if (DonatedGame != 0L) hash ^= DonatedGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Kills != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Kills);
      }
      if (Deaths != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Deaths);
      }
      if (Earnings != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Earnings);
      }
      if (DonatedDev != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(DonatedDev);
      }
      if (DonatedGame != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(DonatedGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kills != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kills);
      }
      if (Deaths != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deaths);
      }
      if (Earnings != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Earnings);
      }
      if (DonatedDev != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DonatedDev);
      }
      if (DonatedGame != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DonatedGame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stats other) {
      if (other == null) {
        return;
      }
      if (other.Kills != 0) {
        Kills = other.Kills;
      }
      if (other.Deaths != 0) {
        Deaths = other.Deaths;
      }
      if (other.Earnings != 0L) {
        Earnings = other.Earnings;
      }
      if (other.DonatedDev != 0L) {
        DonatedDev = other.DonatedDev;
      }
      if (other.DonatedGame != 0L) {
        DonatedGame = other.DonatedGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Kills = input.ReadInt32();
            break;
          }
          case 16: {
            Deaths = input.ReadInt32();
            break;
          }
          case 24: {
            Earnings = input.ReadInt64();
            break;
          }
          case 32: {
            DonatedDev = input.ReadInt64();
            break;
          }
          case 40: {
            DonatedGame = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeagueRanking : pb::IMessage<LeagueRanking> {
    private static readonly pb::MessageParser<LeagueRanking> _parser = new pb::MessageParser<LeagueRanking>(() => new LeagueRanking());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeagueRanking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeagueRanking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeagueRanking(LeagueRanking other) : this() {
      score_ = other.score_;
      rank_ = other.rank_;
      badge_ = other.badge_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeagueRanking Clone() {
      return new LeagueRanking(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 2;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "badge" field.</summary>
    public const int BadgeFieldNumber = 3;
    private global::Bbhrpc.RankBadge badge_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.RankBadge Badge {
      get { return badge_; }
      set {
        badge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeagueRanking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeagueRanking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (Rank != other.Rank) return false;
      if (Badge != other.Badge) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (Badge != 0) hash ^= Badge.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Rank);
      }
      if (Badge != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Badge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (Badge != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Badge);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeagueRanking other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.Badge != 0) {
        Badge = other.Badge;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt64();
            break;
          }
          case 16: {
            Rank = input.ReadInt32();
            break;
          }
          case 24: {
            Badge = (global::Bbhrpc.RankBadge) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Advertiser : pb::IMessage<Advertiser> {
    private static readonly pb::MessageParser<Advertiser> _parser = new pb::MessageParser<Advertiser>(() => new Advertiser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Advertiser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Advertiser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Advertiser(Advertiser other) : this() {
      phash_ = other.phash_;
      name_ = other.name_;
      url_ = other.url_;
      balance_ = other.balance_;
      picUrls_ = other.picUrls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Advertiser Clone() {
      return new Advertiser(this);
    }

    /// <summary>Field number for the "phash" field.</summary>
    public const int PhashFieldNumber = 1;
    private string phash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phash {
      get { return phash_; }
      set {
        phash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 4;
    private long balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "pic_urls" field.</summary>
    public const int PicUrlsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_picUrls_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> picUrls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PicUrls {
      get { return picUrls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Advertiser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Advertiser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phash != other.Phash) return false;
      if (Name != other.Name) return false;
      if (Url != other.Url) return false;
      if (Balance != other.Balance) return false;
      if(!picUrls_.Equals(other.picUrls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Phash.Length != 0) hash ^= Phash.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Balance != 0L) hash ^= Balance.GetHashCode();
      hash ^= picUrls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Phash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phash);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (Balance != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Balance);
      }
      picUrls_.WriteTo(output, _repeated_picUrls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Phash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phash);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Balance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
      }
      size += picUrls_.CalculateSize(_repeated_picUrls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Advertiser other) {
      if (other == null) {
        return;
      }
      if (other.Phash.Length != 0) {
        Phash = other.Phash;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Balance != 0L) {
        Balance = other.Balance;
      }
      picUrls_.Add(other.picUrls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Phash = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 32: {
            Balance = input.ReadInt64();
            break;
          }
          case 42: {
            picUrls_.AddEntriesFrom(input, _repeated_picUrls_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListSkinsRequest : pb::IMessage<ListSkinsRequest> {
    private static readonly pb::MessageParser<ListSkinsRequest> _parser = new pb::MessageParser<ListSkinsRequest>(() => new ListSkinsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSkinsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSkinsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSkinsRequest(ListSkinsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSkinsRequest Clone() {
      return new ListSkinsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSkinsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSkinsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSkinsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListSkinsResponse : pb::IMessage<ListSkinsResponse> {
    private static readonly pb::MessageParser<ListSkinsResponse> _parser = new pb::MessageParser<ListSkinsResponse>(() => new ListSkinsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSkinsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSkinsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSkinsResponse(ListSkinsResponse other) : this() {
      shopItems_ = other.shopItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSkinsResponse Clone() {
      return new ListSkinsResponse(this);
    }

    /// <summary>Field number for the "shop_items" field.</summary>
    public const int ShopItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bbhrpc.ShopSkin> _repeated_shopItems_codec
        = pb::FieldCodec.ForMessage(10, global::Bbhrpc.ShopSkin.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.ShopSkin> shopItems_ = new pbc::RepeatedField<global::Bbhrpc.ShopSkin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.ShopSkin> ShopItems {
      get { return shopItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSkinsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSkinsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shopItems_.Equals(other.shopItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shopItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      shopItems_.WriteTo(output, _repeated_shopItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shopItems_.CalculateSize(_repeated_shopItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSkinsResponse other) {
      if (other == null) {
        return;
      }
      shopItems_.Add(other.shopItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shopItems_.AddEntriesFrom(input, _repeated_shopItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuySkinRequest : pb::IMessage<BuySkinRequest> {
    private static readonly pb::MessageParser<BuySkinRequest> _parser = new pb::MessageParser<BuySkinRequest>(() => new BuySkinRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuySkinRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuySkinRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuySkinRequest(BuySkinRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuySkinRequest Clone() {
      return new BuySkinRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuySkinRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuySkinRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuySkinRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuySkinResponse : pb::IMessage<BuySkinResponse> {
    private static readonly pb::MessageParser<BuySkinResponse> _parser = new pb::MessageParser<BuySkinResponse>(() => new BuySkinResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuySkinResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuySkinResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuySkinResponse(BuySkinResponse other) : this() {
      invoice_ = other.invoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuySkinResponse Clone() {
      return new BuySkinResponse(this);
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 1;
    private string invoice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Invoice {
      get { return invoice_; }
      set {
        invoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuySkinResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuySkinResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invoice != other.Invoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invoice.Length != 0) hash ^= Invoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invoice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Invoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Invoice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuySkinResponse other) {
      if (other == null) {
        return;
      }
      if (other.Invoice.Length != 0) {
        Invoice = other.Invoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invoice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSkinInventoryRequest : pb::IMessage<GetSkinInventoryRequest> {
    private static readonly pb::MessageParser<GetSkinInventoryRequest> _parser = new pb::MessageParser<GetSkinInventoryRequest>(() => new GetSkinInventoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSkinInventoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSkinInventoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSkinInventoryRequest(GetSkinInventoryRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSkinInventoryRequest Clone() {
      return new GetSkinInventoryRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSkinInventoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSkinInventoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSkinInventoryRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetSkinInventoryResponse : pb::IMessage<GetSkinInventoryResponse> {
    private static readonly pb::MessageParser<GetSkinInventoryResponse> _parser = new pb::MessageParser<GetSkinInventoryResponse>(() => new GetSkinInventoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSkinInventoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSkinInventoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSkinInventoryResponse(GetSkinInventoryResponse other) : this() {
      skinInventory_ = other.skinInventory_ != null ? other.skinInventory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSkinInventoryResponse Clone() {
      return new GetSkinInventoryResponse(this);
    }

    /// <summary>Field number for the "skin_inventory" field.</summary>
    public const int SkinInventoryFieldNumber = 1;
    private global::Bbhrpc.SkinInventory skinInventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.SkinInventory SkinInventory {
      get { return skinInventory_; }
      set {
        skinInventory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSkinInventoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSkinInventoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SkinInventory, other.SkinInventory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (skinInventory_ != null) hash ^= SkinInventory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (skinInventory_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SkinInventory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (skinInventory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkinInventory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSkinInventoryResponse other) {
      if (other == null) {
        return;
      }
      if (other.skinInventory_ != null) {
        if (skinInventory_ == null) {
          SkinInventory = new global::Bbhrpc.SkinInventory();
        }
        SkinInventory.MergeFrom(other.SkinInventory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (skinInventory_ == null) {
              SkinInventory = new global::Bbhrpc.SkinInventory();
            }
            input.ReadMessage(SkinInventory);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipSkinRequest : pb::IMessage<EquipSkinRequest> {
    private static readonly pb::MessageParser<EquipSkinRequest> _parser = new pb::MessageParser<EquipSkinRequest>(() => new EquipSkinRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipSkinRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipSkinRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipSkinRequest(EquipSkinRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipSkinRequest Clone() {
      return new EquipSkinRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipSkinRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipSkinRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipSkinRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipSkinResponse : pb::IMessage<EquipSkinResponse> {
    private static readonly pb::MessageParser<EquipSkinResponse> _parser = new pb::MessageParser<EquipSkinResponse>(() => new EquipSkinResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipSkinResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipSkinResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipSkinResponse(EquipSkinResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipSkinResponse Clone() {
      return new EquipSkinResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipSkinResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipSkinResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipSkinResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ShopSkin : pb::IMessage<ShopSkin> {
    private static readonly pb::MessageParser<ShopSkin> _parser = new pb::MessageParser<ShopSkin>(() => new ShopSkin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopSkin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopSkin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopSkin(ShopSkin other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopSkin Clone() {
      return new ShopSkin(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private long price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopSkin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopSkin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Price != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopSkin other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Price != 0L) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            Price = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkinInventory : pb::IMessage<SkinInventory> {
    private static readonly pb::MessageParser<SkinInventory> _parser = new pb::MessageParser<SkinInventory>(() => new SkinInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkinInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinInventory(SkinInventory other) : this() {
      equippedSkin_ = other.equippedSkin_;
      ownedSkins_ = other.ownedSkins_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinInventory Clone() {
      return new SkinInventory(this);
    }

    /// <summary>Field number for the "equipped_skin" field.</summary>
    public const int EquippedSkinFieldNumber = 1;
    private string equippedSkin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquippedSkin {
      get { return equippedSkin_; }
      set {
        equippedSkin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owned_skins" field.</summary>
    public const int OwnedSkinsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ownedSkins_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ownedSkins_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OwnedSkins {
      get { return ownedSkins_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkinInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkinInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquippedSkin != other.EquippedSkin) return false;
      if(!ownedSkins_.Equals(other.ownedSkins_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquippedSkin.Length != 0) hash ^= EquippedSkin.GetHashCode();
      hash ^= ownedSkins_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquippedSkin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EquippedSkin);
      }
      ownedSkins_.WriteTo(output, _repeated_ownedSkins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquippedSkin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EquippedSkin);
      }
      size += ownedSkins_.CalculateSize(_repeated_ownedSkins_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkinInventory other) {
      if (other == null) {
        return;
      }
      if (other.EquippedSkin.Length != 0) {
        EquippedSkin = other.EquippedSkin;
      }
      ownedSkins_.Add(other.ownedSkins_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EquippedSkin = input.ReadString();
            break;
          }
          case 18: {
            ownedSkins_.AddEntriesFrom(input, _repeated_ownedSkins_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameInfo : pb::IMessage<GameInfo> {
    private static readonly pb::MessageParser<GameInfo> _parser = new pb::MessageParser<GameInfo>(() => new GameInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameInfo(GameInfo other) : this() {
      gameVersion_ = other.gameVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameInfo Clone() {
      return new GameInfo(this);
    }

    /// <summary>Field number for the "game_version" field.</summary>
    public const int GameVersionFieldNumber = 1;
    private string gameVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameVersion {
      get { return gameVersion_; }
      set {
        gameVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameVersion != other.GameVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameVersion.Length != 0) hash ^= GameVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameInfo other) {
      if (other == null) {
        return;
      }
      if (other.GameVersion.Length != 0) {
        GameVersion = other.GameVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LndInfo : pb::IMessage<LndInfo> {
    private static readonly pb::MessageParser<LndInfo> _parser = new pb::MessageParser<LndInfo>(() => new LndInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LndInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LndInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LndInfo(LndInfo other) : this() {
      lndPubkey_ = other.lndPubkey_;
      lndHost_ = other.lndHost_;
      lndListenPort_ = other.lndListenPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LndInfo Clone() {
      return new LndInfo(this);
    }

    /// <summary>Field number for the "lnd_pubkey" field.</summary>
    public const int LndPubkeyFieldNumber = 1;
    private string lndPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LndPubkey {
      get { return lndPubkey_; }
      set {
        lndPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lnd_host" field.</summary>
    public const int LndHostFieldNumber = 2;
    private string lndHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LndHost {
      get { return lndHost_; }
      set {
        lndHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lnd_listen_port" field.</summary>
    public const int LndListenPortFieldNumber = 3;
    private int lndListenPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LndListenPort {
      get { return lndListenPort_; }
      set {
        lndListenPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LndInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LndInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LndPubkey != other.LndPubkey) return false;
      if (LndHost != other.LndHost) return false;
      if (LndListenPort != other.LndListenPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LndPubkey.Length != 0) hash ^= LndPubkey.GetHashCode();
      if (LndHost.Length != 0) hash ^= LndHost.GetHashCode();
      if (LndListenPort != 0) hash ^= LndListenPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LndPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LndPubkey);
      }
      if (LndHost.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LndHost);
      }
      if (LndListenPort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LndListenPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LndPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LndPubkey);
      }
      if (LndHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LndHost);
      }
      if (LndListenPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LndListenPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LndInfo other) {
      if (other == null) {
        return;
      }
      if (other.LndPubkey.Length != 0) {
        LndPubkey = other.LndPubkey;
      }
      if (other.LndHost.Length != 0) {
        LndHost = other.LndHost;
      }
      if (other.LndListenPort != 0) {
        LndListenPort = other.LndListenPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LndPubkey = input.ReadString();
            break;
          }
          case 18: {
            LndHost = input.ReadString();
            break;
          }
          case 24: {
            LndListenPort = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PoolInfo : pb::IMessage<PoolInfo> {
    private static readonly pb::MessageParser<PoolInfo> _parser = new pb::MessageParser<PoolInfo>(() => new PoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoolInfo(PoolInfo other) : this() {
      donationPool_ = other.donationPool_;
      donationPayoutPercentage_ = other.donationPayoutPercentage_;
      shopPool_ = other.shopPool_;
      shopPayoutPercentage_ = other.shopPayoutPercentage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoolInfo Clone() {
      return new PoolInfo(this);
    }

    /// <summary>Field number for the "donation_pool" field.</summary>
    public const int DonationPoolFieldNumber = 1;
    private long donationPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DonationPool {
      get { return donationPool_; }
      set {
        donationPool_ = value;
      }
    }

    /// <summary>Field number for the "donation_payout_percentage" field.</summary>
    public const int DonationPayoutPercentageFieldNumber = 2;
    private double donationPayoutPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DonationPayoutPercentage {
      get { return donationPayoutPercentage_; }
      set {
        donationPayoutPercentage_ = value;
      }
    }

    /// <summary>Field number for the "shop_pool" field.</summary>
    public const int ShopPoolFieldNumber = 3;
    private long shopPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShopPool {
      get { return shopPool_; }
      set {
        shopPool_ = value;
      }
    }

    /// <summary>Field number for the "shop_payout_percentage" field.</summary>
    public const int ShopPayoutPercentageFieldNumber = 4;
    private double shopPayoutPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ShopPayoutPercentage {
      get { return shopPayoutPercentage_; }
      set {
        shopPayoutPercentage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DonationPool != other.DonationPool) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DonationPayoutPercentage, other.DonationPayoutPercentage)) return false;
      if (ShopPool != other.ShopPool) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShopPayoutPercentage, other.ShopPayoutPercentage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DonationPool != 0L) hash ^= DonationPool.GetHashCode();
      if (DonationPayoutPercentage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DonationPayoutPercentage);
      if (ShopPool != 0L) hash ^= ShopPool.GetHashCode();
      if (ShopPayoutPercentage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShopPayoutPercentage);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DonationPool != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DonationPool);
      }
      if (DonationPayoutPercentage != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(DonationPayoutPercentage);
      }
      if (ShopPool != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ShopPool);
      }
      if (ShopPayoutPercentage != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ShopPayoutPercentage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DonationPool != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DonationPool);
      }
      if (DonationPayoutPercentage != 0D) {
        size += 1 + 8;
      }
      if (ShopPool != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShopPool);
      }
      if (ShopPayoutPercentage != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.DonationPool != 0L) {
        DonationPool = other.DonationPool;
      }
      if (other.DonationPayoutPercentage != 0D) {
        DonationPayoutPercentage = other.DonationPayoutPercentage;
      }
      if (other.ShopPool != 0L) {
        ShopPool = other.ShopPool;
      }
      if (other.ShopPayoutPercentage != 0D) {
        ShopPayoutPercentage = other.ShopPayoutPercentage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DonationPool = input.ReadInt64();
            break;
          }
          case 17: {
            DonationPayoutPercentage = input.ReadDouble();
            break;
          }
          case 24: {
            ShopPool = input.ReadInt64();
            break;
          }
          case 33: {
            ShopPayoutPercentage = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SponsorFeeInfo : pb::IMessage<SponsorFeeInfo> {
    private static readonly pb::MessageParser<SponsorFeeInfo> _parser = new pb::MessageParser<SponsorFeeInfo>(() => new SponsorFeeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SponsorFeeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsorFeeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsorFeeInfo(SponsorFeeInfo other) : this() {
      creationCost_ = other.creationCost_;
      activationFeeRate_ = other.activationFeeRate_;
      playerSatoshiCost_ = other.playerSatoshiCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsorFeeInfo Clone() {
      return new SponsorFeeInfo(this);
    }

    /// <summary>Field number for the "creation_cost" field.</summary>
    public const int CreationCostFieldNumber = 1;
    private long creationCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationCost {
      get { return creationCost_; }
      set {
        creationCost_ = value;
      }
    }

    /// <summary>Field number for the "activation_fee_rate" field.</summary>
    public const int ActivationFeeRateFieldNumber = 2;
    private float activationFeeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ActivationFeeRate {
      get { return activationFeeRate_; }
      set {
        activationFeeRate_ = value;
      }
    }

    /// <summary>Field number for the "player_satoshi_cost" field.</summary>
    public const int PlayerSatoshiCostFieldNumber = 3;
    private float playerSatoshiCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PlayerSatoshiCost {
      get { return playerSatoshiCost_; }
      set {
        playerSatoshiCost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SponsorFeeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SponsorFeeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreationCost != other.CreationCost) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ActivationFeeRate, other.ActivationFeeRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerSatoshiCost, other.PlayerSatoshiCost)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreationCost != 0L) hash ^= CreationCost.GetHashCode();
      if (ActivationFeeRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ActivationFeeRate);
      if (PlayerSatoshiCost != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerSatoshiCost);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreationCost != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CreationCost);
      }
      if (ActivationFeeRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(ActivationFeeRate);
      }
      if (PlayerSatoshiCost != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PlayerSatoshiCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreationCost != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationCost);
      }
      if (ActivationFeeRate != 0F) {
        size += 1 + 4;
      }
      if (PlayerSatoshiCost != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SponsorFeeInfo other) {
      if (other == null) {
        return;
      }
      if (other.CreationCost != 0L) {
        CreationCost = other.CreationCost;
      }
      if (other.ActivationFeeRate != 0F) {
        ActivationFeeRate = other.ActivationFeeRate;
      }
      if (other.PlayerSatoshiCost != 0F) {
        PlayerSatoshiCost = other.PlayerSatoshiCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreationCost = input.ReadInt64();
            break;
          }
          case 21: {
            ActivationFeeRate = input.ReadFloat();
            break;
          }
          case 29: {
            PlayerSatoshiCost = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeInvoiceStreamRequest : pb::IMessage<SubscribeInvoiceStreamRequest> {
    private static readonly pb::MessageParser<SubscribeInvoiceStreamRequest> _parser = new pb::MessageParser<SubscribeInvoiceStreamRequest>(() => new SubscribeInvoiceStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeInvoiceStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeInvoiceStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeInvoiceStreamRequest(SubscribeInvoiceStreamRequest other) : this() {
      invoice_ = other.invoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeInvoiceStreamRequest Clone() {
      return new SubscribeInvoiceStreamRequest(this);
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 1;
    private string invoice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Invoice {
      get { return invoice_; }
      set {
        invoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeInvoiceStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeInvoiceStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invoice != other.Invoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invoice.Length != 0) hash ^= Invoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invoice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Invoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Invoice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeInvoiceStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Invoice.Length != 0) {
        Invoice = other.Invoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invoice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeInvioceStreamResponse : pb::IMessage<SubscribeInvioceStreamResponse> {
    private static readonly pb::MessageParser<SubscribeInvioceStreamResponse> _parser = new pb::MessageParser<SubscribeInvioceStreamResponse>(() => new SubscribeInvioceStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeInvioceStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeInvioceStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeInvioceStreamResponse(SubscribeInvioceStreamResponse other) : this() {
      payed_ = other.payed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeInvioceStreamResponse Clone() {
      return new SubscribeInvioceStreamResponse(this);
    }

    /// <summary>Field number for the "payed" field.</summary>
    public const int PayedFieldNumber = 1;
    private bool payed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Payed {
      get { return payed_; }
      set {
        payed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeInvioceStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeInvioceStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payed != other.Payed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payed != false) hash ^= Payed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payed != false) {
        output.WriteRawTag(8);
        output.WriteBool(Payed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeInvioceStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.Payed != false) {
        Payed = other.Payed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Payed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDonationInvoiceRequest : pb::IMessage<GetDonationInvoiceRequest> {
    private static readonly pb::MessageParser<GetDonationInvoiceRequest> _parser = new pb::MessageParser<GetDonationInvoiceRequest>(() => new GetDonationInvoiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDonationInvoiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDonationInvoiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDonationInvoiceRequest(GetDonationInvoiceRequest other) : this() {
      devAmount_ = other.devAmount_;
      gameAmount_ = other.gameAmount_;
      benefactor_ = other.benefactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDonationInvoiceRequest Clone() {
      return new GetDonationInvoiceRequest(this);
    }

    /// <summary>Field number for the "dev_amount" field.</summary>
    public const int DevAmountFieldNumber = 1;
    private long devAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DevAmount {
      get { return devAmount_; }
      set {
        devAmount_ = value;
      }
    }

    /// <summary>Field number for the "game_amount" field.</summary>
    public const int GameAmountFieldNumber = 2;
    private long gameAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GameAmount {
      get { return gameAmount_; }
      set {
        gameAmount_ = value;
      }
    }

    /// <summary>Field number for the "benefactor" field.</summary>
    public const int BenefactorFieldNumber = 3;
    private string benefactor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Benefactor {
      get { return benefactor_; }
      set {
        benefactor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDonationInvoiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDonationInvoiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DevAmount != other.DevAmount) return false;
      if (GameAmount != other.GameAmount) return false;
      if (Benefactor != other.Benefactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DevAmount != 0L) hash ^= DevAmount.GetHashCode();
      if (GameAmount != 0L) hash ^= GameAmount.GetHashCode();
      if (Benefactor.Length != 0) hash ^= Benefactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DevAmount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DevAmount);
      }
      if (GameAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(GameAmount);
      }
      if (Benefactor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Benefactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DevAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DevAmount);
      }
      if (GameAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameAmount);
      }
      if (Benefactor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Benefactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDonationInvoiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.DevAmount != 0L) {
        DevAmount = other.DevAmount;
      }
      if (other.GameAmount != 0L) {
        GameAmount = other.GameAmount;
      }
      if (other.Benefactor.Length != 0) {
        Benefactor = other.Benefactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DevAmount = input.ReadInt64();
            break;
          }
          case 16: {
            GameAmount = input.ReadInt64();
            break;
          }
          case 26: {
            Benefactor = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDonationInvoiceResponse : pb::IMessage<GetDonationInvoiceResponse> {
    private static readonly pb::MessageParser<GetDonationInvoiceResponse> _parser = new pb::MessageParser<GetDonationInvoiceResponse>(() => new GetDonationInvoiceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDonationInvoiceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDonationInvoiceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDonationInvoiceResponse(GetDonationInvoiceResponse other) : this() {
      invoice_ = other.invoice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDonationInvoiceResponse Clone() {
      return new GetDonationInvoiceResponse(this);
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 1;
    private string invoice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Invoice {
      get { return invoice_; }
      set {
        invoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDonationInvoiceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDonationInvoiceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invoice != other.Invoice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invoice.Length != 0) hash ^= Invoice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invoice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Invoice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Invoice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDonationInvoiceResponse other) {
      if (other == null) {
        return;
      }
      if (other.Invoice.Length != 0) {
        Invoice = other.Invoice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invoice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBountyLnurlRequest : pb::IMessage<GetBountyLnurlRequest> {
    private static readonly pb::MessageParser<GetBountyLnurlRequest> _parser = new pb::MessageParser<GetBountyLnurlRequest>(() => new GetBountyLnurlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBountyLnurlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBountyLnurlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBountyLnurlRequest(GetBountyLnurlRequest other) : this() {
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBountyLnurlRequest Clone() {
      return new GetBountyLnurlRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBountyLnurlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBountyLnurlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBountyLnurlRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBountyLnurlResponse : pb::IMessage<GetBountyLnurlResponse> {
    private static readonly pb::MessageParser<GetBountyLnurlResponse> _parser = new pb::MessageParser<GetBountyLnurlResponse>(() => new GetBountyLnurlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBountyLnurlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBountyLnurlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBountyLnurlResponse(GetBountyLnurlResponse other) : this() {
      bechString_ = other.bechString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBountyLnurlResponse Clone() {
      return new GetBountyLnurlResponse(this);
    }

    /// <summary>Field number for the "bech_string" field.</summary>
    public const int BechStringFieldNumber = 1;
    private string bechString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BechString {
      get { return bechString_; }
      set {
        bechString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBountyLnurlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBountyLnurlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BechString != other.BechString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BechString.Length != 0) hash ^= BechString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BechString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BechString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BechString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BechString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBountyLnurlResponse other) {
      if (other == null) {
        return;
      }
      if (other.BechString.Length != 0) {
        BechString = other.BechString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BechString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickUserRequest : pb::IMessage<KickUserRequest> {
    private static readonly pb::MessageParser<KickUserRequest> _parser = new pb::MessageParser<KickUserRequest>(() => new KickUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickUserRequest(KickUserRequest other) : this() {
      userName_ = other.userName_;
      userPubkey_ = other.userPubkey_;
      ban_ = other.ban_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickUserRequest Clone() {
      return new KickUserRequest(this);
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_pubkey" field.</summary>
    public const int UserPubkeyFieldNumber = 2;
    private string userPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPubkey {
      get { return userPubkey_; }
      set {
        userPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 3;
    private bool ban_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ban {
      get { return ban_; }
      set {
        ban_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (UserPubkey != other.UserPubkey) return false;
      if (Ban != other.Ban) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserPubkey.Length != 0) hash ^= UserPubkey.GetHashCode();
      if (Ban != false) hash ^= Ban.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (UserPubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserPubkey);
      }
      if (Ban != false) {
        output.WriteRawTag(24);
        output.WriteBool(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPubkey);
      }
      if (Ban != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserPubkey.Length != 0) {
        UserPubkey = other.UserPubkey;
      }
      if (other.Ban != false) {
        Ban = other.Ban;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            UserPubkey = input.ReadString();
            break;
          }
          case 24: {
            Ban = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickUserResponse : pb::IMessage<KickUserResponse> {
    private static readonly pb::MessageParser<KickUserResponse> _parser = new pb::MessageParser<KickUserResponse>(() => new KickUserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickUserResponse(KickUserResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickUserResponse Clone() {
      return new KickUserResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickUserResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SendChatRequest : pb::IMessage<SendChatRequest> {
    private static readonly pb::MessageParser<SendChatRequest> _parser = new pb::MessageParser<SendChatRequest>(() => new SendChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatRequest(SendChatRequest other) : this() {
      sender_ = other.sender_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatRequest Clone() {
      return new SendChatRequest(this);
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 1;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sender != other.Sender) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sender.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Sender);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sender = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendChatResponse : pb::IMessage<SendChatResponse> {
    private static readonly pb::MessageParser<SendChatResponse> _parser = new pb::MessageParser<SendChatResponse>(() => new SendChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatResponse(SendChatResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatResponse Clone() {
      return new SendChatResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendChatResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IncreaseBountyRequest : pb::IMessage<IncreaseBountyRequest> {
    private static readonly pb::MessageParser<IncreaseBountyRequest> _parser = new pb::MessageParser<IncreaseBountyRequest>(() => new IncreaseBountyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncreaseBountyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseBountyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseBountyRequest(IncreaseBountyRequest other) : this() {
      pubkey_ = other.pubkey_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseBountyRequest Clone() {
      return new IncreaseBountyRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncreaseBountyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncreaseBountyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncreaseBountyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncreaseBountyResponse : pb::IMessage<IncreaseBountyResponse> {
    private static readonly pb::MessageParser<IncreaseBountyResponse> _parser = new pb::MessageParser<IncreaseBountyResponse>(() => new IncreaseBountyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncreaseBountyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.ClientReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseBountyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseBountyResponse(IncreaseBountyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseBountyResponse Clone() {
      return new IncreaseBountyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncreaseBountyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncreaseBountyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncreaseBountyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
