// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bbh-backend/gameserver.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bbhrpc {

  /// <summary>Holder for reflection information generated from bbh-backend/gameserver.proto</summary>
  public static partial class GameserverReflection {

    #region Descriptor
    /// <summary>File descriptor for bbh-backend/gameserver.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameserverReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxiYmgtYmFja2VuZC9nYW1lc2VydmVyLnByb3RvEgZiYmhycGMiSAoVR2V0",
            "QWR2ZXJ0aXNlcnNSZXF1ZXN0EhcKD2Jhbm5lcnNfaW5fZ2FtZRgBIAEoBRIW",
            "Cg5wbGF5ZXJfaW5fZ2FtZRgCIAEoBSJWChZHZXRBZHZlcnRpc2Vyc1Jlc3Bv",
            "bnNlEg8KB3N1YnNpZHkYASABKAMSKwoLYWR2ZXJ0aXNlcnMYAiADKAsyFi5i",
            "YmhycGMuQWR2ZXJ0aXNlckluZm8iPQoQUG9zdFN0YXRzUmVxdWVzdBIpCgxw",
            "bGF5ZXJfc3RhdHMYASADKAsyEy5iYmhycGMuUGxheWVyU3RhdHMiEwoRUG9z",
            "dFN0YXRzUmVzcG9uc2UiIQoORW5kUm9vbVJlcXVlc3QSDwoHcm9vbV9pZBgB",
            "IAEoCSIRCg9FbmRSb29tUmVzcG9uc2UiZAoLUGxheWVyU3RhdHMSEQoJcGxh",
            "eWVyX2lkGAEgASgJEhAKCGVhcm5pbmdzGAIgASgDEg0KBWtpbGxzGAMgASgF",
            "Eg4KBmRlYXRocxgEIAEoBRIRCgl3b25fcm91bmQYBSABKAgimwEKEkV2ZW50",
            "U3RyZWFtUmVxdWVzdBIhCgRraWxsGAEgASgLMhEuYmJocnBjLktpbGxFdmVu",
            "dEgAEikKCGVhcm5pbmdzGAIgASgLMhUuYmJocnBjLkVhcm5pbmdzRXZlbnRI",
            "ABIuCgtwbGF5ZXJfaW5mbxgDIAEoCzIXLmJiaHJwYy5QbGF5ZXJJbmZvRXZl",
            "bnRIAEIHCgVldmVudCIVChNFdmVudFN0cmVhbVJlc3BvbnNlIjoKCUtpbGxF",
            "dmVudBIOCgZraWxsZXIYASABKAkSDgoGdmljdGltGAIgASgJEg0KBWNhdXNl",
            "GAMgASgJIioKDUVhcm5pbmdzRXZlbnQSDAoEdXNlchgBIAEoCRILCgNhbXQY",
            "AiABKAMiyQEKD1BsYXllckluZm9FdmVudBIMCgR1c2VyGAEgASgJEjUKCmV2",
            "ZW50X3R5cGUYAiABKA4yIS5iYmhycGMuUGxheWVySW5mb0V2ZW50LkV2ZW50",
            "VHlwZRIWCg5jdXJyZW50X2JvdW50eRgDIAEoAxIVCg1jdXJyZW50X2tpbGxz",
            "GAQgASgFEhYKDmN1cnJlbnRfZGVhdGhzGAUgASgFIioKCUV2ZW50VHlwZRIN",
            "CglIRUFSVEJFQVQQABIOCgpESVNDT05ORUNUEAEiFgoUQmFja2VuZFN0cmVh",
            "bVJlcXVlc3QitwEKFUJhY2tlbmRTdHJlYW1SZXNwb25zZRIhCgRraWNrGAEg",
            "ASgLMhEuYmJocnBjLktpY2tFdmVudEgAEiUKBmJvdW50eRgCIAEoCzITLmJi",
            "aHJwYy5Cb3VudHlFdmVudEgAEiEKBGNoYXQYAyABKAsyES5iYmhycGMuQ2hh",
            "dEV2ZW50SAASKAoIbmV3X3Jvb20YBCABKAsyFC5iYmhycGMuTmV3Um9vbUV2",
            "ZW50SABCBwoFZXZlbnQiMwoJS2lja0V2ZW50EhEKCXVzZXJfbmFtZRgBIAEo",
            "CRITCgt1c2VyX3B1YmtleRgCIAEoCSI8CgtCb3VudHlFdmVudBIMCgR1c2Vy",
            "GAEgASgJEg4KBmFtb3VudBgCIAEoAxIPCgdtZXNzYWdlGAMgASgJIj4KCUNo",
            "YXRFdmVudBIPCgdtZXNzYWdlGAEgASgJEg4KBnNlbmRlchgCIAEoCRIQCghh",
            "bm5vdW5jZRgDIAEoCCIyCgxOZXdSb29tRXZlbnQSIgoIbmV3X3Jvb20YASAB",
            "KAsyEC5iYmhycGMuUm9vbUluZm8izwEKCFJvb21JbmZvEg8KB3Jvb21faWQY",
            "ASABKAkSDgoGbWFwX2lkGAIgASgJEhAKCG1hcF9kYXRhGAMgASgJEicKDW1v",
            "ZGVfcm90YXRpb24YBCADKAsyEC5iYmhycGMuR2FtZU1vZGUSEwoLcmVwZXRp",
            "dGlvbnMYBSABKAUSEgoKc3RhcnRfdGltZRgGIAEoAxIRCgliYXNlX3NhdHMY",
            "ByABKAMSKwoLYWR2ZXJ0aXNlcnMYCCADKAsyFi5iYmhycGMuQWR2ZXJ0aXNl",
            "ckluZm8iSwoIR2FtZU1vZGUSEwoLZ2FtZW1vZGVfaWQYASABKAkSKgoIc2V0",
            "dGluZ3MYAiABKAsyGC5iYmhycGMuR2FtZU1vZGVTZXR0aW5ncyK4AQoQR2Ft",
            "ZU1vZGVTZXR0aW5ncxIXCg9zZWNvbmRfZHVyYXRpb24YASABKAMSKwoNYmFz",
            "ZV9zZXR0aW5ncxgCIAEoCzIULmJiaHJwYy5CYXNlU2V0dGluZ3MSLwoPYm91",
            "bnR5X3NldHRpbmdzGAMgASgLMhYuYmJocnBjLkJvdW50eVNldHRpbmdzEi0K",
            "DnNwYXduX3NldHRpbmdzGAQgASgLMhUuYmJocnBjLlNwYXduU2V0dGluZ3Mi",
            "hwEKDEJhc2VTZXR0aW5ncxIgChh0ZWxlcG9ydF9wbGF5ZXJfb25fc3RhcnQY",
            "ASABKAgSGwoTY2xlYXJfYm91bnR5X29uX2VuZBgCIAEoCBIaChJjbGVhcl9z",
            "dGF0c19vbl9lbmQYAyABKAgSHAoUY2xlYXJfcGlja3Vwc19vbl9lbmQYBCAB",
            "KAgieAoOQm91bnR5U2V0dGluZ3MSHgoWYm91bnR5X3RpY2tfY29udmVyc2lv",
            "bhgBIAEoARIgChhib3VudHlfdGlja190aW1lX3NlY29uZHMYAiABKAISJAoc",
            "Ym91bnR5X2Ryb3BfcGVyY2VudGFnZV9kZWF0aBgDIAEoASKaAQoNU3Bhd25T",
            "ZXR0aW5ncxIbChN0aW1lX2JldHdlZW5fc3Bhd25zGAEgASgCEhwKFG1pbl9z",
            "cGF3bnNfcGVyX3NwYXduGAIgASgFEhwKFG1heF9zcGF3bnNfcGVyX3NwYXdu",
            "GAMgASgFEjAKDGRpc3RyaWJ1dGlvbhgEIAEoDjIaLmJiaHJwYy5Cb3VudHlE",
            "aXN0cmlidXRpb24ifwoOQWR2ZXJ0aXNlckluZm8SDAoEbmFtZRgBIAEoCRIS",
            "CgpzcG9uc29yaW5nGAIgASgDEhoKEnNxdWFyZV9iYW5uZXJfdXJscxgDIAMo",
            "CRINCgVwaGFzaBgEIAEoCRITCgtkaXNjcmlwdGlvbhgJIAEoCRILCgN1cmwY",
            "CiABKAkiIAoOR2V0VXNlclJlcXVlc3QSDgoGcHVia2V5GAEgASgJIi0KD0dl",
            "dFVzZXJSZXNwb25zZRIaCgR1c2VyGAEgASgLMgwuYmJocnBjLlVzZXIiJAoE",
            "VXNlchIMCgRuYW1lGAEgASgJEg4KBnB1YmtleRgCIAEoCSIkChJHZXRVc2Vy",
            "U2tpblJlcXVlc3QSDgoGcHVia2V5GAEgASgJIiwKE0dldFVzZXJTa2luUmVz",
            "cG9uc2USFQoNZXF1aXBwZWRfc2tpbhgBIAEoCSozChJCb3VudHlEaXN0cmli",
            "dXRpb24SCwoHVU5JRk9STRAAEhAKDE1BUF9XRUlHSFRFRBABMoAEChFHYW1l",
            "U2VydmVyU2VydmljZRJICgtFdmVudFN0cmVhbRIaLmJiaHJwYy5FdmVudFN0",
            "cmVhbVJlcXVlc3QaGy5iYmhycGMuRXZlbnRTdHJlYW1SZXNwb25zZSgBEk4K",
            "DUJhY2tlbmRTdHJlYW0SHC5iYmhycGMuQmFja2VuZFN0cmVhbVJlcXVlc3Qa",
            "HS5iYmhycGMuQmFja2VuZFN0cmVhbVJlc3BvbnNlMAESOgoHR2V0VXNlchIW",
            "LmJiaHJwYy5HZXRVc2VyUmVxdWVzdBoXLmJiaHJwYy5HZXRVc2VyUmVzcG9u",
            "c2USRgoLR2V0VXNlclNraW4SGi5iYmhycGMuR2V0VXNlclNraW5SZXF1ZXN0",
            "GhsuYmJocnBjLkdldFVzZXJTa2luUmVzcG9uc2USTwoOR2V0QWR2ZXJ0aXNl",
            "cnMSHS5iYmhycGMuR2V0QWR2ZXJ0aXNlcnNSZXF1ZXN0Gh4uYmJocnBjLkdl",
            "dEFkdmVydGlzZXJzUmVzcG9uc2USQAoJUG9zdFN0YXRzEhguYmJocnBjLlBv",
            "c3RTdGF0c1JlcXVlc3QaGS5iYmhycGMuUG9zdFN0YXRzUmVzcG9uc2USOgoH",
            "RW5kUm9vbRIWLmJiaHJwYy5FbmRSb29tUmVxdWVzdBoXLmJiaHJwYy5FbmRS",
            "b29tUmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Bbhrpc.BountyDistribution), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetAdvertisersRequest), global::Bbhrpc.GetAdvertisersRequest.Parser, new[]{ "BannersInGame", "PlayerInGame" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetAdvertisersResponse), global::Bbhrpc.GetAdvertisersResponse.Parser, new[]{ "Subsidy", "Advertisers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.PostStatsRequest), global::Bbhrpc.PostStatsRequest.Parser, new[]{ "PlayerStats" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.PostStatsResponse), global::Bbhrpc.PostStatsResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EndRoomRequest), global::Bbhrpc.EndRoomRequest.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EndRoomResponse), global::Bbhrpc.EndRoomResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.PlayerStats), global::Bbhrpc.PlayerStats.Parser, new[]{ "PlayerId", "Earnings", "Kills", "Deaths", "WonRound" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EventStreamRequest), global::Bbhrpc.EventStreamRequest.Parser, new[]{ "Kill", "Earnings", "PlayerInfo" }, new[]{ "Event" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EventStreamResponse), global::Bbhrpc.EventStreamResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.KillEvent), global::Bbhrpc.KillEvent.Parser, new[]{ "Killer", "Victim", "Cause" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.EarningsEvent), global::Bbhrpc.EarningsEvent.Parser, new[]{ "User", "Amt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.PlayerInfoEvent), global::Bbhrpc.PlayerInfoEvent.Parser, new[]{ "User", "EventType", "CurrentBounty", "CurrentKills", "CurrentDeaths" }, null, new[]{ typeof(global::Bbhrpc.PlayerInfoEvent.Types.EventType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BackendStreamRequest), global::Bbhrpc.BackendStreamRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BackendStreamResponse), global::Bbhrpc.BackendStreamResponse.Parser, new[]{ "Kick", "Bounty", "Chat", "NewRoom" }, new[]{ "Event" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.KickEvent), global::Bbhrpc.KickEvent.Parser, new[]{ "UserName", "UserPubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BountyEvent), global::Bbhrpc.BountyEvent.Parser, new[]{ "User", "Amount", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.ChatEvent), global::Bbhrpc.ChatEvent.Parser, new[]{ "Message", "Sender", "Announce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.NewRoomEvent), global::Bbhrpc.NewRoomEvent.Parser, new[]{ "NewRoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.RoomInfo), global::Bbhrpc.RoomInfo.Parser, new[]{ "RoomId", "MapId", "MapData", "ModeRotation", "Repetitions", "StartTime", "BaseSats", "Advertisers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GameMode), global::Bbhrpc.GameMode.Parser, new[]{ "GamemodeId", "Settings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GameModeSettings), global::Bbhrpc.GameModeSettings.Parser, new[]{ "SecondDuration", "BaseSettings", "BountySettings", "SpawnSettings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BaseSettings), global::Bbhrpc.BaseSettings.Parser, new[]{ "TeleportPlayerOnStart", "ClearBountyOnEnd", "ClearStatsOnEnd", "ClearPickupsOnEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.BountySettings), global::Bbhrpc.BountySettings.Parser, new[]{ "BountyTickConversion", "BountyTickTimeSeconds", "BountyDropPercentageDeath" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.SpawnSettings), global::Bbhrpc.SpawnSettings.Parser, new[]{ "TimeBetweenSpawns", "MinSpawnsPerSpawn", "MaxSpawnsPerSpawn", "Distribution" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.AdvertiserInfo), global::Bbhrpc.AdvertiserInfo.Parser, new[]{ "Name", "Sponsoring", "SquareBannerUrls", "Phash", "Discription", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetUserRequest), global::Bbhrpc.GetUserRequest.Parser, new[]{ "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetUserResponse), global::Bbhrpc.GetUserResponse.Parser, new[]{ "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.User), global::Bbhrpc.User.Parser, new[]{ "Name", "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetUserSkinRequest), global::Bbhrpc.GetUserSkinRequest.Parser, new[]{ "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bbhrpc.GetUserSkinResponse), global::Bbhrpc.GetUserSkinResponse.Parser, new[]{ "EquippedSkin" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BountyDistribution {
    [pbr::OriginalName("UNIFORM")] Uniform = 0,
    [pbr::OriginalName("MAP_WEIGHTED")] MapWeighted = 1,
  }

  #endregion

  #region Messages
  public sealed partial class GetAdvertisersRequest : pb::IMessage<GetAdvertisersRequest> {
    private static readonly pb::MessageParser<GetAdvertisersRequest> _parser = new pb::MessageParser<GetAdvertisersRequest>(() => new GetAdvertisersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAdvertisersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdvertisersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdvertisersRequest(GetAdvertisersRequest other) : this() {
      bannersInGame_ = other.bannersInGame_;
      playerInGame_ = other.playerInGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdvertisersRequest Clone() {
      return new GetAdvertisersRequest(this);
    }

    /// <summary>Field number for the "banners_in_game" field.</summary>
    public const int BannersInGameFieldNumber = 1;
    private int bannersInGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BannersInGame {
      get { return bannersInGame_; }
      set {
        bannersInGame_ = value;
      }
    }

    /// <summary>Field number for the "player_in_game" field.</summary>
    public const int PlayerInGameFieldNumber = 2;
    private int playerInGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerInGame {
      get { return playerInGame_; }
      set {
        playerInGame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAdvertisersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAdvertisersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BannersInGame != other.BannersInGame) return false;
      if (PlayerInGame != other.PlayerInGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BannersInGame != 0) hash ^= BannersInGame.GetHashCode();
      if (PlayerInGame != 0) hash ^= PlayerInGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BannersInGame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BannersInGame);
      }
      if (PlayerInGame != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerInGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BannersInGame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BannersInGame);
      }
      if (PlayerInGame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerInGame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAdvertisersRequest other) {
      if (other == null) {
        return;
      }
      if (other.BannersInGame != 0) {
        BannersInGame = other.BannersInGame;
      }
      if (other.PlayerInGame != 0) {
        PlayerInGame = other.PlayerInGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BannersInGame = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerInGame = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAdvertisersResponse : pb::IMessage<GetAdvertisersResponse> {
    private static readonly pb::MessageParser<GetAdvertisersResponse> _parser = new pb::MessageParser<GetAdvertisersResponse>(() => new GetAdvertisersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAdvertisersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdvertisersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdvertisersResponse(GetAdvertisersResponse other) : this() {
      subsidy_ = other.subsidy_;
      advertisers_ = other.advertisers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdvertisersResponse Clone() {
      return new GetAdvertisersResponse(this);
    }

    /// <summary>Field number for the "subsidy" field.</summary>
    public const int SubsidyFieldNumber = 1;
    private long subsidy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Subsidy {
      get { return subsidy_; }
      set {
        subsidy_ = value;
      }
    }

    /// <summary>Field number for the "advertisers" field.</summary>
    public const int AdvertisersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bbhrpc.AdvertiserInfo> _repeated_advertisers_codec
        = pb::FieldCodec.ForMessage(18, global::Bbhrpc.AdvertiserInfo.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.AdvertiserInfo> advertisers_ = new pbc::RepeatedField<global::Bbhrpc.AdvertiserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.AdvertiserInfo> Advertisers {
      get { return advertisers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAdvertisersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAdvertisersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subsidy != other.Subsidy) return false;
      if(!advertisers_.Equals(other.advertisers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Subsidy != 0L) hash ^= Subsidy.GetHashCode();
      hash ^= advertisers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Subsidy != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Subsidy);
      }
      advertisers_.WriteTo(output, _repeated_advertisers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Subsidy != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Subsidy);
      }
      size += advertisers_.CalculateSize(_repeated_advertisers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAdvertisersResponse other) {
      if (other == null) {
        return;
      }
      if (other.Subsidy != 0L) {
        Subsidy = other.Subsidy;
      }
      advertisers_.Add(other.advertisers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Subsidy = input.ReadInt64();
            break;
          }
          case 18: {
            advertisers_.AddEntriesFrom(input, _repeated_advertisers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostStatsRequest : pb::IMessage<PostStatsRequest> {
    private static readonly pb::MessageParser<PostStatsRequest> _parser = new pb::MessageParser<PostStatsRequest>(() => new PostStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatsRequest(PostStatsRequest other) : this() {
      playerStats_ = other.playerStats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatsRequest Clone() {
      return new PostStatsRequest(this);
    }

    /// <summary>Field number for the "player_stats" field.</summary>
    public const int PlayerStatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bbhrpc.PlayerStats> _repeated_playerStats_codec
        = pb::FieldCodec.ForMessage(10, global::Bbhrpc.PlayerStats.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.PlayerStats> playerStats_ = new pbc::RepeatedField<global::Bbhrpc.PlayerStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.PlayerStats> PlayerStats {
      get { return playerStats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerStats_.Equals(other.playerStats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerStats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerStats_.WriteTo(output, _repeated_playerStats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerStats_.CalculateSize(_repeated_playerStats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostStatsRequest other) {
      if (other == null) {
        return;
      }
      playerStats_.Add(other.playerStats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerStats_.AddEntriesFrom(input, _repeated_playerStats_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostStatsResponse : pb::IMessage<PostStatsResponse> {
    private static readonly pb::MessageParser<PostStatsResponse> _parser = new pb::MessageParser<PostStatsResponse>(() => new PostStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatsResponse(PostStatsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatsResponse Clone() {
      return new PostStatsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostStatsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class EndRoomRequest : pb::IMessage<EndRoomRequest> {
    private static readonly pb::MessageParser<EndRoomRequest> _parser = new pb::MessageParser<EndRoomRequest>(() => new EndRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndRoomRequest(EndRoomRequest other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndRoomRequest Clone() {
      return new EndRoomRequest(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndRoomResponse : pb::IMessage<EndRoomResponse> {
    private static readonly pb::MessageParser<EndRoomResponse> _parser = new pb::MessageParser<EndRoomResponse>(() => new EndRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndRoomResponse(EndRoomResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndRoomResponse Clone() {
      return new EndRoomResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndRoomResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PlayerStats : pb::IMessage<PlayerStats> {
    private static readonly pb::MessageParser<PlayerStats> _parser = new pb::MessageParser<PlayerStats>(() => new PlayerStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats(PlayerStats other) : this() {
      playerId_ = other.playerId_;
      earnings_ = other.earnings_;
      kills_ = other.kills_;
      deaths_ = other.deaths_;
      wonRound_ = other.wonRound_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats Clone() {
      return new PlayerStats(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "earnings" field.</summary>
    public const int EarningsFieldNumber = 2;
    private long earnings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Earnings {
      get { return earnings_; }
      set {
        earnings_ = value;
      }
    }

    /// <summary>Field number for the "kills" field.</summary>
    public const int KillsFieldNumber = 3;
    private int kills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Kills {
      get { return kills_; }
      set {
        kills_ = value;
      }
    }

    /// <summary>Field number for the "deaths" field.</summary>
    public const int DeathsFieldNumber = 4;
    private int deaths_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Deaths {
      get { return deaths_; }
      set {
        deaths_ = value;
      }
    }

    /// <summary>Field number for the "won_round" field.</summary>
    public const int WonRoundFieldNumber = 5;
    private bool wonRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WonRound {
      get { return wonRound_; }
      set {
        wonRound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Earnings != other.Earnings) return false;
      if (Kills != other.Kills) return false;
      if (Deaths != other.Deaths) return false;
      if (WonRound != other.WonRound) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Earnings != 0L) hash ^= Earnings.GetHashCode();
      if (Kills != 0) hash ^= Kills.GetHashCode();
      if (Deaths != 0) hash ^= Deaths.GetHashCode();
      if (WonRound != false) hash ^= WonRound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (Earnings != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Earnings);
      }
      if (Kills != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Kills);
      }
      if (Deaths != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Deaths);
      }
      if (WonRound != false) {
        output.WriteRawTag(40);
        output.WriteBool(WonRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Earnings != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Earnings);
      }
      if (Kills != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kills);
      }
      if (Deaths != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deaths);
      }
      if (WonRound != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStats other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Earnings != 0L) {
        Earnings = other.Earnings;
      }
      if (other.Kills != 0) {
        Kills = other.Kills;
      }
      if (other.Deaths != 0) {
        Deaths = other.Deaths;
      }
      if (other.WonRound != false) {
        WonRound = other.WonRound;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            Earnings = input.ReadInt64();
            break;
          }
          case 24: {
            Kills = input.ReadInt32();
            break;
          }
          case 32: {
            Deaths = input.ReadInt32();
            break;
          }
          case 40: {
            WonRound = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventStreamRequest : pb::IMessage<EventStreamRequest> {
    private static readonly pb::MessageParser<EventStreamRequest> _parser = new pb::MessageParser<EventStreamRequest>(() => new EventStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStreamRequest(EventStreamRequest other) : this() {
      switch (other.EventCase) {
        case EventOneofCase.Kill:
          Kill = other.Kill.Clone();
          break;
        case EventOneofCase.Earnings:
          Earnings = other.Earnings.Clone();
          break;
        case EventOneofCase.PlayerInfo:
          PlayerInfo = other.PlayerInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStreamRequest Clone() {
      return new EventStreamRequest(this);
    }

    /// <summary>Field number for the "kill" field.</summary>
    public const int KillFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.KillEvent Kill {
      get { return eventCase_ == EventOneofCase.Kill ? (global::Bbhrpc.KillEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Kill;
      }
    }

    /// <summary>Field number for the "earnings" field.</summary>
    public const int EarningsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.EarningsEvent Earnings {
      get { return eventCase_ == EventOneofCase.Earnings ? (global::Bbhrpc.EarningsEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Earnings;
      }
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.PlayerInfoEvent PlayerInfo {
      get { return eventCase_ == EventOneofCase.PlayerInfo ? (global::Bbhrpc.PlayerInfoEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PlayerInfo;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      Kill = 1,
      Earnings = 2,
      PlayerInfo = 3,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Kill, other.Kill)) return false;
      if (!object.Equals(Earnings, other.Earnings)) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventCase_ == EventOneofCase.Kill) hash ^= Kill.GetHashCode();
      if (eventCase_ == EventOneofCase.Earnings) hash ^= Earnings.GetHashCode();
      if (eventCase_ == EventOneofCase.PlayerInfo) hash ^= PlayerInfo.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (eventCase_ == EventOneofCase.Kill) {
        output.WriteRawTag(10);
        output.WriteMessage(Kill);
      }
      if (eventCase_ == EventOneofCase.Earnings) {
        output.WriteRawTag(18);
        output.WriteMessage(Earnings);
      }
      if (eventCase_ == EventOneofCase.PlayerInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventCase_ == EventOneofCase.Kill) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kill);
      }
      if (eventCase_ == EventOneofCase.Earnings) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Earnings);
      }
      if (eventCase_ == EventOneofCase.PlayerInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStreamRequest other) {
      if (other == null) {
        return;
      }
      switch (other.EventCase) {
        case EventOneofCase.Kill:
          if (Kill == null) {
            Kill = new global::Bbhrpc.KillEvent();
          }
          Kill.MergeFrom(other.Kill);
          break;
        case EventOneofCase.Earnings:
          if (Earnings == null) {
            Earnings = new global::Bbhrpc.EarningsEvent();
          }
          Earnings.MergeFrom(other.Earnings);
          break;
        case EventOneofCase.PlayerInfo:
          if (PlayerInfo == null) {
            PlayerInfo = new global::Bbhrpc.PlayerInfoEvent();
          }
          PlayerInfo.MergeFrom(other.PlayerInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Bbhrpc.KillEvent subBuilder = new global::Bbhrpc.KillEvent();
            if (eventCase_ == EventOneofCase.Kill) {
              subBuilder.MergeFrom(Kill);
            }
            input.ReadMessage(subBuilder);
            Kill = subBuilder;
            break;
          }
          case 18: {
            global::Bbhrpc.EarningsEvent subBuilder = new global::Bbhrpc.EarningsEvent();
            if (eventCase_ == EventOneofCase.Earnings) {
              subBuilder.MergeFrom(Earnings);
            }
            input.ReadMessage(subBuilder);
            Earnings = subBuilder;
            break;
          }
          case 26: {
            global::Bbhrpc.PlayerInfoEvent subBuilder = new global::Bbhrpc.PlayerInfoEvent();
            if (eventCase_ == EventOneofCase.PlayerInfo) {
              subBuilder.MergeFrom(PlayerInfo);
            }
            input.ReadMessage(subBuilder);
            PlayerInfo = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventStreamResponse : pb::IMessage<EventStreamResponse> {
    private static readonly pb::MessageParser<EventStreamResponse> _parser = new pb::MessageParser<EventStreamResponse>(() => new EventStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStreamResponse(EventStreamResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStreamResponse Clone() {
      return new EventStreamResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStreamResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class KillEvent : pb::IMessage<KillEvent> {
    private static readonly pb::MessageParser<KillEvent> _parser = new pb::MessageParser<KillEvent>(() => new KillEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KillEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillEvent(KillEvent other) : this() {
      killer_ = other.killer_;
      victim_ = other.victim_;
      cause_ = other.cause_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillEvent Clone() {
      return new KillEvent(this);
    }

    /// <summary>Field number for the "killer" field.</summary>
    public const int KillerFieldNumber = 1;
    private string killer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Killer {
      get { return killer_; }
      set {
        killer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "victim" field.</summary>
    public const int VictimFieldNumber = 2;
    private string victim_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Victim {
      get { return victim_; }
      set {
        victim_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cause" field.</summary>
    public const int CauseFieldNumber = 3;
    private string cause_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cause {
      get { return cause_; }
      set {
        cause_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KillEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KillEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Killer != other.Killer) return false;
      if (Victim != other.Victim) return false;
      if (Cause != other.Cause) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Killer.Length != 0) hash ^= Killer.GetHashCode();
      if (Victim.Length != 0) hash ^= Victim.GetHashCode();
      if (Cause.Length != 0) hash ^= Cause.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Killer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Killer);
      }
      if (Victim.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Victim);
      }
      if (Cause.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cause);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Killer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Killer);
      }
      if (Victim.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Victim);
      }
      if (Cause.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cause);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KillEvent other) {
      if (other == null) {
        return;
      }
      if (other.Killer.Length != 0) {
        Killer = other.Killer;
      }
      if (other.Victim.Length != 0) {
        Victim = other.Victim;
      }
      if (other.Cause.Length != 0) {
        Cause = other.Cause;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Killer = input.ReadString();
            break;
          }
          case 18: {
            Victim = input.ReadString();
            break;
          }
          case 26: {
            Cause = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EarningsEvent : pb::IMessage<EarningsEvent> {
    private static readonly pb::MessageParser<EarningsEvent> _parser = new pb::MessageParser<EarningsEvent>(() => new EarningsEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EarningsEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarningsEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarningsEvent(EarningsEvent other) : this() {
      user_ = other.user_;
      amt_ = other.amt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarningsEvent Clone() {
      return new EarningsEvent(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amt" field.</summary>
    public const int AmtFieldNumber = 2;
    private long amt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amt {
      get { return amt_; }
      set {
        amt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EarningsEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EarningsEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (User != other.User) return false;
      if (Amt != other.Amt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Amt != 0L) hash ^= Amt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (User.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(User);
      }
      if (Amt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Amt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EarningsEvent other) {
      if (other == null) {
        return;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Amt != 0L) {
        Amt = other.Amt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            User = input.ReadString();
            break;
          }
          case 16: {
            Amt = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerInfoEvent : pb::IMessage<PlayerInfoEvent> {
    private static readonly pb::MessageParser<PlayerInfoEvent> _parser = new pb::MessageParser<PlayerInfoEvent>(() => new PlayerInfoEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfoEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoEvent(PlayerInfoEvent other) : this() {
      user_ = other.user_;
      eventType_ = other.eventType_;
      currentBounty_ = other.currentBounty_;
      currentKills_ = other.currentKills_;
      currentDeaths_ = other.currentDeaths_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoEvent Clone() {
      return new PlayerInfoEvent(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 2;
    private global::Bbhrpc.PlayerInfoEvent.Types.EventType eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.PlayerInfoEvent.Types.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "current_bounty" field.</summary>
    public const int CurrentBountyFieldNumber = 3;
    private long currentBounty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentBounty {
      get { return currentBounty_; }
      set {
        currentBounty_ = value;
      }
    }

    /// <summary>Field number for the "current_kills" field.</summary>
    public const int CurrentKillsFieldNumber = 4;
    private int currentKills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentKills {
      get { return currentKills_; }
      set {
        currentKills_ = value;
      }
    }

    /// <summary>Field number for the "current_deaths" field.</summary>
    public const int CurrentDeathsFieldNumber = 5;
    private int currentDeaths_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentDeaths {
      get { return currentDeaths_; }
      set {
        currentDeaths_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfoEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (User != other.User) return false;
      if (EventType != other.EventType) return false;
      if (CurrentBounty != other.CurrentBounty) return false;
      if (CurrentKills != other.CurrentKills) return false;
      if (CurrentDeaths != other.CurrentDeaths) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (CurrentBounty != 0L) hash ^= CurrentBounty.GetHashCode();
      if (CurrentKills != 0) hash ^= CurrentKills.GetHashCode();
      if (CurrentDeaths != 0) hash ^= CurrentDeaths.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (User.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(User);
      }
      if (EventType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EventType);
      }
      if (CurrentBounty != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrentBounty);
      }
      if (CurrentKills != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrentKills);
      }
      if (CurrentDeaths != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentDeaths);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (CurrentBounty != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentBounty);
      }
      if (CurrentKills != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentKills);
      }
      if (CurrentDeaths != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentDeaths);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfoEvent other) {
      if (other == null) {
        return;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.CurrentBounty != 0L) {
        CurrentBounty = other.CurrentBounty;
      }
      if (other.CurrentKills != 0) {
        CurrentKills = other.CurrentKills;
      }
      if (other.CurrentDeaths != 0) {
        CurrentDeaths = other.CurrentDeaths;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            User = input.ReadString();
            break;
          }
          case 16: {
            EventType = (global::Bbhrpc.PlayerInfoEvent.Types.EventType) input.ReadEnum();
            break;
          }
          case 24: {
            CurrentBounty = input.ReadInt64();
            break;
          }
          case 32: {
            CurrentKills = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentDeaths = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerInfoEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EventType {
        [pbr::OriginalName("HEARTBEAT")] Heartbeat = 0,
        [pbr::OriginalName("DISCONNECT")] Disconnect = 1,
      }

    }
    #endregion

  }

  public sealed partial class BackendStreamRequest : pb::IMessage<BackendStreamRequest> {
    private static readonly pb::MessageParser<BackendStreamRequest> _parser = new pb::MessageParser<BackendStreamRequest>(() => new BackendStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackendStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendStreamRequest(BackendStreamRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendStreamRequest Clone() {
      return new BackendStreamRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackendStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackendStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackendStreamRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BackendStreamResponse : pb::IMessage<BackendStreamResponse> {
    private static readonly pb::MessageParser<BackendStreamResponse> _parser = new pb::MessageParser<BackendStreamResponse>(() => new BackendStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackendStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendStreamResponse(BackendStreamResponse other) : this() {
      switch (other.EventCase) {
        case EventOneofCase.Kick:
          Kick = other.Kick.Clone();
          break;
        case EventOneofCase.Bounty:
          Bounty = other.Bounty.Clone();
          break;
        case EventOneofCase.Chat:
          Chat = other.Chat.Clone();
          break;
        case EventOneofCase.NewRoom:
          NewRoom = other.NewRoom.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendStreamResponse Clone() {
      return new BackendStreamResponse(this);
    }

    /// <summary>Field number for the "kick" field.</summary>
    public const int KickFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.KickEvent Kick {
      get { return eventCase_ == EventOneofCase.Kick ? (global::Bbhrpc.KickEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Kick;
      }
    }

    /// <summary>Field number for the "bounty" field.</summary>
    public const int BountyFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.BountyEvent Bounty {
      get { return eventCase_ == EventOneofCase.Bounty ? (global::Bbhrpc.BountyEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Bounty;
      }
    }

    /// <summary>Field number for the "chat" field.</summary>
    public const int ChatFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.ChatEvent Chat {
      get { return eventCase_ == EventOneofCase.Chat ? (global::Bbhrpc.ChatEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Chat;
      }
    }

    /// <summary>Field number for the "new_room" field.</summary>
    public const int NewRoomFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.NewRoomEvent NewRoom {
      get { return eventCase_ == EventOneofCase.NewRoom ? (global::Bbhrpc.NewRoomEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.NewRoom;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      Kick = 1,
      Bounty = 2,
      Chat = 3,
      NewRoom = 4,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackendStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackendStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Kick, other.Kick)) return false;
      if (!object.Equals(Bounty, other.Bounty)) return false;
      if (!object.Equals(Chat, other.Chat)) return false;
      if (!object.Equals(NewRoom, other.NewRoom)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventCase_ == EventOneofCase.Kick) hash ^= Kick.GetHashCode();
      if (eventCase_ == EventOneofCase.Bounty) hash ^= Bounty.GetHashCode();
      if (eventCase_ == EventOneofCase.Chat) hash ^= Chat.GetHashCode();
      if (eventCase_ == EventOneofCase.NewRoom) hash ^= NewRoom.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (eventCase_ == EventOneofCase.Kick) {
        output.WriteRawTag(10);
        output.WriteMessage(Kick);
      }
      if (eventCase_ == EventOneofCase.Bounty) {
        output.WriteRawTag(18);
        output.WriteMessage(Bounty);
      }
      if (eventCase_ == EventOneofCase.Chat) {
        output.WriteRawTag(26);
        output.WriteMessage(Chat);
      }
      if (eventCase_ == EventOneofCase.NewRoom) {
        output.WriteRawTag(34);
        output.WriteMessage(NewRoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventCase_ == EventOneofCase.Kick) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kick);
      }
      if (eventCase_ == EventOneofCase.Bounty) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bounty);
      }
      if (eventCase_ == EventOneofCase.Chat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chat);
      }
      if (eventCase_ == EventOneofCase.NewRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewRoom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackendStreamResponse other) {
      if (other == null) {
        return;
      }
      switch (other.EventCase) {
        case EventOneofCase.Kick:
          if (Kick == null) {
            Kick = new global::Bbhrpc.KickEvent();
          }
          Kick.MergeFrom(other.Kick);
          break;
        case EventOneofCase.Bounty:
          if (Bounty == null) {
            Bounty = new global::Bbhrpc.BountyEvent();
          }
          Bounty.MergeFrom(other.Bounty);
          break;
        case EventOneofCase.Chat:
          if (Chat == null) {
            Chat = new global::Bbhrpc.ChatEvent();
          }
          Chat.MergeFrom(other.Chat);
          break;
        case EventOneofCase.NewRoom:
          if (NewRoom == null) {
            NewRoom = new global::Bbhrpc.NewRoomEvent();
          }
          NewRoom.MergeFrom(other.NewRoom);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Bbhrpc.KickEvent subBuilder = new global::Bbhrpc.KickEvent();
            if (eventCase_ == EventOneofCase.Kick) {
              subBuilder.MergeFrom(Kick);
            }
            input.ReadMessage(subBuilder);
            Kick = subBuilder;
            break;
          }
          case 18: {
            global::Bbhrpc.BountyEvent subBuilder = new global::Bbhrpc.BountyEvent();
            if (eventCase_ == EventOneofCase.Bounty) {
              subBuilder.MergeFrom(Bounty);
            }
            input.ReadMessage(subBuilder);
            Bounty = subBuilder;
            break;
          }
          case 26: {
            global::Bbhrpc.ChatEvent subBuilder = new global::Bbhrpc.ChatEvent();
            if (eventCase_ == EventOneofCase.Chat) {
              subBuilder.MergeFrom(Chat);
            }
            input.ReadMessage(subBuilder);
            Chat = subBuilder;
            break;
          }
          case 34: {
            global::Bbhrpc.NewRoomEvent subBuilder = new global::Bbhrpc.NewRoomEvent();
            if (eventCase_ == EventOneofCase.NewRoom) {
              subBuilder.MergeFrom(NewRoom);
            }
            input.ReadMessage(subBuilder);
            NewRoom = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickEvent : pb::IMessage<KickEvent> {
    private static readonly pb::MessageParser<KickEvent> _parser = new pb::MessageParser<KickEvent>(() => new KickEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickEvent(KickEvent other) : this() {
      userName_ = other.userName_;
      userPubkey_ = other.userPubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickEvent Clone() {
      return new KickEvent(this);
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_pubkey" field.</summary>
    public const int UserPubkeyFieldNumber = 2;
    private string userPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPubkey {
      get { return userPubkey_; }
      set {
        userPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (UserPubkey != other.UserPubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserPubkey.Length != 0) hash ^= UserPubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (UserPubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserPubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickEvent other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserPubkey.Length != 0) {
        UserPubkey = other.UserPubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            UserPubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BountyEvent : pb::IMessage<BountyEvent> {
    private static readonly pb::MessageParser<BountyEvent> _parser = new pb::MessageParser<BountyEvent>(() => new BountyEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BountyEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BountyEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BountyEvent(BountyEvent other) : this() {
      user_ = other.user_;
      amount_ = other.amount_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BountyEvent Clone() {
      return new BountyEvent(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BountyEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BountyEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (User != other.User) return false;
      if (Amount != other.Amount) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (User.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BountyEvent other) {
      if (other == null) {
        return;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            User = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatEvent : pb::IMessage<ChatEvent> {
    private static readonly pb::MessageParser<ChatEvent> _parser = new pb::MessageParser<ChatEvent>(() => new ChatEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatEvent(ChatEvent other) : this() {
      message_ = other.message_;
      sender_ = other.sender_;
      announce_ = other.announce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatEvent Clone() {
      return new ChatEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 2;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "announce" field.</summary>
    public const int AnnounceFieldNumber = 3;
    private bool announce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Announce {
      get { return announce_; }
      set {
        announce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (Sender != other.Sender) return false;
      if (Announce != other.Announce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Announce != false) hash ^= Announce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (Announce != false) {
        output.WriteRawTag(24);
        output.WriteBool(Announce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Announce != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatEvent other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Announce != false) {
        Announce = other.Announce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 24: {
            Announce = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewRoomEvent : pb::IMessage<NewRoomEvent> {
    private static readonly pb::MessageParser<NewRoomEvent> _parser = new pb::MessageParser<NewRoomEvent>(() => new NewRoomEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewRoomEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewRoomEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewRoomEvent(NewRoomEvent other) : this() {
      newRoom_ = other.newRoom_ != null ? other.newRoom_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewRoomEvent Clone() {
      return new NewRoomEvent(this);
    }

    /// <summary>Field number for the "new_room" field.</summary>
    public const int NewRoomFieldNumber = 1;
    private global::Bbhrpc.RoomInfo newRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.RoomInfo NewRoom {
      get { return newRoom_; }
      set {
        newRoom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewRoomEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewRoomEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewRoom, other.NewRoom)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newRoom_ != null) hash ^= NewRoom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (newRoom_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewRoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newRoom_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewRoom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewRoomEvent other) {
      if (other == null) {
        return;
      }
      if (other.newRoom_ != null) {
        if (newRoom_ == null) {
          NewRoom = new global::Bbhrpc.RoomInfo();
        }
        NewRoom.MergeFrom(other.NewRoom);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (newRoom_ == null) {
              NewRoom = new global::Bbhrpc.RoomInfo();
            }
            input.ReadMessage(NewRoom);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      roomId_ = other.roomId_;
      mapId_ = other.mapId_;
      mapData_ = other.mapData_;
      modeRotation_ = other.modeRotation_.Clone();
      repetitions_ = other.repetitions_;
      startTime_ = other.startTime_;
      baseSats_ = other.baseSats_;
      advertisers_ = other.advertisers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 2;
    private string mapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_data" field.</summary>
    public const int MapDataFieldNumber = 3;
    private string mapData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapData {
      get { return mapData_; }
      set {
        mapData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mode_rotation" field.</summary>
    public const int ModeRotationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bbhrpc.GameMode> _repeated_modeRotation_codec
        = pb::FieldCodec.ForMessage(34, global::Bbhrpc.GameMode.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.GameMode> modeRotation_ = new pbc::RepeatedField<global::Bbhrpc.GameMode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.GameMode> ModeRotation {
      get { return modeRotation_; }
    }

    /// <summary>Field number for the "repetitions" field.</summary>
    public const int RepetitionsFieldNumber = 5;
    private int repetitions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Repetitions {
      get { return repetitions_; }
      set {
        repetitions_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "base_sats" field.</summary>
    public const int BaseSatsFieldNumber = 7;
    private long baseSats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BaseSats {
      get { return baseSats_; }
      set {
        baseSats_ = value;
      }
    }

    /// <summary>Field number for the "advertisers" field.</summary>
    public const int AdvertisersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Bbhrpc.AdvertiserInfo> _repeated_advertisers_codec
        = pb::FieldCodec.ForMessage(66, global::Bbhrpc.AdvertiserInfo.Parser);
    private readonly pbc::RepeatedField<global::Bbhrpc.AdvertiserInfo> advertisers_ = new pbc::RepeatedField<global::Bbhrpc.AdvertiserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bbhrpc.AdvertiserInfo> Advertisers {
      get { return advertisers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (MapId != other.MapId) return false;
      if (MapData != other.MapData) return false;
      if(!modeRotation_.Equals(other.modeRotation_)) return false;
      if (Repetitions != other.Repetitions) return false;
      if (StartTime != other.StartTime) return false;
      if (BaseSats != other.BaseSats) return false;
      if(!advertisers_.Equals(other.advertisers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (MapData.Length != 0) hash ^= MapData.GetHashCode();
      hash ^= modeRotation_.GetHashCode();
      if (Repetitions != 0) hash ^= Repetitions.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (BaseSats != 0L) hash ^= BaseSats.GetHashCode();
      hash ^= advertisers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (MapId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MapId);
      }
      if (MapData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MapData);
      }
      modeRotation_.WriteTo(output, _repeated_modeRotation_codec);
      if (Repetitions != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Repetitions);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (BaseSats != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(BaseSats);
      }
      advertisers_.WriteTo(output, _repeated_advertisers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (MapData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapData);
      }
      size += modeRotation_.CalculateSize(_repeated_modeRotation_codec);
      if (Repetitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Repetitions);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (BaseSats != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseSats);
      }
      size += advertisers_.CalculateSize(_repeated_advertisers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.MapData.Length != 0) {
        MapData = other.MapData;
      }
      modeRotation_.Add(other.modeRotation_);
      if (other.Repetitions != 0) {
        Repetitions = other.Repetitions;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.BaseSats != 0L) {
        BaseSats = other.BaseSats;
      }
      advertisers_.Add(other.advertisers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            MapId = input.ReadString();
            break;
          }
          case 26: {
            MapData = input.ReadString();
            break;
          }
          case 34: {
            modeRotation_.AddEntriesFrom(input, _repeated_modeRotation_codec);
            break;
          }
          case 40: {
            Repetitions = input.ReadInt32();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            BaseSats = input.ReadInt64();
            break;
          }
          case 66: {
            advertisers_.AddEntriesFrom(input, _repeated_advertisers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameMode : pb::IMessage<GameMode> {
    private static readonly pb::MessageParser<GameMode> _parser = new pb::MessageParser<GameMode>(() => new GameMode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMode(GameMode other) : this() {
      gamemodeId_ = other.gamemodeId_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMode Clone() {
      return new GameMode(this);
    }

    /// <summary>Field number for the "gamemode_id" field.</summary>
    public const int GamemodeIdFieldNumber = 1;
    private string gamemodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GamemodeId {
      get { return gamemodeId_; }
      set {
        gamemodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    private global::Bbhrpc.GameModeSettings settings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.GameModeSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GamemodeId != other.GamemodeId) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GamemodeId.Length != 0) hash ^= GamemodeId.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GamemodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GamemodeId);
      }
      if (settings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GamemodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GamemodeId);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMode other) {
      if (other == null) {
        return;
      }
      if (other.GamemodeId.Length != 0) {
        GamemodeId = other.GamemodeId;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Bbhrpc.GameModeSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GamemodeId = input.ReadString();
            break;
          }
          case 18: {
            if (settings_ == null) {
              Settings = new global::Bbhrpc.GameModeSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameModeSettings : pb::IMessage<GameModeSettings> {
    private static readonly pb::MessageParser<GameModeSettings> _parser = new pb::MessageParser<GameModeSettings>(() => new GameModeSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameModeSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameModeSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameModeSettings(GameModeSettings other) : this() {
      secondDuration_ = other.secondDuration_;
      baseSettings_ = other.baseSettings_ != null ? other.baseSettings_.Clone() : null;
      bountySettings_ = other.bountySettings_ != null ? other.bountySettings_.Clone() : null;
      spawnSettings_ = other.spawnSettings_ != null ? other.spawnSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameModeSettings Clone() {
      return new GameModeSettings(this);
    }

    /// <summary>Field number for the "second_duration" field.</summary>
    public const int SecondDurationFieldNumber = 1;
    private long secondDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SecondDuration {
      get { return secondDuration_; }
      set {
        secondDuration_ = value;
      }
    }

    /// <summary>Field number for the "base_settings" field.</summary>
    public const int BaseSettingsFieldNumber = 2;
    private global::Bbhrpc.BaseSettings baseSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.BaseSettings BaseSettings {
      get { return baseSettings_; }
      set {
        baseSettings_ = value;
      }
    }

    /// <summary>Field number for the "bounty_settings" field.</summary>
    public const int BountySettingsFieldNumber = 3;
    private global::Bbhrpc.BountySettings bountySettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.BountySettings BountySettings {
      get { return bountySettings_; }
      set {
        bountySettings_ = value;
      }
    }

    /// <summary>Field number for the "spawn_settings" field.</summary>
    public const int SpawnSettingsFieldNumber = 4;
    private global::Bbhrpc.SpawnSettings spawnSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.SpawnSettings SpawnSettings {
      get { return spawnSettings_; }
      set {
        spawnSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameModeSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameModeSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SecondDuration != other.SecondDuration) return false;
      if (!object.Equals(BaseSettings, other.BaseSettings)) return false;
      if (!object.Equals(BountySettings, other.BountySettings)) return false;
      if (!object.Equals(SpawnSettings, other.SpawnSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SecondDuration != 0L) hash ^= SecondDuration.GetHashCode();
      if (baseSettings_ != null) hash ^= BaseSettings.GetHashCode();
      if (bountySettings_ != null) hash ^= BountySettings.GetHashCode();
      if (spawnSettings_ != null) hash ^= SpawnSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SecondDuration != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SecondDuration);
      }
      if (baseSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseSettings);
      }
      if (bountySettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BountySettings);
      }
      if (spawnSettings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SpawnSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SecondDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SecondDuration);
      }
      if (baseSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseSettings);
      }
      if (bountySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BountySettings);
      }
      if (spawnSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpawnSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameModeSettings other) {
      if (other == null) {
        return;
      }
      if (other.SecondDuration != 0L) {
        SecondDuration = other.SecondDuration;
      }
      if (other.baseSettings_ != null) {
        if (baseSettings_ == null) {
          BaseSettings = new global::Bbhrpc.BaseSettings();
        }
        BaseSettings.MergeFrom(other.BaseSettings);
      }
      if (other.bountySettings_ != null) {
        if (bountySettings_ == null) {
          BountySettings = new global::Bbhrpc.BountySettings();
        }
        BountySettings.MergeFrom(other.BountySettings);
      }
      if (other.spawnSettings_ != null) {
        if (spawnSettings_ == null) {
          SpawnSettings = new global::Bbhrpc.SpawnSettings();
        }
        SpawnSettings.MergeFrom(other.SpawnSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SecondDuration = input.ReadInt64();
            break;
          }
          case 18: {
            if (baseSettings_ == null) {
              BaseSettings = new global::Bbhrpc.BaseSettings();
            }
            input.ReadMessage(BaseSettings);
            break;
          }
          case 26: {
            if (bountySettings_ == null) {
              BountySettings = new global::Bbhrpc.BountySettings();
            }
            input.ReadMessage(BountySettings);
            break;
          }
          case 34: {
            if (spawnSettings_ == null) {
              SpawnSettings = new global::Bbhrpc.SpawnSettings();
            }
            input.ReadMessage(SpawnSettings);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BaseSettings : pb::IMessage<BaseSettings> {
    private static readonly pb::MessageParser<BaseSettings> _parser = new pb::MessageParser<BaseSettings>(() => new BaseSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseSettings(BaseSettings other) : this() {
      teleportPlayerOnStart_ = other.teleportPlayerOnStart_;
      clearBountyOnEnd_ = other.clearBountyOnEnd_;
      clearStatsOnEnd_ = other.clearStatsOnEnd_;
      clearPickupsOnEnd_ = other.clearPickupsOnEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseSettings Clone() {
      return new BaseSettings(this);
    }

    /// <summary>Field number for the "teleport_player_on_start" field.</summary>
    public const int TeleportPlayerOnStartFieldNumber = 1;
    private bool teleportPlayerOnStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TeleportPlayerOnStart {
      get { return teleportPlayerOnStart_; }
      set {
        teleportPlayerOnStart_ = value;
      }
    }

    /// <summary>Field number for the "clear_bounty_on_end" field.</summary>
    public const int ClearBountyOnEndFieldNumber = 2;
    private bool clearBountyOnEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearBountyOnEnd {
      get { return clearBountyOnEnd_; }
      set {
        clearBountyOnEnd_ = value;
      }
    }

    /// <summary>Field number for the "clear_stats_on_end" field.</summary>
    public const int ClearStatsOnEndFieldNumber = 3;
    private bool clearStatsOnEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearStatsOnEnd {
      get { return clearStatsOnEnd_; }
      set {
        clearStatsOnEnd_ = value;
      }
    }

    /// <summary>Field number for the "clear_pickups_on_end" field.</summary>
    public const int ClearPickupsOnEndFieldNumber = 4;
    private bool clearPickupsOnEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearPickupsOnEnd {
      get { return clearPickupsOnEnd_; }
      set {
        clearPickupsOnEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeleportPlayerOnStart != other.TeleportPlayerOnStart) return false;
      if (ClearBountyOnEnd != other.ClearBountyOnEnd) return false;
      if (ClearStatsOnEnd != other.ClearStatsOnEnd) return false;
      if (ClearPickupsOnEnd != other.ClearPickupsOnEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeleportPlayerOnStart != false) hash ^= TeleportPlayerOnStart.GetHashCode();
      if (ClearBountyOnEnd != false) hash ^= ClearBountyOnEnd.GetHashCode();
      if (ClearStatsOnEnd != false) hash ^= ClearStatsOnEnd.GetHashCode();
      if (ClearPickupsOnEnd != false) hash ^= ClearPickupsOnEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeleportPlayerOnStart != false) {
        output.WriteRawTag(8);
        output.WriteBool(TeleportPlayerOnStart);
      }
      if (ClearBountyOnEnd != false) {
        output.WriteRawTag(16);
        output.WriteBool(ClearBountyOnEnd);
      }
      if (ClearStatsOnEnd != false) {
        output.WriteRawTag(24);
        output.WriteBool(ClearStatsOnEnd);
      }
      if (ClearPickupsOnEnd != false) {
        output.WriteRawTag(32);
        output.WriteBool(ClearPickupsOnEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeleportPlayerOnStart != false) {
        size += 1 + 1;
      }
      if (ClearBountyOnEnd != false) {
        size += 1 + 1;
      }
      if (ClearStatsOnEnd != false) {
        size += 1 + 1;
      }
      if (ClearPickupsOnEnd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseSettings other) {
      if (other == null) {
        return;
      }
      if (other.TeleportPlayerOnStart != false) {
        TeleportPlayerOnStart = other.TeleportPlayerOnStart;
      }
      if (other.ClearBountyOnEnd != false) {
        ClearBountyOnEnd = other.ClearBountyOnEnd;
      }
      if (other.ClearStatsOnEnd != false) {
        ClearStatsOnEnd = other.ClearStatsOnEnd;
      }
      if (other.ClearPickupsOnEnd != false) {
        ClearPickupsOnEnd = other.ClearPickupsOnEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeleportPlayerOnStart = input.ReadBool();
            break;
          }
          case 16: {
            ClearBountyOnEnd = input.ReadBool();
            break;
          }
          case 24: {
            ClearStatsOnEnd = input.ReadBool();
            break;
          }
          case 32: {
            ClearPickupsOnEnd = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BountySettings : pb::IMessage<BountySettings> {
    private static readonly pb::MessageParser<BountySettings> _parser = new pb::MessageParser<BountySettings>(() => new BountySettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BountySettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BountySettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BountySettings(BountySettings other) : this() {
      bountyTickConversion_ = other.bountyTickConversion_;
      bountyTickTimeSeconds_ = other.bountyTickTimeSeconds_;
      bountyDropPercentageDeath_ = other.bountyDropPercentageDeath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BountySettings Clone() {
      return new BountySettings(this);
    }

    /// <summary>Field number for the "bounty_tick_conversion" field.</summary>
    public const int BountyTickConversionFieldNumber = 1;
    private double bountyTickConversion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BountyTickConversion {
      get { return bountyTickConversion_; }
      set {
        bountyTickConversion_ = value;
      }
    }

    /// <summary>Field number for the "bounty_tick_time_seconds" field.</summary>
    public const int BountyTickTimeSecondsFieldNumber = 2;
    private float bountyTickTimeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BountyTickTimeSeconds {
      get { return bountyTickTimeSeconds_; }
      set {
        bountyTickTimeSeconds_ = value;
      }
    }

    /// <summary>Field number for the "bounty_drop_percentage_death" field.</summary>
    public const int BountyDropPercentageDeathFieldNumber = 3;
    private double bountyDropPercentageDeath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BountyDropPercentageDeath {
      get { return bountyDropPercentageDeath_; }
      set {
        bountyDropPercentageDeath_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BountySettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BountySettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BountyTickConversion, other.BountyTickConversion)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BountyTickTimeSeconds, other.BountyTickTimeSeconds)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BountyDropPercentageDeath, other.BountyDropPercentageDeath)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BountyTickConversion != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BountyTickConversion);
      if (BountyTickTimeSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BountyTickTimeSeconds);
      if (BountyDropPercentageDeath != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BountyDropPercentageDeath);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BountyTickConversion != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(BountyTickConversion);
      }
      if (BountyTickTimeSeconds != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(BountyTickTimeSeconds);
      }
      if (BountyDropPercentageDeath != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BountyDropPercentageDeath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BountyTickConversion != 0D) {
        size += 1 + 8;
      }
      if (BountyTickTimeSeconds != 0F) {
        size += 1 + 4;
      }
      if (BountyDropPercentageDeath != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BountySettings other) {
      if (other == null) {
        return;
      }
      if (other.BountyTickConversion != 0D) {
        BountyTickConversion = other.BountyTickConversion;
      }
      if (other.BountyTickTimeSeconds != 0F) {
        BountyTickTimeSeconds = other.BountyTickTimeSeconds;
      }
      if (other.BountyDropPercentageDeath != 0D) {
        BountyDropPercentageDeath = other.BountyDropPercentageDeath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            BountyTickConversion = input.ReadDouble();
            break;
          }
          case 21: {
            BountyTickTimeSeconds = input.ReadFloat();
            break;
          }
          case 25: {
            BountyDropPercentageDeath = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpawnSettings : pb::IMessage<SpawnSettings> {
    private static readonly pb::MessageParser<SpawnSettings> _parser = new pb::MessageParser<SpawnSettings>(() => new SpawnSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpawnSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnSettings(SpawnSettings other) : this() {
      timeBetweenSpawns_ = other.timeBetweenSpawns_;
      minSpawnsPerSpawn_ = other.minSpawnsPerSpawn_;
      maxSpawnsPerSpawn_ = other.maxSpawnsPerSpawn_;
      distribution_ = other.distribution_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnSettings Clone() {
      return new SpawnSettings(this);
    }

    /// <summary>Field number for the "time_between_spawns" field.</summary>
    public const int TimeBetweenSpawnsFieldNumber = 1;
    private float timeBetweenSpawns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TimeBetweenSpawns {
      get { return timeBetweenSpawns_; }
      set {
        timeBetweenSpawns_ = value;
      }
    }

    /// <summary>Field number for the "min_spawns_per_spawn" field.</summary>
    public const int MinSpawnsPerSpawnFieldNumber = 2;
    private int minSpawnsPerSpawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinSpawnsPerSpawn {
      get { return minSpawnsPerSpawn_; }
      set {
        minSpawnsPerSpawn_ = value;
      }
    }

    /// <summary>Field number for the "max_spawns_per_spawn" field.</summary>
    public const int MaxSpawnsPerSpawnFieldNumber = 3;
    private int maxSpawnsPerSpawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxSpawnsPerSpawn {
      get { return maxSpawnsPerSpawn_; }
      set {
        maxSpawnsPerSpawn_ = value;
      }
    }

    /// <summary>Field number for the "distribution" field.</summary>
    public const int DistributionFieldNumber = 4;
    private global::Bbhrpc.BountyDistribution distribution_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.BountyDistribution Distribution {
      get { return distribution_; }
      set {
        distribution_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpawnSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpawnSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeBetweenSpawns, other.TimeBetweenSpawns)) return false;
      if (MinSpawnsPerSpawn != other.MinSpawnsPerSpawn) return false;
      if (MaxSpawnsPerSpawn != other.MaxSpawnsPerSpawn) return false;
      if (Distribution != other.Distribution) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeBetweenSpawns != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeBetweenSpawns);
      if (MinSpawnsPerSpawn != 0) hash ^= MinSpawnsPerSpawn.GetHashCode();
      if (MaxSpawnsPerSpawn != 0) hash ^= MaxSpawnsPerSpawn.GetHashCode();
      if (Distribution != 0) hash ^= Distribution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeBetweenSpawns != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(TimeBetweenSpawns);
      }
      if (MinSpawnsPerSpawn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinSpawnsPerSpawn);
      }
      if (MaxSpawnsPerSpawn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxSpawnsPerSpawn);
      }
      if (Distribution != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Distribution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeBetweenSpawns != 0F) {
        size += 1 + 4;
      }
      if (MinSpawnsPerSpawn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinSpawnsPerSpawn);
      }
      if (MaxSpawnsPerSpawn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSpawnsPerSpawn);
      }
      if (Distribution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Distribution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpawnSettings other) {
      if (other == null) {
        return;
      }
      if (other.TimeBetweenSpawns != 0F) {
        TimeBetweenSpawns = other.TimeBetweenSpawns;
      }
      if (other.MinSpawnsPerSpawn != 0) {
        MinSpawnsPerSpawn = other.MinSpawnsPerSpawn;
      }
      if (other.MaxSpawnsPerSpawn != 0) {
        MaxSpawnsPerSpawn = other.MaxSpawnsPerSpawn;
      }
      if (other.Distribution != 0) {
        Distribution = other.Distribution;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            TimeBetweenSpawns = input.ReadFloat();
            break;
          }
          case 16: {
            MinSpawnsPerSpawn = input.ReadInt32();
            break;
          }
          case 24: {
            MaxSpawnsPerSpawn = input.ReadInt32();
            break;
          }
          case 32: {
            Distribution = (global::Bbhrpc.BountyDistribution) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdvertiserInfo : pb::IMessage<AdvertiserInfo> {
    private static readonly pb::MessageParser<AdvertiserInfo> _parser = new pb::MessageParser<AdvertiserInfo>(() => new AdvertiserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdvertiserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvertiserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvertiserInfo(AdvertiserInfo other) : this() {
      name_ = other.name_;
      sponsoring_ = other.sponsoring_;
      squareBannerUrls_ = other.squareBannerUrls_.Clone();
      phash_ = other.phash_;
      discription_ = other.discription_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvertiserInfo Clone() {
      return new AdvertiserInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sponsoring" field.</summary>
    public const int SponsoringFieldNumber = 2;
    private long sponsoring_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sponsoring {
      get { return sponsoring_; }
      set {
        sponsoring_ = value;
      }
    }

    /// <summary>Field number for the "square_banner_urls" field.</summary>
    public const int SquareBannerUrlsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_squareBannerUrls_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> squareBannerUrls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SquareBannerUrls {
      get { return squareBannerUrls_; }
    }

    /// <summary>Field number for the "phash" field.</summary>
    public const int PhashFieldNumber = 4;
    private string phash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phash {
      get { return phash_; }
      set {
        phash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "discription" field.</summary>
    public const int DiscriptionFieldNumber = 9;
    private string discription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Discription {
      get { return discription_; }
      set {
        discription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 10;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdvertiserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdvertiserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Sponsoring != other.Sponsoring) return false;
      if(!squareBannerUrls_.Equals(other.squareBannerUrls_)) return false;
      if (Phash != other.Phash) return false;
      if (Discription != other.Discription) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Sponsoring != 0L) hash ^= Sponsoring.GetHashCode();
      hash ^= squareBannerUrls_.GetHashCode();
      if (Phash.Length != 0) hash ^= Phash.GetHashCode();
      if (Discription.Length != 0) hash ^= Discription.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Sponsoring != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Sponsoring);
      }
      squareBannerUrls_.WriteTo(output, _repeated_squareBannerUrls_codec);
      if (Phash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Phash);
      }
      if (Discription.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Discription);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Sponsoring != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Sponsoring);
      }
      size += squareBannerUrls_.CalculateSize(_repeated_squareBannerUrls_codec);
      if (Phash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phash);
      }
      if (Discription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Discription);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdvertiserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Sponsoring != 0L) {
        Sponsoring = other.Sponsoring;
      }
      squareBannerUrls_.Add(other.squareBannerUrls_);
      if (other.Phash.Length != 0) {
        Phash = other.Phash;
      }
      if (other.Discription.Length != 0) {
        Discription = other.Discription;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Sponsoring = input.ReadInt64();
            break;
          }
          case 26: {
            squareBannerUrls_.AddEntriesFrom(input, _repeated_squareBannerUrls_codec);
            break;
          }
          case 34: {
            Phash = input.ReadString();
            break;
          }
          case 74: {
            Discription = input.ReadString();
            break;
          }
          case 82: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserRequest : pb::IMessage<GetUserRequest> {
    private static readonly pb::MessageParser<GetUserRequest> _parser = new pb::MessageParser<GetUserRequest>(() => new GetUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserRequest(GetUserRequest other) : this() {
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserRequest Clone() {
      return new GetUserRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserResponse : pb::IMessage<GetUserResponse> {
    private static readonly pb::MessageParser<GetUserResponse> _parser = new pb::MessageParser<GetUserResponse>(() => new GetUserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse(GetUserResponse other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse Clone() {
      return new GetUserResponse(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Bbhrpc.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bbhrpc.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Bbhrpc.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Bbhrpc.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      name_ = other.name_;
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 2;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserSkinRequest : pb::IMessage<GetUserSkinRequest> {
    private static readonly pb::MessageParser<GetUserSkinRequest> _parser = new pb::MessageParser<GetUserSkinRequest>(() => new GetUserSkinRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserSkinRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSkinRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSkinRequest(GetUserSkinRequest other) : this() {
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSkinRequest Clone() {
      return new GetUserSkinRequest(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserSkinRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserSkinRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserSkinRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserSkinResponse : pb::IMessage<GetUserSkinResponse> {
    private static readonly pb::MessageParser<GetUserSkinResponse> _parser = new pb::MessageParser<GetUserSkinResponse>(() => new GetUserSkinResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserSkinResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bbhrpc.GameserverReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSkinResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSkinResponse(GetUserSkinResponse other) : this() {
      equippedSkin_ = other.equippedSkin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSkinResponse Clone() {
      return new GetUserSkinResponse(this);
    }

    /// <summary>Field number for the "equipped_skin" field.</summary>
    public const int EquippedSkinFieldNumber = 1;
    private string equippedSkin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquippedSkin {
      get { return equippedSkin_; }
      set {
        equippedSkin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserSkinResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserSkinResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquippedSkin != other.EquippedSkin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquippedSkin.Length != 0) hash ^= EquippedSkin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquippedSkin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EquippedSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquippedSkin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EquippedSkin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserSkinResponse other) {
      if (other == null) {
        return;
      }
      if (other.EquippedSkin.Length != 0) {
        EquippedSkin = other.EquippedSkin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EquippedSkin = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
