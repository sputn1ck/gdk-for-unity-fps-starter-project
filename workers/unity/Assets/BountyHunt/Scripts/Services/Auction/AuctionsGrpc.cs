// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lightning-auction/auctions.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace LightningAuction.Delivery {
  public static partial class LightningAuctionBidder
  {
    static readonly string __ServiceName = "LightningAuction.LightningAuctionBidder";

    static readonly grpc::Marshaller<global::LightningAuction.Delivery.BidRequest> __Marshaller_LightningAuction_BidRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.BidRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.BidResponse> __Marshaller_LightningAuction_BidResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.BidResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.CancelBidRequest> __Marshaller_LightningAuction_CancelBidRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.CancelBidRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.CancelBidResponse> __Marshaller_LightningAuction_CancelBidResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.CancelBidResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.GetBidRequest> __Marshaller_LightningAuction_GetBidRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.GetBidRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.GetBidResponse> __Marshaller_LightningAuction_GetBidResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.GetBidResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.GetAuctionRequest> __Marshaller_LightningAuction_GetAuctionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.GetAuctionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.GetAuctionResponse> __Marshaller_LightningAuction_GetAuctionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.GetAuctionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.ListAuctionsRequest> __Marshaller_LightningAuction_ListAuctionsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.ListAuctionsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.ListAuctionsResponse> __Marshaller_LightningAuction_ListAuctionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.ListAuctionsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.SubscribeToBidRequest> __Marshaller_LightningAuction_SubscribeToBidRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.SubscribeToBidRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.SubscribeToBidResponse> __Marshaller_LightningAuction_SubscribeToBidResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.SubscribeToBidResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.SimpleChatRequest> __Marshaller_LightningAuction_SimpleChatRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.SimpleChatRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.SimpleChatResponse> __Marshaller_LightningAuction_SimpleChatResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.SimpleChatResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::LightningAuction.Delivery.BidRequest, global::LightningAuction.Delivery.BidResponse> __Method_Bid = new grpc::Method<global::LightningAuction.Delivery.BidRequest, global::LightningAuction.Delivery.BidResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Bid",
        __Marshaller_LightningAuction_BidRequest,
        __Marshaller_LightningAuction_BidResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.CancelBidRequest, global::LightningAuction.Delivery.CancelBidResponse> __Method_CancelBid = new grpc::Method<global::LightningAuction.Delivery.CancelBidRequest, global::LightningAuction.Delivery.CancelBidResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelBid",
        __Marshaller_LightningAuction_CancelBidRequest,
        __Marshaller_LightningAuction_CancelBidResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.GetBidRequest, global::LightningAuction.Delivery.GetBidResponse> __Method_GetBid = new grpc::Method<global::LightningAuction.Delivery.GetBidRequest, global::LightningAuction.Delivery.GetBidResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBid",
        __Marshaller_LightningAuction_GetBidRequest,
        __Marshaller_LightningAuction_GetBidResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.GetAuctionRequest, global::LightningAuction.Delivery.GetAuctionResponse> __Method_GetAuction = new grpc::Method<global::LightningAuction.Delivery.GetAuctionRequest, global::LightningAuction.Delivery.GetAuctionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuction",
        __Marshaller_LightningAuction_GetAuctionRequest,
        __Marshaller_LightningAuction_GetAuctionResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.ListAuctionsRequest, global::LightningAuction.Delivery.ListAuctionsResponse> __Method_ListAuctions = new grpc::Method<global::LightningAuction.Delivery.ListAuctionsRequest, global::LightningAuction.Delivery.ListAuctionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAuctions",
        __Marshaller_LightningAuction_ListAuctionsRequest,
        __Marshaller_LightningAuction_ListAuctionsResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.SubscribeToBidRequest, global::LightningAuction.Delivery.SubscribeToBidResponse> __Method_SubscribeToBid = new grpc::Method<global::LightningAuction.Delivery.SubscribeToBidRequest, global::LightningAuction.Delivery.SubscribeToBidResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeToBid",
        __Marshaller_LightningAuction_SubscribeToBidRequest,
        __Marshaller_LightningAuction_SubscribeToBidResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.SimpleChatRequest, global::LightningAuction.Delivery.SimpleChatResponse> __Method_SimpleChat = new grpc::Method<global::LightningAuction.Delivery.SimpleChatRequest, global::LightningAuction.Delivery.SimpleChatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SimpleChat",
        __Marshaller_LightningAuction_SimpleChatRequest,
        __Marshaller_LightningAuction_SimpleChatResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LightningAuctionBidder</summary>
    [grpc::BindServiceMethod(typeof(LightningAuctionBidder), "BindService")]
    public abstract partial class LightningAuctionBidderBase
    {
      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.BidResponse> Bid(global::LightningAuction.Delivery.BidRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.CancelBidResponse> CancelBid(global::LightningAuction.Delivery.CancelBidRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.GetBidResponse> GetBid(global::LightningAuction.Delivery.GetBidRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.GetAuctionResponse> GetAuction(global::LightningAuction.Delivery.GetAuctionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.ListAuctionsResponse> ListAuctions(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SubscribeToBid(global::LightningAuction.Delivery.SubscribeToBidRequest request, grpc::IServerStreamWriter<global::LightningAuction.Delivery.SubscribeToBidResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.SimpleChatResponse> SimpleChat(global::LightningAuction.Delivery.SimpleChatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LightningAuctionBidder</summary>
    public partial class LightningAuctionBidderClient : grpc::ClientBase<LightningAuctionBidderClient>
    {
      /// <summary>Creates a new client for LightningAuctionBidder</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public LightningAuctionBidderClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LightningAuctionBidder that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public LightningAuctionBidderClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected LightningAuctionBidderClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected LightningAuctionBidderClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::LightningAuction.Delivery.BidResponse Bid(global::LightningAuction.Delivery.BidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Bid(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.BidResponse Bid(global::LightningAuction.Delivery.BidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Bid, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.BidResponse> BidAsync(global::LightningAuction.Delivery.BidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BidAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.BidResponse> BidAsync(global::LightningAuction.Delivery.BidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Bid, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.CancelBidResponse CancelBid(global::LightningAuction.Delivery.CancelBidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelBid(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.CancelBidResponse CancelBid(global::LightningAuction.Delivery.CancelBidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelBid, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.CancelBidResponse> CancelBidAsync(global::LightningAuction.Delivery.CancelBidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelBidAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.CancelBidResponse> CancelBidAsync(global::LightningAuction.Delivery.CancelBidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelBid, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.GetBidResponse GetBid(global::LightningAuction.Delivery.GetBidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBid(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.GetBidResponse GetBid(global::LightningAuction.Delivery.GetBidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBid, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.GetBidResponse> GetBidAsync(global::LightningAuction.Delivery.GetBidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBidAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.GetBidResponse> GetBidAsync(global::LightningAuction.Delivery.GetBidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBid, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.GetAuctionResponse GetAuction(global::LightningAuction.Delivery.GetAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.GetAuctionResponse GetAuction(global::LightningAuction.Delivery.GetAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.GetAuctionResponse> GetAuctionAsync(global::LightningAuction.Delivery.GetAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuctionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.GetAuctionResponse> GetAuctionAsync(global::LightningAuction.Delivery.GetAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuction, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.ListAuctionsResponse ListAuctions(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuctions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.ListAuctionsResponse ListAuctions(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAuctions, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.ListAuctionsResponse> ListAuctionsAsync(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuctionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.ListAuctionsResponse> ListAuctionsAsync(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAuctions, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::LightningAuction.Delivery.SubscribeToBidResponse> SubscribeToBid(global::LightningAuction.Delivery.SubscribeToBidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeToBid(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::LightningAuction.Delivery.SubscribeToBidResponse> SubscribeToBid(global::LightningAuction.Delivery.SubscribeToBidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeToBid, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.SimpleChatResponse SimpleChat(global::LightningAuction.Delivery.SimpleChatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SimpleChat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.SimpleChatResponse SimpleChat(global::LightningAuction.Delivery.SimpleChatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SimpleChat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.SimpleChatResponse> SimpleChatAsync(global::LightningAuction.Delivery.SimpleChatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SimpleChatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.SimpleChatResponse> SimpleChatAsync(global::LightningAuction.Delivery.SimpleChatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SimpleChat, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override LightningAuctionBidderClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LightningAuctionBidderClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(LightningAuctionBidderBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Bid, serviceImpl.Bid)
          .AddMethod(__Method_CancelBid, serviceImpl.CancelBid)
          .AddMethod(__Method_GetBid, serviceImpl.GetBid)
          .AddMethod(__Method_GetAuction, serviceImpl.GetAuction)
          .AddMethod(__Method_ListAuctions, serviceImpl.ListAuctions)
          .AddMethod(__Method_SubscribeToBid, serviceImpl.SubscribeToBid)
          .AddMethod(__Method_SimpleChat, serviceImpl.SimpleChat).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LightningAuctionBidderBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Bid, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.BidRequest, global::LightningAuction.Delivery.BidResponse>(serviceImpl.Bid));
      serviceBinder.AddMethod(__Method_CancelBid, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.CancelBidRequest, global::LightningAuction.Delivery.CancelBidResponse>(serviceImpl.CancelBid));
      serviceBinder.AddMethod(__Method_GetBid, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.GetBidRequest, global::LightningAuction.Delivery.GetBidResponse>(serviceImpl.GetBid));
      serviceBinder.AddMethod(__Method_GetAuction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.GetAuctionRequest, global::LightningAuction.Delivery.GetAuctionResponse>(serviceImpl.GetAuction));
      serviceBinder.AddMethod(__Method_ListAuctions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.ListAuctionsRequest, global::LightningAuction.Delivery.ListAuctionsResponse>(serviceImpl.ListAuctions));
      serviceBinder.AddMethod(__Method_SubscribeToBid, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::LightningAuction.Delivery.SubscribeToBidRequest, global::LightningAuction.Delivery.SubscribeToBidResponse>(serviceImpl.SubscribeToBid));
      serviceBinder.AddMethod(__Method_SimpleChat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.SimpleChatRequest, global::LightningAuction.Delivery.SimpleChatResponse>(serviceImpl.SimpleChat));
    }

  }
  public static partial class LightningAuctionAdmin
  {
    static readonly string __ServiceName = "LightningAuction.LightningAuctionAdmin";

    static readonly grpc::Marshaller<global::LightningAuction.Delivery.StartAuctionRequest> __Marshaller_LightningAuction_StartAuctionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.StartAuctionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.StartAuctionResponse> __Marshaller_LightningAuction_StartAuctionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.StartAuctionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.EndAuctionRequest> __Marshaller_LightningAuction_EndAuctionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.EndAuctionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.EndAuctionResponse> __Marshaller_LightningAuction_EndAuctionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.EndAuctionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.AdminGetAuctionRequest> __Marshaller_LightningAuction_AdminGetAuctionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.AdminGetAuctionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.AdminGetAuctionResponse> __Marshaller_LightningAuction_AdminGetAuctionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.AdminGetAuctionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.ListAuctionsRequest> __Marshaller_LightningAuction_ListAuctionsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.ListAuctionsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LightningAuction.Delivery.ListAuctionsResponse> __Marshaller_LightningAuction_ListAuctionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LightningAuction.Delivery.ListAuctionsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::LightningAuction.Delivery.StartAuctionRequest, global::LightningAuction.Delivery.StartAuctionResponse> __Method_StartAuction = new grpc::Method<global::LightningAuction.Delivery.StartAuctionRequest, global::LightningAuction.Delivery.StartAuctionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartAuction",
        __Marshaller_LightningAuction_StartAuctionRequest,
        __Marshaller_LightningAuction_StartAuctionResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.EndAuctionRequest, global::LightningAuction.Delivery.EndAuctionResponse> __Method_EndAuction = new grpc::Method<global::LightningAuction.Delivery.EndAuctionRequest, global::LightningAuction.Delivery.EndAuctionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EndAuction",
        __Marshaller_LightningAuction_EndAuctionRequest,
        __Marshaller_LightningAuction_EndAuctionResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.AdminGetAuctionRequest, global::LightningAuction.Delivery.AdminGetAuctionResponse> __Method_GetAuction = new grpc::Method<global::LightningAuction.Delivery.AdminGetAuctionRequest, global::LightningAuction.Delivery.AdminGetAuctionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuction",
        __Marshaller_LightningAuction_AdminGetAuctionRequest,
        __Marshaller_LightningAuction_AdminGetAuctionResponse);

    static readonly grpc::Method<global::LightningAuction.Delivery.ListAuctionsRequest, global::LightningAuction.Delivery.ListAuctionsResponse> __Method_ListAuctions = new grpc::Method<global::LightningAuction.Delivery.ListAuctionsRequest, global::LightningAuction.Delivery.ListAuctionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAuctions",
        __Marshaller_LightningAuction_ListAuctionsRequest,
        __Marshaller_LightningAuction_ListAuctionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of LightningAuctionAdmin</summary>
    [grpc::BindServiceMethod(typeof(LightningAuctionAdmin), "BindService")]
    public abstract partial class LightningAuctionAdminBase
    {
      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.StartAuctionResponse> StartAuction(global::LightningAuction.Delivery.StartAuctionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.EndAuctionResponse> EndAuction(global::LightningAuction.Delivery.EndAuctionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.AdminGetAuctionResponse> GetAuction(global::LightningAuction.Delivery.AdminGetAuctionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LightningAuction.Delivery.ListAuctionsResponse> ListAuctions(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LightningAuctionAdmin</summary>
    public partial class LightningAuctionAdminClient : grpc::ClientBase<LightningAuctionAdminClient>
    {
      /// <summary>Creates a new client for LightningAuctionAdmin</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public LightningAuctionAdminClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LightningAuctionAdmin that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public LightningAuctionAdminClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected LightningAuctionAdminClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected LightningAuctionAdminClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::LightningAuction.Delivery.StartAuctionResponse StartAuction(global::LightningAuction.Delivery.StartAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartAuction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.StartAuctionResponse StartAuction(global::LightningAuction.Delivery.StartAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartAuction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.StartAuctionResponse> StartAuctionAsync(global::LightningAuction.Delivery.StartAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartAuctionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.StartAuctionResponse> StartAuctionAsync(global::LightningAuction.Delivery.StartAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartAuction, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.EndAuctionResponse EndAuction(global::LightningAuction.Delivery.EndAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EndAuction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.EndAuctionResponse EndAuction(global::LightningAuction.Delivery.EndAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EndAuction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.EndAuctionResponse> EndAuctionAsync(global::LightningAuction.Delivery.EndAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EndAuctionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.EndAuctionResponse> EndAuctionAsync(global::LightningAuction.Delivery.EndAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EndAuction, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.AdminGetAuctionResponse GetAuction(global::LightningAuction.Delivery.AdminGetAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.AdminGetAuctionResponse GetAuction(global::LightningAuction.Delivery.AdminGetAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.AdminGetAuctionResponse> GetAuctionAsync(global::LightningAuction.Delivery.AdminGetAuctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuctionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.AdminGetAuctionResponse> GetAuctionAsync(global::LightningAuction.Delivery.AdminGetAuctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuction, null, options, request);
      }
      public virtual global::LightningAuction.Delivery.ListAuctionsResponse ListAuctions(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuctions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LightningAuction.Delivery.ListAuctionsResponse ListAuctions(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAuctions, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.ListAuctionsResponse> ListAuctionsAsync(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuctionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LightningAuction.Delivery.ListAuctionsResponse> ListAuctionsAsync(global::LightningAuction.Delivery.ListAuctionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAuctions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override LightningAuctionAdminClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LightningAuctionAdminClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(LightningAuctionAdminBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StartAuction, serviceImpl.StartAuction)
          .AddMethod(__Method_EndAuction, serviceImpl.EndAuction)
          .AddMethod(__Method_GetAuction, serviceImpl.GetAuction)
          .AddMethod(__Method_ListAuctions, serviceImpl.ListAuctions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LightningAuctionAdminBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_StartAuction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.StartAuctionRequest, global::LightningAuction.Delivery.StartAuctionResponse>(serviceImpl.StartAuction));
      serviceBinder.AddMethod(__Method_EndAuction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.EndAuctionRequest, global::LightningAuction.Delivery.EndAuctionResponse>(serviceImpl.EndAuction));
      serviceBinder.AddMethod(__Method_GetAuction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.AdminGetAuctionRequest, global::LightningAuction.Delivery.AdminGetAuctionResponse>(serviceImpl.GetAuction));
      serviceBinder.AddMethod(__Method_ListAuctions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LightningAuction.Delivery.ListAuctionsRequest, global::LightningAuction.Delivery.ListAuctionsResponse>(serviceImpl.ListAuctions));
    }

  }
}
#endregion
