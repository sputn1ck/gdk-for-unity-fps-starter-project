// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lightning-auction/auctions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LightningAuction.Delivery {

  /// <summary>Holder for reflection information generated from lightning-auction/auctions.proto</summary>
  public static partial class AuctionsReflection {

    #region Descriptor
    /// <summary>File descriptor for lightning-auction/auctions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuctionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBsaWdodG5pbmctYXVjdGlvbi9hdWN0aW9ucy5wcm90bxIQTGlnaHRuaW5n",
            "QXVjdGlvbiI0ChFTaW1wbGVDaGF0UmVxdWVzdBIOCgZhbW91bnQYASABKAMS",
            "DwoHbWVzc2FnZRgCIAEoCSIlChJTaW1wbGVDaGF0UmVzcG9uc2USDwoHcGF5",
            "X3JlcRgBIAEoCSInChNTdGFydEF1Y3Rpb25SZXF1ZXN0EhAKCGR1cmF0aW9u",
            "GAEgASgFIkIKFFN0YXJ0QXVjdGlvblJlc3BvbnNlEioKB2F1Y3Rpb24YASAB",
            "KAsyGS5MaWdodG5pbmdBdWN0aW9uLkF1Y3Rpb24iJwoRRW5kQXVjdGlvblJl",
            "cXVlc3QSEgoKYXVjdGlvbl9pZBgBIAEoCSJAChJFbmRBdWN0aW9uUmVzcG9u",
            "c2USKgoHYXVjdGlvbhgBIAEoCzIZLkxpZ2h0bmluZ0F1Y3Rpb24uQXVjdGlv",
            "biIhCg1HZXRCaWRSZXF1ZXN0EhAKCGVudHJ5X2lkGAEgASgJIj8KDkdldEJp",
            "ZFJlc3BvbnNlEi0KBWVudHJ5GAEgASgLMh4uTGlnaHRuaW5nQXVjdGlvbi5B",
            "dWN0aW9uRW50cnkiLAoWQWRtaW5HZXRBdWN0aW9uUmVxdWVzdBISCgphdWN0",
            "aW9uX2lkGAEgASgJIn4KF0FkbWluR2V0QXVjdGlvblJlc3BvbnNlEioKB2F1",
            "Y3Rpb24YASABKAsyGS5MaWdodG5pbmdBdWN0aW9uLkF1Y3Rpb24SNwoPYXVj",
            "dGlvbl9lbnRyaWVzGAIgAygLMh4uTGlnaHRuaW5nQXVjdGlvbi5BdWN0aW9u",
            "RW50cnkiQQoKQmlkUmVxdWVzdBISCgphdWN0aW9uX2lkGAEgASgJEg8KB21l",
            "c3NhZ2UYAiABKAkSDgoGYW1vdW50GAMgASgDIjwKC0JpZFJlc3BvbnNlEi0K",
            "BWVudHJ5GAEgASgLMh4uTGlnaHRuaW5nQXVjdGlvbi5BdWN0aW9uRW50cnki",
            "JAoQQ2FuY2VsQmlkUmVxdWVzdBIQCghlbnRyeV9pZBgBIAEoCSIfChFDYW5j",
            "ZWxCaWRSZXNwb25zZRIKCgJvaxgBIAEoCCInChFHZXRBdWN0aW9uUmVxdWVz",
            "dBISCgphdWN0aW9uX2lkGAEgASgJIkAKEkdldEF1Y3Rpb25SZXNwb25zZRIq",
            "CgdhdWN0aW9uGAEgASgLMhkuTGlnaHRuaW5nQXVjdGlvbi5BdWN0aW9uIj8K",
            "E0xpc3RBdWN0aW9uc1JlcXVlc3QSEgoKb25seUFjdGl2ZRgBIAEoCBIUCgxv",
            "bmx5RmluaXNoZWQYAiABKAgiQwoUTGlzdEF1Y3Rpb25zUmVzcG9uc2USKwoI",
            "YXVjdGlvbnMYASADKAsyGS5MaWdodG5pbmdBdWN0aW9uLkF1Y3Rpb24iKQoV",
            "U3Vic2NyaWJlVG9CaWRSZXF1ZXN0EhAKCGVudHJ5X2lkGAEgASgJIkcKFlN1",
            "YnNjcmliZVRvQmlkUmVzcG9uc2USLQoFZW50cnkYASABKAsyHi5MaWdodG5p",
            "bmdBdWN0aW9uLkF1Y3Rpb25FbnRyeSKHAQoHQXVjdGlvbhIKCgJpZBgBIAEo",
            "CRISCgpzdGFydGVkX2F0GAIgASgFEhAKCGR1cmF0aW9uGAMgASgFEhMKC2Zp",
            "bmlzaGVkX2F0GAQgASgFEjUKDXdpbm5pbmdfZW50cnkYBSABKAsyHi5MaWdo",
            "dG5pbmdBdWN0aW9uLkF1Y3Rpb25FbnRyeSKOAgoMQXVjdGlvbkVudHJ5EgoK",
            "AmlkGAEgASgJEg8KB21lc3NhZ2UYAiABKAkSDgoGYW1vdW50GAMgASgDEhcK",
            "D3BheW1lbnRfcmVxdWVzdBgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEoCRIz",
            "CgVzdGF0ZRgGIAEoDjIkLkxpZ2h0bmluZ0F1Y3Rpb24uQXVjdGlvbkVudHJ5",
            "LlN0YXRlIm4KBVN0YXRlEhUKEUFVQ1RJT05FTlRSWV9PUEVOEAASGQoVQVVD",
            "VElPTkVOVFJZX0FDQ0VQVEVEEAESGQoVQVVDVElPTkVOVFJZX0NBTkNFTGVE",
            "EAISGAoUQVVDVElPTkVOVFJZX1NFVFRMRUQQAzL3BAoWTGlnaHRuaW5nQXVj",
            "dGlvbkJpZGRlchJCCgNCaWQSHC5MaWdodG5pbmdBdWN0aW9uLkJpZFJlcXVl",
            "c3QaHS5MaWdodG5pbmdBdWN0aW9uLkJpZFJlc3BvbnNlElQKCUNhbmNlbEJp",
            "ZBIiLkxpZ2h0bmluZ0F1Y3Rpb24uQ2FuY2VsQmlkUmVxdWVzdBojLkxpZ2h0",
            "bmluZ0F1Y3Rpb24uQ2FuY2VsQmlkUmVzcG9uc2USSwoGR2V0QmlkEh8uTGln",
            "aHRuaW5nQXVjdGlvbi5HZXRCaWRSZXF1ZXN0GiAuTGlnaHRuaW5nQXVjdGlv",
            "bi5HZXRCaWRSZXNwb25zZRJXCgpHZXRBdWN0aW9uEiMuTGlnaHRuaW5nQXVj",
            "dGlvbi5HZXRBdWN0aW9uUmVxdWVzdBokLkxpZ2h0bmluZ0F1Y3Rpb24uR2V0",
            "QXVjdGlvblJlc3BvbnNlEl0KDExpc3RBdWN0aW9ucxIlLkxpZ2h0bmluZ0F1",
            "Y3Rpb24uTGlzdEF1Y3Rpb25zUmVxdWVzdBomLkxpZ2h0bmluZ0F1Y3Rpb24u",
            "TGlzdEF1Y3Rpb25zUmVzcG9uc2USZQoOU3Vic2NyaWJlVG9CaWQSJy5MaWdo",
            "dG5pbmdBdWN0aW9uLlN1YnNjcmliZVRvQmlkUmVxdWVzdBooLkxpZ2h0bmlu",
            "Z0F1Y3Rpb24uU3Vic2NyaWJlVG9CaWRSZXNwb25zZTABElcKClNpbXBsZUNo",
            "YXQSIy5MaWdodG5pbmdBdWN0aW9uLlNpbXBsZUNoYXRSZXF1ZXN0GiQuTGln",
            "aHRuaW5nQXVjdGlvbi5TaW1wbGVDaGF0UmVzcG9uc2UykQMKFUxpZ2h0bmlu",
            "Z0F1Y3Rpb25BZG1pbhJdCgxTdGFydEF1Y3Rpb24SJS5MaWdodG5pbmdBdWN0",
            "aW9uLlN0YXJ0QXVjdGlvblJlcXVlc3QaJi5MaWdodG5pbmdBdWN0aW9uLlN0",
            "YXJ0QXVjdGlvblJlc3BvbnNlElcKCkVuZEF1Y3Rpb24SIy5MaWdodG5pbmdB",
            "dWN0aW9uLkVuZEF1Y3Rpb25SZXF1ZXN0GiQuTGlnaHRuaW5nQXVjdGlvbi5F",
            "bmRBdWN0aW9uUmVzcG9uc2USYQoKR2V0QXVjdGlvbhIoLkxpZ2h0bmluZ0F1",
            "Y3Rpb24uQWRtaW5HZXRBdWN0aW9uUmVxdWVzdBopLkxpZ2h0bmluZ0F1Y3Rp",
            "b24uQWRtaW5HZXRBdWN0aW9uUmVzcG9uc2USXQoMTGlzdEF1Y3Rpb25zEiUu",
            "TGlnaHRuaW5nQXVjdGlvbi5MaXN0QXVjdGlvbnNSZXF1ZXN0GiYuTGlnaHRu",
            "aW5nQXVjdGlvbi5MaXN0QXVjdGlvbnNSZXNwb25zZUIcqgIZTGlnaHRuaW5n",
            "QXVjdGlvbi5EZWxpdmVyeWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.SimpleChatRequest), global::LightningAuction.Delivery.SimpleChatRequest.Parser, new[]{ "Amount", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.SimpleChatResponse), global::LightningAuction.Delivery.SimpleChatResponse.Parser, new[]{ "PayReq" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.StartAuctionRequest), global::LightningAuction.Delivery.StartAuctionRequest.Parser, new[]{ "Duration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.StartAuctionResponse), global::LightningAuction.Delivery.StartAuctionResponse.Parser, new[]{ "Auction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.EndAuctionRequest), global::LightningAuction.Delivery.EndAuctionRequest.Parser, new[]{ "AuctionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.EndAuctionResponse), global::LightningAuction.Delivery.EndAuctionResponse.Parser, new[]{ "Auction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.GetBidRequest), global::LightningAuction.Delivery.GetBidRequest.Parser, new[]{ "EntryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.GetBidResponse), global::LightningAuction.Delivery.GetBidResponse.Parser, new[]{ "Entry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.AdminGetAuctionRequest), global::LightningAuction.Delivery.AdminGetAuctionRequest.Parser, new[]{ "AuctionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.AdminGetAuctionResponse), global::LightningAuction.Delivery.AdminGetAuctionResponse.Parser, new[]{ "Auction", "AuctionEntries" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.BidRequest), global::LightningAuction.Delivery.BidRequest.Parser, new[]{ "AuctionId", "Message", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.BidResponse), global::LightningAuction.Delivery.BidResponse.Parser, new[]{ "Entry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.CancelBidRequest), global::LightningAuction.Delivery.CancelBidRequest.Parser, new[]{ "EntryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.CancelBidResponse), global::LightningAuction.Delivery.CancelBidResponse.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.GetAuctionRequest), global::LightningAuction.Delivery.GetAuctionRequest.Parser, new[]{ "AuctionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.GetAuctionResponse), global::LightningAuction.Delivery.GetAuctionResponse.Parser, new[]{ "Auction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.ListAuctionsRequest), global::LightningAuction.Delivery.ListAuctionsRequest.Parser, new[]{ "OnlyActive", "OnlyFinished" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.ListAuctionsResponse), global::LightningAuction.Delivery.ListAuctionsResponse.Parser, new[]{ "Auctions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.SubscribeToBidRequest), global::LightningAuction.Delivery.SubscribeToBidRequest.Parser, new[]{ "EntryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.SubscribeToBidResponse), global::LightningAuction.Delivery.SubscribeToBidResponse.Parser, new[]{ "Entry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.Auction), global::LightningAuction.Delivery.Auction.Parser, new[]{ "Id", "StartedAt", "Duration", "FinishedAt", "WinningEntry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightningAuction.Delivery.AuctionEntry), global::LightningAuction.Delivery.AuctionEntry.Parser, new[]{ "Id", "Message", "Amount", "PaymentRequest", "Description", "State" }, null, new[]{ typeof(global::LightningAuction.Delivery.AuctionEntry.Types.State) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SimpleChatRequest : pb::IMessage<SimpleChatRequest> {
    private static readonly pb::MessageParser<SimpleChatRequest> _parser = new pb::MessageParser<SimpleChatRequest>(() => new SimpleChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimpleChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleChatRequest(SimpleChatRequest other) : this() {
      amount_ = other.amount_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleChatRequest Clone() {
      return new SimpleChatRequest(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimpleChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimpleChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimpleChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SimpleChatResponse : pb::IMessage<SimpleChatResponse> {
    private static readonly pb::MessageParser<SimpleChatResponse> _parser = new pb::MessageParser<SimpleChatResponse>(() => new SimpleChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimpleChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleChatResponse(SimpleChatResponse other) : this() {
      payReq_ = other.payReq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleChatResponse Clone() {
      return new SimpleChatResponse(this);
    }

    /// <summary>Field number for the "pay_req" field.</summary>
    public const int PayReqFieldNumber = 1;
    private string payReq_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayReq {
      get { return payReq_; }
      set {
        payReq_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimpleChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimpleChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayReq != other.PayReq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PayReq.Length != 0) hash ^= PayReq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PayReq.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PayReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PayReq.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimpleChatResponse other) {
      if (other == null) {
        return;
      }
      if (other.PayReq.Length != 0) {
        PayReq = other.PayReq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PayReq = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartAuctionRequest : pb::IMessage<StartAuctionRequest> {
    private static readonly pb::MessageParser<StartAuctionRequest> _parser = new pb::MessageParser<StartAuctionRequest>(() => new StartAuctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartAuctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAuctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAuctionRequest(StartAuctionRequest other) : this() {
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAuctionRequest Clone() {
      return new StartAuctionRequest(this);
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 1;
    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartAuctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartAuctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Duration != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartAuctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Duration = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartAuctionResponse : pb::IMessage<StartAuctionResponse> {
    private static readonly pb::MessageParser<StartAuctionResponse> _parser = new pb::MessageParser<StartAuctionResponse>(() => new StartAuctionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartAuctionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAuctionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAuctionResponse(StartAuctionResponse other) : this() {
      auction_ = other.auction_ != null ? other.auction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAuctionResponse Clone() {
      return new StartAuctionResponse(this);
    }

    /// <summary>Field number for the "auction" field.</summary>
    public const int AuctionFieldNumber = 1;
    private global::LightningAuction.Delivery.Auction auction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.Auction Auction {
      get { return auction_; }
      set {
        auction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartAuctionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartAuctionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auction, other.Auction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auction_ != null) hash ^= Auction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartAuctionResponse other) {
      if (other == null) {
        return;
      }
      if (other.auction_ != null) {
        if (auction_ == null) {
          Auction = new global::LightningAuction.Delivery.Auction();
        }
        Auction.MergeFrom(other.Auction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auction_ == null) {
              Auction = new global::LightningAuction.Delivery.Auction();
            }
            input.ReadMessage(Auction);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndAuctionRequest : pb::IMessage<EndAuctionRequest> {
    private static readonly pb::MessageParser<EndAuctionRequest> _parser = new pb::MessageParser<EndAuctionRequest>(() => new EndAuctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndAuctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndAuctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndAuctionRequest(EndAuctionRequest other) : this() {
      auctionId_ = other.auctionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndAuctionRequest Clone() {
      return new EndAuctionRequest(this);
    }

    /// <summary>Field number for the "auction_id" field.</summary>
    public const int AuctionIdFieldNumber = 1;
    private string auctionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuctionId {
      get { return auctionId_; }
      set {
        auctionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndAuctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndAuctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuctionId != other.AuctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuctionId.Length != 0) hash ^= AuctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndAuctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.AuctionId.Length != 0) {
        AuctionId = other.AuctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndAuctionResponse : pb::IMessage<EndAuctionResponse> {
    private static readonly pb::MessageParser<EndAuctionResponse> _parser = new pb::MessageParser<EndAuctionResponse>(() => new EndAuctionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndAuctionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndAuctionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndAuctionResponse(EndAuctionResponse other) : this() {
      auction_ = other.auction_ != null ? other.auction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndAuctionResponse Clone() {
      return new EndAuctionResponse(this);
    }

    /// <summary>Field number for the "auction" field.</summary>
    public const int AuctionFieldNumber = 1;
    private global::LightningAuction.Delivery.Auction auction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.Auction Auction {
      get { return auction_; }
      set {
        auction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndAuctionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndAuctionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auction, other.Auction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auction_ != null) hash ^= Auction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndAuctionResponse other) {
      if (other == null) {
        return;
      }
      if (other.auction_ != null) {
        if (auction_ == null) {
          Auction = new global::LightningAuction.Delivery.Auction();
        }
        Auction.MergeFrom(other.Auction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auction_ == null) {
              Auction = new global::LightningAuction.Delivery.Auction();
            }
            input.ReadMessage(Auction);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBidRequest : pb::IMessage<GetBidRequest> {
    private static readonly pb::MessageParser<GetBidRequest> _parser = new pb::MessageParser<GetBidRequest>(() => new GetBidRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBidRequest(GetBidRequest other) : this() {
      entryId_ = other.entryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBidRequest Clone() {
      return new GetBidRequest(this);
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 1;
    private string entryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntryId {
      get { return entryId_; }
      set {
        entryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntryId != other.EntryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntryId.Length != 0) hash ^= EntryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBidRequest other) {
      if (other == null) {
        return;
      }
      if (other.EntryId.Length != 0) {
        EntryId = other.EntryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBidResponse : pb::IMessage<GetBidResponse> {
    private static readonly pb::MessageParser<GetBidResponse> _parser = new pb::MessageParser<GetBidResponse>(() => new GetBidResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBidResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBidResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBidResponse(GetBidResponse other) : this() {
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBidResponse Clone() {
      return new GetBidResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private global::LightningAuction.Delivery.AuctionEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.AuctionEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBidResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBidResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entry, other.Entry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBidResponse other) {
      if (other == null) {
        return;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::LightningAuction.Delivery.AuctionEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entry_ == null) {
              Entry = new global::LightningAuction.Delivery.AuctionEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdminGetAuctionRequest : pb::IMessage<AdminGetAuctionRequest> {
    private static readonly pb::MessageParser<AdminGetAuctionRequest> _parser = new pb::MessageParser<AdminGetAuctionRequest>(() => new AdminGetAuctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdminGetAuctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminGetAuctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminGetAuctionRequest(AdminGetAuctionRequest other) : this() {
      auctionId_ = other.auctionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminGetAuctionRequest Clone() {
      return new AdminGetAuctionRequest(this);
    }

    /// <summary>Field number for the "auction_id" field.</summary>
    public const int AuctionIdFieldNumber = 1;
    private string auctionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuctionId {
      get { return auctionId_; }
      set {
        auctionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdminGetAuctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdminGetAuctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuctionId != other.AuctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuctionId.Length != 0) hash ^= AuctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdminGetAuctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.AuctionId.Length != 0) {
        AuctionId = other.AuctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdminGetAuctionResponse : pb::IMessage<AdminGetAuctionResponse> {
    private static readonly pb::MessageParser<AdminGetAuctionResponse> _parser = new pb::MessageParser<AdminGetAuctionResponse>(() => new AdminGetAuctionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdminGetAuctionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminGetAuctionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminGetAuctionResponse(AdminGetAuctionResponse other) : this() {
      auction_ = other.auction_ != null ? other.auction_.Clone() : null;
      auctionEntries_ = other.auctionEntries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminGetAuctionResponse Clone() {
      return new AdminGetAuctionResponse(this);
    }

    /// <summary>Field number for the "auction" field.</summary>
    public const int AuctionFieldNumber = 1;
    private global::LightningAuction.Delivery.Auction auction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.Auction Auction {
      get { return auction_; }
      set {
        auction_ = value;
      }
    }

    /// <summary>Field number for the "auction_entries" field.</summary>
    public const int AuctionEntriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LightningAuction.Delivery.AuctionEntry> _repeated_auctionEntries_codec
        = pb::FieldCodec.ForMessage(18, global::LightningAuction.Delivery.AuctionEntry.Parser);
    private readonly pbc::RepeatedField<global::LightningAuction.Delivery.AuctionEntry> auctionEntries_ = new pbc::RepeatedField<global::LightningAuction.Delivery.AuctionEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightningAuction.Delivery.AuctionEntry> AuctionEntries {
      get { return auctionEntries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdminGetAuctionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdminGetAuctionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auction, other.Auction)) return false;
      if(!auctionEntries_.Equals(other.auctionEntries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auction_ != null) hash ^= Auction.GetHashCode();
      hash ^= auctionEntries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auction);
      }
      auctionEntries_.WriteTo(output, _repeated_auctionEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auction);
      }
      size += auctionEntries_.CalculateSize(_repeated_auctionEntries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdminGetAuctionResponse other) {
      if (other == null) {
        return;
      }
      if (other.auction_ != null) {
        if (auction_ == null) {
          Auction = new global::LightningAuction.Delivery.Auction();
        }
        Auction.MergeFrom(other.Auction);
      }
      auctionEntries_.Add(other.auctionEntries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auction_ == null) {
              Auction = new global::LightningAuction.Delivery.Auction();
            }
            input.ReadMessage(Auction);
            break;
          }
          case 18: {
            auctionEntries_.AddEntriesFrom(input, _repeated_auctionEntries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BidRequest : pb::IMessage<BidRequest> {
    private static readonly pb::MessageParser<BidRequest> _parser = new pb::MessageParser<BidRequest>(() => new BidRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidRequest(BidRequest other) : this() {
      auctionId_ = other.auctionId_;
      message_ = other.message_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidRequest Clone() {
      return new BidRequest(this);
    }

    /// <summary>Field number for the "auction_id" field.</summary>
    public const int AuctionIdFieldNumber = 1;
    private string auctionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuctionId {
      get { return auctionId_; }
      set {
        auctionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuctionId != other.AuctionId) return false;
      if (Message != other.Message) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuctionId.Length != 0) hash ^= AuctionId.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuctionId);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuctionId);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BidRequest other) {
      if (other == null) {
        return;
      }
      if (other.AuctionId.Length != 0) {
        AuctionId = other.AuctionId;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuctionId = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BidResponse : pb::IMessage<BidResponse> {
    private static readonly pb::MessageParser<BidResponse> _parser = new pb::MessageParser<BidResponse>(() => new BidResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BidResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidResponse(BidResponse other) : this() {
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidResponse Clone() {
      return new BidResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private global::LightningAuction.Delivery.AuctionEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.AuctionEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BidResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BidResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entry, other.Entry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BidResponse other) {
      if (other == null) {
        return;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::LightningAuction.Delivery.AuctionEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entry_ == null) {
              Entry = new global::LightningAuction.Delivery.AuctionEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelBidRequest : pb::IMessage<CancelBidRequest> {
    private static readonly pb::MessageParser<CancelBidRequest> _parser = new pb::MessageParser<CancelBidRequest>(() => new CancelBidRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelBidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBidRequest(CancelBidRequest other) : this() {
      entryId_ = other.entryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBidRequest Clone() {
      return new CancelBidRequest(this);
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 1;
    private string entryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntryId {
      get { return entryId_; }
      set {
        entryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelBidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelBidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntryId != other.EntryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntryId.Length != 0) hash ^= EntryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelBidRequest other) {
      if (other == null) {
        return;
      }
      if (other.EntryId.Length != 0) {
        EntryId = other.EntryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelBidResponse : pb::IMessage<CancelBidResponse> {
    private static readonly pb::MessageParser<CancelBidResponse> _parser = new pb::MessageParser<CancelBidResponse>(() => new CancelBidResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelBidResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBidResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBidResponse(CancelBidResponse other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBidResponse Clone() {
      return new CancelBidResponse(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelBidResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelBidResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelBidResponse other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuctionRequest : pb::IMessage<GetAuctionRequest> {
    private static readonly pb::MessageParser<GetAuctionRequest> _parser = new pb::MessageParser<GetAuctionRequest>(() => new GetAuctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuctionRequest(GetAuctionRequest other) : this() {
      auctionId_ = other.auctionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuctionRequest Clone() {
      return new GetAuctionRequest(this);
    }

    /// <summary>Field number for the "auction_id" field.</summary>
    public const int AuctionIdFieldNumber = 1;
    private string auctionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuctionId {
      get { return auctionId_; }
      set {
        auctionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuctionId != other.AuctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuctionId.Length != 0) hash ^= AuctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.AuctionId.Length != 0) {
        AuctionId = other.AuctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuctionResponse : pb::IMessage<GetAuctionResponse> {
    private static readonly pb::MessageParser<GetAuctionResponse> _parser = new pb::MessageParser<GetAuctionResponse>(() => new GetAuctionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuctionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuctionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuctionResponse(GetAuctionResponse other) : this() {
      auction_ = other.auction_ != null ? other.auction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuctionResponse Clone() {
      return new GetAuctionResponse(this);
    }

    /// <summary>Field number for the "auction" field.</summary>
    public const int AuctionFieldNumber = 1;
    private global::LightningAuction.Delivery.Auction auction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.Auction Auction {
      get { return auction_; }
      set {
        auction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuctionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuctionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auction, other.Auction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auction_ != null) hash ^= Auction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuctionResponse other) {
      if (other == null) {
        return;
      }
      if (other.auction_ != null) {
        if (auction_ == null) {
          Auction = new global::LightningAuction.Delivery.Auction();
        }
        Auction.MergeFrom(other.Auction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auction_ == null) {
              Auction = new global::LightningAuction.Delivery.Auction();
            }
            input.ReadMessage(Auction);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAuctionsRequest : pb::IMessage<ListAuctionsRequest> {
    private static readonly pb::MessageParser<ListAuctionsRequest> _parser = new pb::MessageParser<ListAuctionsRequest>(() => new ListAuctionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAuctionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAuctionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAuctionsRequest(ListAuctionsRequest other) : this() {
      onlyActive_ = other.onlyActive_;
      onlyFinished_ = other.onlyFinished_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAuctionsRequest Clone() {
      return new ListAuctionsRequest(this);
    }

    /// <summary>Field number for the "onlyActive" field.</summary>
    public const int OnlyActiveFieldNumber = 1;
    private bool onlyActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OnlyActive {
      get { return onlyActive_; }
      set {
        onlyActive_ = value;
      }
    }

    /// <summary>Field number for the "onlyFinished" field.</summary>
    public const int OnlyFinishedFieldNumber = 2;
    private bool onlyFinished_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OnlyFinished {
      get { return onlyFinished_; }
      set {
        onlyFinished_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAuctionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAuctionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OnlyActive != other.OnlyActive) return false;
      if (OnlyFinished != other.OnlyFinished) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OnlyActive != false) hash ^= OnlyActive.GetHashCode();
      if (OnlyFinished != false) hash ^= OnlyFinished.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OnlyActive != false) {
        output.WriteRawTag(8);
        output.WriteBool(OnlyActive);
      }
      if (OnlyFinished != false) {
        output.WriteRawTag(16);
        output.WriteBool(OnlyFinished);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OnlyActive != false) {
        size += 1 + 1;
      }
      if (OnlyFinished != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAuctionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.OnlyActive != false) {
        OnlyActive = other.OnlyActive;
      }
      if (other.OnlyFinished != false) {
        OnlyFinished = other.OnlyFinished;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OnlyActive = input.ReadBool();
            break;
          }
          case 16: {
            OnlyFinished = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAuctionsResponse : pb::IMessage<ListAuctionsResponse> {
    private static readonly pb::MessageParser<ListAuctionsResponse> _parser = new pb::MessageParser<ListAuctionsResponse>(() => new ListAuctionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAuctionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAuctionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAuctionsResponse(ListAuctionsResponse other) : this() {
      auctions_ = other.auctions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAuctionsResponse Clone() {
      return new ListAuctionsResponse(this);
    }

    /// <summary>Field number for the "auctions" field.</summary>
    public const int AuctionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LightningAuction.Delivery.Auction> _repeated_auctions_codec
        = pb::FieldCodec.ForMessage(10, global::LightningAuction.Delivery.Auction.Parser);
    private readonly pbc::RepeatedField<global::LightningAuction.Delivery.Auction> auctions_ = new pbc::RepeatedField<global::LightningAuction.Delivery.Auction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightningAuction.Delivery.Auction> Auctions {
      get { return auctions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAuctionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAuctionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!auctions_.Equals(other.auctions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= auctions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      auctions_.WriteTo(output, _repeated_auctions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += auctions_.CalculateSize(_repeated_auctions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAuctionsResponse other) {
      if (other == null) {
        return;
      }
      auctions_.Add(other.auctions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            auctions_.AddEntriesFrom(input, _repeated_auctions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeToBidRequest : pb::IMessage<SubscribeToBidRequest> {
    private static readonly pb::MessageParser<SubscribeToBidRequest> _parser = new pb::MessageParser<SubscribeToBidRequest>(() => new SubscribeToBidRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeToBidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToBidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToBidRequest(SubscribeToBidRequest other) : this() {
      entryId_ = other.entryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToBidRequest Clone() {
      return new SubscribeToBidRequest(this);
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 1;
    private string entryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntryId {
      get { return entryId_; }
      set {
        entryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeToBidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeToBidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntryId != other.EntryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntryId.Length != 0) hash ^= EntryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeToBidRequest other) {
      if (other == null) {
        return;
      }
      if (other.EntryId.Length != 0) {
        EntryId = other.EntryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeToBidResponse : pb::IMessage<SubscribeToBidResponse> {
    private static readonly pb::MessageParser<SubscribeToBidResponse> _parser = new pb::MessageParser<SubscribeToBidResponse>(() => new SubscribeToBidResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeToBidResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToBidResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToBidResponse(SubscribeToBidResponse other) : this() {
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToBidResponse Clone() {
      return new SubscribeToBidResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private global::LightningAuction.Delivery.AuctionEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.AuctionEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeToBidResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeToBidResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entry, other.Entry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeToBidResponse other) {
      if (other == null) {
        return;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::LightningAuction.Delivery.AuctionEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entry_ == null) {
              Entry = new global::LightningAuction.Delivery.AuctionEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Auction : pb::IMessage<Auction> {
    private static readonly pb::MessageParser<Auction> _parser = new pb::MessageParser<Auction>(() => new Auction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Auction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auction(Auction other) : this() {
      id_ = other.id_;
      startedAt_ = other.startedAt_;
      duration_ = other.duration_;
      finishedAt_ = other.finishedAt_;
      winningEntry_ = other.winningEntry_ != null ? other.winningEntry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auction Clone() {
      return new Auction(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 2;
    private int startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 3;
    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "finished_at" field.</summary>
    public const int FinishedAtFieldNumber = 4;
    private int finishedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FinishedAt {
      get { return finishedAt_; }
      set {
        finishedAt_ = value;
      }
    }

    /// <summary>Field number for the "winning_entry" field.</summary>
    public const int WinningEntryFieldNumber = 5;
    private global::LightningAuction.Delivery.AuctionEntry winningEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.AuctionEntry WinningEntry {
      get { return winningEntry_; }
      set {
        winningEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Auction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Auction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StartedAt != other.StartedAt) return false;
      if (Duration != other.Duration) return false;
      if (FinishedAt != other.FinishedAt) return false;
      if (!object.Equals(WinningEntry, other.WinningEntry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (StartedAt != 0) hash ^= StartedAt.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (FinishedAt != 0) hash ^= FinishedAt.GetHashCode();
      if (winningEntry_ != null) hash ^= WinningEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (StartedAt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartedAt);
      }
      if (Duration != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Duration);
      }
      if (FinishedAt != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FinishedAt);
      }
      if (winningEntry_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(WinningEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (StartedAt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartedAt);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (FinishedAt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinishedAt);
      }
      if (winningEntry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WinningEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Auction other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.StartedAt != 0) {
        StartedAt = other.StartedAt;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.FinishedAt != 0) {
        FinishedAt = other.FinishedAt;
      }
      if (other.winningEntry_ != null) {
        if (winningEntry_ == null) {
          WinningEntry = new global::LightningAuction.Delivery.AuctionEntry();
        }
        WinningEntry.MergeFrom(other.WinningEntry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt32();
            break;
          }
          case 24: {
            Duration = input.ReadInt32();
            break;
          }
          case 32: {
            FinishedAt = input.ReadInt32();
            break;
          }
          case 42: {
            if (winningEntry_ == null) {
              WinningEntry = new global::LightningAuction.Delivery.AuctionEntry();
            }
            input.ReadMessage(WinningEntry);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuctionEntry : pb::IMessage<AuctionEntry> {
    private static readonly pb::MessageParser<AuctionEntry> _parser = new pb::MessageParser<AuctionEntry>(() => new AuctionEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuctionEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightningAuction.Delivery.AuctionsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuctionEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuctionEntry(AuctionEntry other) : this() {
      id_ = other.id_;
      message_ = other.message_;
      amount_ = other.amount_;
      paymentRequest_ = other.paymentRequest_;
      description_ = other.description_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuctionEntry Clone() {
      return new AuctionEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "payment_request" field.</summary>
    public const int PaymentRequestFieldNumber = 4;
    private string paymentRequest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentRequest {
      get { return paymentRequest_; }
      set {
        paymentRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private global::LightningAuction.Delivery.AuctionEntry.Types.State state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightningAuction.Delivery.AuctionEntry.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuctionEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuctionEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Message != other.Message) return false;
      if (Amount != other.Amount) return false;
      if (PaymentRequest != other.PaymentRequest) return false;
      if (Description != other.Description) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (PaymentRequest.Length != 0) hash ^= PaymentRequest.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (PaymentRequest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PaymentRequest);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (PaymentRequest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentRequest);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuctionEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.PaymentRequest.Length != 0) {
        PaymentRequest = other.PaymentRequest;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            PaymentRequest = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            State = (global::LightningAuction.Delivery.AuctionEntry.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AuctionEntry message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("AUCTIONENTRY_OPEN")] AuctionentryOpen = 0,
        [pbr::OriginalName("AUCTIONENTRY_ACCEPTED")] AuctionentryAccepted = 1,
        [pbr::OriginalName("AUCTIONENTRY_CANCELeD")] AuctionentryCanceleD = 2,
        [pbr::OriginalName("AUCTIONENTRY_SETTLED")] AuctionentrySettled = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
