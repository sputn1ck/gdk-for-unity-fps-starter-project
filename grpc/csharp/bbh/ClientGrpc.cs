// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Bbh {
  public static partial class ClientService
  {
    static readonly string __ServiceName = "bbh.ClientService";

    static readonly grpc::Marshaller<global::Bbh.GetUsernameRequest> __Marshaller_bbh_GetUsernameRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bbh.GetUsernameRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bbh.GetUsernameReponse> __Marshaller_bbh_GetUsernameReponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bbh.GetUsernameReponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bbh.SetUsernameRequest> __Marshaller_bbh_SetUsernameRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bbh.SetUsernameRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bbh.SetUsernameResponse> __Marshaller_bbh_SetUsernameResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bbh.SetUsernameResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bbh.GetHighscoreRequest> __Marshaller_bbh_GetHighscoreRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bbh.GetHighscoreRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bbh.GetHighscoreResponse> __Marshaller_bbh_GetHighscoreResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bbh.GetHighscoreResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Bbh.GetUsernameRequest, global::Bbh.GetUsernameReponse> __Method_GetUsername = new grpc::Method<global::Bbh.GetUsernameRequest, global::Bbh.GetUsernameReponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsername",
        __Marshaller_bbh_GetUsernameRequest,
        __Marshaller_bbh_GetUsernameReponse);

    static readonly grpc::Method<global::Bbh.SetUsernameRequest, global::Bbh.SetUsernameResponse> __Method_SetUsername = new grpc::Method<global::Bbh.SetUsernameRequest, global::Bbh.SetUsernameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetUsername",
        __Marshaller_bbh_SetUsernameRequest,
        __Marshaller_bbh_SetUsernameResponse);

    static readonly grpc::Method<global::Bbh.GetHighscoreRequest, global::Bbh.GetHighscoreResponse> __Method_GetHighscore = new grpc::Method<global::Bbh.GetHighscoreRequest, global::Bbh.GetHighscoreResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHighscore",
        __Marshaller_bbh_GetHighscoreRequest,
        __Marshaller_bbh_GetHighscoreResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Bbh.ClientReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ClientService</summary>
    [grpc::BindServiceMethod(typeof(ClientService), "BindService")]
    public abstract partial class ClientServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Bbh.GetUsernameReponse> GetUsername(global::Bbh.GetUsernameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Bbh.SetUsernameResponse> SetUsername(global::Bbh.SetUsernameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Bbh.GetHighscoreResponse> GetHighscore(global::Bbh.GetHighscoreRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ClientService</summary>
    public partial class ClientServiceClient : grpc::ClientBase<ClientServiceClient>
    {
      /// <summary>Creates a new client for ClientService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ClientServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ClientService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ClientServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ClientServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ClientServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Bbh.GetUsernameReponse GetUsername(global::Bbh.GetUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Bbh.GetUsernameReponse GetUsername(global::Bbh.GetUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsername, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Bbh.GetUsernameReponse> GetUsernameAsync(global::Bbh.GetUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Bbh.GetUsernameReponse> GetUsernameAsync(global::Bbh.GetUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsername, null, options, request);
      }
      public virtual global::Bbh.SetUsernameResponse SetUsername(global::Bbh.SetUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Bbh.SetUsernameResponse SetUsername(global::Bbh.SetUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetUsername, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Bbh.SetUsernameResponse> SetUsernameAsync(global::Bbh.SetUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Bbh.SetUsernameResponse> SetUsernameAsync(global::Bbh.SetUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetUsername, null, options, request);
      }
      public virtual global::Bbh.GetHighscoreResponse GetHighscore(global::Bbh.GetHighscoreRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHighscore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Bbh.GetHighscoreResponse GetHighscore(global::Bbh.GetHighscoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHighscore, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Bbh.GetHighscoreResponse> GetHighscoreAsync(global::Bbh.GetHighscoreRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHighscoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Bbh.GetHighscoreResponse> GetHighscoreAsync(global::Bbh.GetHighscoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHighscore, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ClientServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ClientServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ClientServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetUsername, serviceImpl.GetUsername)
          .AddMethod(__Method_SetUsername, serviceImpl.SetUsername)
          .AddMethod(__Method_GetHighscore, serviceImpl.GetHighscore).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ClientServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bbh.GetUsernameRequest, global::Bbh.GetUsernameReponse>(serviceImpl.GetUsername));
      serviceBinder.AddMethod(__Method_SetUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bbh.SetUsernameRequest, global::Bbh.SetUsernameResponse>(serviceImpl.SetUsername));
      serviceBinder.AddMethod(__Method_GetHighscore, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bbh.GetHighscoreRequest, global::Bbh.GetHighscoreResponse>(serviceImpl.GetHighscore));
    }

  }
}
#endregion
