// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Grpc {
  public static partial class DonnerService
  {
    static readonly string __ServiceName = "grpc.DonnerService";

    static readonly grpc::Marshaller<global::Grpc.GetCurrentUserRequest> __Marshaller_grpc_GetCurrentUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.GetCurrentUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.GetCurrentUserResponse> __Marshaller_grpc_GetCurrentUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.GetCurrentUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.EditUserRequest> __Marshaller_grpc_EditUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.EditUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.EditUserResponse> __Marshaller_grpc_EditUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.EditUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.ListStashesRequest> __Marshaller_grpc_ListStashesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.ListStashesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.ListStashesResponse> __Marshaller_grpc_ListStashesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.ListStashesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.ListTransactionsRequest> __Marshaller_grpc_ListTransactionsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.ListTransactionsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.ListTransactionsResponse> __Marshaller_grpc_ListTransactionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.ListTransactionsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.LookupTransactionRequest> __Marshaller_grpc_LookupTransactionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.LookupTransactionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.LookupTransactionResponse> __Marshaller_grpc_LookupTransactionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.LookupTransactionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.NewTransactionRequest> __Marshaller_grpc_NewTransactionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.NewTransactionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.NewTransactionResponse> __Marshaller_grpc_NewTransactionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.NewTransactionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.SettleTransactionRequest> __Marshaller_grpc_SettleTransactionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.SettleTransactionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.SettleTransactionResponse> __Marshaller_grpc_SettleTransactionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.SettleTransactionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.ListWorldsRequest> __Marshaller_grpc_ListWorldsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.ListWorldsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.ListWorldsResponse> __Marshaller_grpc_ListWorldsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.ListWorldsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.JoinWorldRequest> __Marshaller_grpc_JoinWorldRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.JoinWorldRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.JoinWorldResponse> __Marshaller_grpc_JoinWorldResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.JoinWorldResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.SubscribeTransactionsRequest> __Marshaller_grpc_SubscribeTransactionsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.SubscribeTransactionsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.SubscribeTransactionsResponse> __Marshaller_grpc_SubscribeTransactionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.SubscribeTransactionsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Grpc.GetCurrentUserRequest, global::Grpc.GetCurrentUserResponse> __Method_GetCurrentUser = new grpc::Method<global::Grpc.GetCurrentUserRequest, global::Grpc.GetCurrentUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCurrentUser",
        __Marshaller_grpc_GetCurrentUserRequest,
        __Marshaller_grpc_GetCurrentUserResponse);

    static readonly grpc::Method<global::Grpc.EditUserRequest, global::Grpc.EditUserResponse> __Method_EditUser = new grpc::Method<global::Grpc.EditUserRequest, global::Grpc.EditUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EditUser",
        __Marshaller_grpc_EditUserRequest,
        __Marshaller_grpc_EditUserResponse);

    static readonly grpc::Method<global::Grpc.ListStashesRequest, global::Grpc.ListStashesResponse> __Method_ListStashes = new grpc::Method<global::Grpc.ListStashesRequest, global::Grpc.ListStashesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStashes",
        __Marshaller_grpc_ListStashesRequest,
        __Marshaller_grpc_ListStashesResponse);

    static readonly grpc::Method<global::Grpc.ListTransactionsRequest, global::Grpc.ListTransactionsResponse> __Method_ListTransactions = new grpc::Method<global::Grpc.ListTransactionsRequest, global::Grpc.ListTransactionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransactions",
        __Marshaller_grpc_ListTransactionsRequest,
        __Marshaller_grpc_ListTransactionsResponse);

    static readonly grpc::Method<global::Grpc.LookupTransactionRequest, global::Grpc.LookupTransactionResponse> __Method_LookupTransaction = new grpc::Method<global::Grpc.LookupTransactionRequest, global::Grpc.LookupTransactionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupTransaction",
        __Marshaller_grpc_LookupTransactionRequest,
        __Marshaller_grpc_LookupTransactionResponse);

    static readonly grpc::Method<global::Grpc.NewTransactionRequest, global::Grpc.NewTransactionResponse> __Method_NewTransaction = new grpc::Method<global::Grpc.NewTransactionRequest, global::Grpc.NewTransactionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NewTransaction",
        __Marshaller_grpc_NewTransactionRequest,
        __Marshaller_grpc_NewTransactionResponse);

    static readonly grpc::Method<global::Grpc.SettleTransactionRequest, global::Grpc.SettleTransactionResponse> __Method_SettleTransaction = new grpc::Method<global::Grpc.SettleTransactionRequest, global::Grpc.SettleTransactionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SettleTransaction",
        __Marshaller_grpc_SettleTransactionRequest,
        __Marshaller_grpc_SettleTransactionResponse);

    static readonly grpc::Method<global::Grpc.ListWorldsRequest, global::Grpc.ListWorldsResponse> __Method_ListWorlds = new grpc::Method<global::Grpc.ListWorldsRequest, global::Grpc.ListWorldsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorlds",
        __Marshaller_grpc_ListWorldsRequest,
        __Marshaller_grpc_ListWorldsResponse);

    static readonly grpc::Method<global::Grpc.JoinWorldRequest, global::Grpc.JoinWorldResponse> __Method_JoinWorld = new grpc::Method<global::Grpc.JoinWorldRequest, global::Grpc.JoinWorldResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JoinWorld",
        __Marshaller_grpc_JoinWorldRequest,
        __Marshaller_grpc_JoinWorldResponse);

    static readonly grpc::Method<global::Grpc.SubscribeTransactionsRequest, global::Grpc.SubscribeTransactionsResponse> __Method_SubscribeTransactions = new grpc::Method<global::Grpc.SubscribeTransactionsRequest, global::Grpc.SubscribeTransactionsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeTransactions",
        __Marshaller_grpc_SubscribeTransactionsRequest,
        __Marshaller_grpc_SubscribeTransactionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpc.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DonnerService</summary>
    [grpc::BindServiceMethod(typeof(DonnerService), "BindService")]
    public abstract partial class DonnerServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Grpc.GetCurrentUserResponse> GetCurrentUser(global::Grpc.GetCurrentUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.EditUserResponse> EditUser(global::Grpc.EditUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.ListStashesResponse> ListStashes(global::Grpc.ListStashesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.ListTransactionsResponse> ListTransactions(global::Grpc.ListTransactionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.LookupTransactionResponse> LookupTransaction(global::Grpc.LookupTransactionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.NewTransactionResponse> NewTransaction(global::Grpc.NewTransactionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.SettleTransactionResponse> SettleTransaction(global::Grpc.SettleTransactionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.ListWorldsResponse> ListWorlds(global::Grpc.ListWorldsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.JoinWorldResponse> JoinWorld(global::Grpc.JoinWorldRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SubscribeTransactions(global::Grpc.SubscribeTransactionsRequest request, grpc::IServerStreamWriter<global::Grpc.SubscribeTransactionsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DonnerService</summary>
    public partial class DonnerServiceClient : grpc::ClientBase<DonnerServiceClient>
    {
      /// <summary>Creates a new client for DonnerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DonnerServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DonnerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DonnerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DonnerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DonnerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Grpc.GetCurrentUserResponse GetCurrentUser(global::Grpc.GetCurrentUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCurrentUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.GetCurrentUserResponse GetCurrentUser(global::Grpc.GetCurrentUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCurrentUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.GetCurrentUserResponse> GetCurrentUserAsync(global::Grpc.GetCurrentUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCurrentUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.GetCurrentUserResponse> GetCurrentUserAsync(global::Grpc.GetCurrentUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCurrentUser, null, options, request);
      }
      public virtual global::Grpc.EditUserResponse EditUser(global::Grpc.EditUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.EditUserResponse EditUser(global::Grpc.EditUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EditUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.EditUserResponse> EditUserAsync(global::Grpc.EditUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.EditUserResponse> EditUserAsync(global::Grpc.EditUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EditUser, null, options, request);
      }
      public virtual global::Grpc.ListStashesResponse ListStashes(global::Grpc.ListStashesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStashes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.ListStashesResponse ListStashes(global::Grpc.ListStashesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStashes, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.ListStashesResponse> ListStashesAsync(global::Grpc.ListStashesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStashesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.ListStashesResponse> ListStashesAsync(global::Grpc.ListStashesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStashes, null, options, request);
      }
      public virtual global::Grpc.ListTransactionsResponse ListTransactions(global::Grpc.ListTransactionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransactions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.ListTransactionsResponse ListTransactions(global::Grpc.ListTransactionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransactions, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.ListTransactionsResponse> ListTransactionsAsync(global::Grpc.ListTransactionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransactionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.ListTransactionsResponse> ListTransactionsAsync(global::Grpc.ListTransactionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransactions, null, options, request);
      }
      public virtual global::Grpc.LookupTransactionResponse LookupTransaction(global::Grpc.LookupTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupTransaction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.LookupTransactionResponse LookupTransaction(global::Grpc.LookupTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupTransaction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.LookupTransactionResponse> LookupTransactionAsync(global::Grpc.LookupTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupTransactionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.LookupTransactionResponse> LookupTransactionAsync(global::Grpc.LookupTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupTransaction, null, options, request);
      }
      public virtual global::Grpc.NewTransactionResponse NewTransaction(global::Grpc.NewTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewTransaction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.NewTransactionResponse NewTransaction(global::Grpc.NewTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NewTransaction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.NewTransactionResponse> NewTransactionAsync(global::Grpc.NewTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewTransactionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.NewTransactionResponse> NewTransactionAsync(global::Grpc.NewTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NewTransaction, null, options, request);
      }
      public virtual global::Grpc.SettleTransactionResponse SettleTransaction(global::Grpc.SettleTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SettleTransaction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.SettleTransactionResponse SettleTransaction(global::Grpc.SettleTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SettleTransaction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.SettleTransactionResponse> SettleTransactionAsync(global::Grpc.SettleTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SettleTransactionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.SettleTransactionResponse> SettleTransactionAsync(global::Grpc.SettleTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SettleTransaction, null, options, request);
      }
      public virtual global::Grpc.ListWorldsResponse ListWorlds(global::Grpc.ListWorldsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorlds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.ListWorldsResponse ListWorlds(global::Grpc.ListWorldsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorlds, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.ListWorldsResponse> ListWorldsAsync(global::Grpc.ListWorldsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorldsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.ListWorldsResponse> ListWorldsAsync(global::Grpc.ListWorldsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorlds, null, options, request);
      }
      public virtual global::Grpc.JoinWorldResponse JoinWorld(global::Grpc.JoinWorldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinWorld(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.JoinWorldResponse JoinWorld(global::Grpc.JoinWorldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_JoinWorld, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.JoinWorldResponse> JoinWorldAsync(global::Grpc.JoinWorldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinWorldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.JoinWorldResponse> JoinWorldAsync(global::Grpc.JoinWorldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_JoinWorld, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Grpc.SubscribeTransactionsResponse> SubscribeTransactions(global::Grpc.SubscribeTransactionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeTransactions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Grpc.SubscribeTransactionsResponse> SubscribeTransactions(global::Grpc.SubscribeTransactionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeTransactions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DonnerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DonnerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DonnerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCurrentUser, serviceImpl.GetCurrentUser)
          .AddMethod(__Method_EditUser, serviceImpl.EditUser)
          .AddMethod(__Method_ListStashes, serviceImpl.ListStashes)
          .AddMethod(__Method_ListTransactions, serviceImpl.ListTransactions)
          .AddMethod(__Method_LookupTransaction, serviceImpl.LookupTransaction)
          .AddMethod(__Method_NewTransaction, serviceImpl.NewTransaction)
          .AddMethod(__Method_SettleTransaction, serviceImpl.SettleTransaction)
          .AddMethod(__Method_ListWorlds, serviceImpl.ListWorlds)
          .AddMethod(__Method_JoinWorld, serviceImpl.JoinWorld)
          .AddMethod(__Method_SubscribeTransactions, serviceImpl.SubscribeTransactions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DonnerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetCurrentUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.GetCurrentUserRequest, global::Grpc.GetCurrentUserResponse>(serviceImpl.GetCurrentUser));
      serviceBinder.AddMethod(__Method_EditUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.EditUserRequest, global::Grpc.EditUserResponse>(serviceImpl.EditUser));
      serviceBinder.AddMethod(__Method_ListStashes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.ListStashesRequest, global::Grpc.ListStashesResponse>(serviceImpl.ListStashes));
      serviceBinder.AddMethod(__Method_ListTransactions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.ListTransactionsRequest, global::Grpc.ListTransactionsResponse>(serviceImpl.ListTransactions));
      serviceBinder.AddMethod(__Method_LookupTransaction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.LookupTransactionRequest, global::Grpc.LookupTransactionResponse>(serviceImpl.LookupTransaction));
      serviceBinder.AddMethod(__Method_NewTransaction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.NewTransactionRequest, global::Grpc.NewTransactionResponse>(serviceImpl.NewTransaction));
      serviceBinder.AddMethod(__Method_SettleTransaction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.SettleTransactionRequest, global::Grpc.SettleTransactionResponse>(serviceImpl.SettleTransaction));
      serviceBinder.AddMethod(__Method_ListWorlds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.ListWorldsRequest, global::Grpc.ListWorldsResponse>(serviceImpl.ListWorlds));
      serviceBinder.AddMethod(__Method_JoinWorld, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Grpc.JoinWorldRequest, global::Grpc.JoinWorldResponse>(serviceImpl.JoinWorld));
      serviceBinder.AddMethod(__Method_SubscribeTransactions, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Grpc.SubscribeTransactionsRequest, global::Grpc.SubscribeTransactionsResponse>(serviceImpl.SubscribeTransactions));
    }

  }
}
#endregion
